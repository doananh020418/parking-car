

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Jun 01 01:00:12 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  0087                     	;# 
   156  0088                     	;# 
   157  0089                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177  0000                     	;# 
   178  0001                     	;# 
   179  0002                     	;# 
   180  0003                     	;# 
   181  0004                     	;# 
   182  0005                     	;# 
   183  0006                     	;# 
   184  0007                     	;# 
   185  0008                     	;# 
   186  0009                     	;# 
   187  000A                     	;# 
   188  000B                     	;# 
   189  000C                     	;# 
   190  000D                     	;# 
   191  000E                     	;# 
   192  000E                     	;# 
   193  000F                     	;# 
   194  0010                     	;# 
   195  0011                     	;# 
   196  0012                     	;# 
   197  0013                     	;# 
   198  0014                     	;# 
   199  0015                     	;# 
   200  0015                     	;# 
   201  0016                     	;# 
   202  0017                     	;# 
   203  0018                     	;# 
   204  0019                     	;# 
   205  001A                     	;# 
   206  001B                     	;# 
   207  001B                     	;# 
   208  001C                     	;# 
   209  001D                     	;# 
   210  001E                     	;# 
   211  001F                     	;# 
   212  0081                     	;# 
   213  0085                     	;# 
   214  0086                     	;# 
   215  0087                     	;# 
   216  0088                     	;# 
   217  0089                     	;# 
   218  008C                     	;# 
   219  008D                     	;# 
   220  008E                     	;# 
   221  0091                     	;# 
   222  0092                     	;# 
   223  0093                     	;# 
   224  0094                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000D                     	;# 
   251  000E                     	;# 
   252  000E                     	;# 
   253  000F                     	;# 
   254  0010                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0014                     	;# 
   259  0015                     	;# 
   260  0015                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001B                     	;# 
   268  001C                     	;# 
   269  001D                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  0081                     	;# 
   273  0085                     	;# 
   274  0086                     	;# 
   275  0087                     	;# 
   276  0088                     	;# 
   277  0089                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  000E                     _TMR1	set	14
   298  001A                     _RCREG	set	26
   299  0019                     _TXREG	set	25
   300  0018                     _RCSTA	set	24
   301  0006                     _PORTB	set	6
   302  0065                     _RCIF	set	101
   303  0064                     _TXIF	set	100
   304  0031                     _RB1	set	49
   305  003D                     _RC5	set	61
   306  0037                     _RB7	set	55
   307  005C                     _INTE	set	92
   308  005B                     _RBIE	set	91
   309  0080                     _TMR1ON	set	128
   310  0085                     _T1CKPS1	set	133
   311  0084                     _T1CKPS0	set	132
   312  0081                     _TMR1CS	set	129
   313  005F                     _GIE	set	95
   314  005E                     _PEIE	set	94
   315  0060                     _TMR1IF	set	96
   316  003A                     _RC2	set	58
   317  0038                     _RC0	set	56
   318  0047                     _RD7	set	71
   319  0046                     _RD6	set	70
   320  0045                     _RD5	set	69
   321  0044                     _RD4	set	68
   322  0043                     _RD3	set	67
   323  0042                     _RD2	set	66
   324  0041                     _RD1	set	65
   325  0040                     _RD0	set	64
   326  0099                     _SPBRG	set	153
   327  0098                     _TXSTA	set	152
   328  0088                     _TRISD	set	136
   329  0087                     _TRISC	set	135
   330  0086                     _TRISB	set	134
   331  0429                     _TRISA1	set	1065
   332  0428                     _TRISA0	set	1064
   333  040E                     _INTEDG	set	1038
   334  0460                     _TMR1IE	set	1120
   335                           
   336                           	psect	strings
   337  0003                     __pstrings:
   338  0003                     stringtab:
   339  0003                     __stringtab:
   340  0003                     stringcode:	
   341                           ;	String table - string pointers are 1 byte each
   342                           
   343  0003                     stringdir:
   344  0003  3000               	movlw	high stringdir
   345  0004  008A               	movwf	10
   346  0005  0804               	movf	4,w
   347  0006  0A84               	incf	4,f
   348  0007  0782               	addwf	2,f
   349  0008                     __stringbase:
   350  0008  3400               	retlw	0
   351  0009                     __end_of__stringtab:
   352  0009                     STR_5:
   353  0009  343C               	retlw	60	;'<'
   354  000A  343C               	retlw	60	;'<'
   355  000B  3453               	retlw	83	;'S'
   356  000C  3448               	retlw	72	;'H'
   357  000D  344F               	retlw	79	;'O'
   358  000E  3457               	retlw	87	;'W'
   359  000F  3420               	retlw	32	;' '
   360  0010  3455               	retlw	85	;'U'
   361  0011  3452               	retlw	82	;'R'
   362  0012  3420               	retlw	32	;' '
   363  0013  3443               	retlw	67	;'C'
   364  0014  3441               	retlw	65	;'A'
   365  0015  3452               	retlw	82	;'R'
   366  0016  3444               	retlw	68	;'D'
   367  0017  343E               	retlw	62	;'>'
   368  0018  343E               	retlw	62	;'>'
   369  0019  3400               	retlw	0
   370  001A                     STR_1:
   371  001A  3431               	retlw	49	;'1'
   372  001B  3431               	retlw	49	;'1'
   373  001C  3431               	retlw	49	;'1'
   374  001D  3431               	retlw	49	;'1'
   375  001E  3431               	retlw	49	;'1'
   376  001F  3431               	retlw	49	;'1'
   377  0020  3431               	retlw	49	;'1'
   378  0021  3431               	retlw	49	;'1'
   379  0022  3431               	retlw	49	;'1'
   380  0023  3431               	retlw	49	;'1'
   381  0024  3431               	retlw	49	;'1'
   382  0025  3431               	retlw	49	;'1'
   383  0026  3400               	retlw	0
   384  0027                     STR_2:
   385  0027  3453               	retlw	83	;'S'
   386  0028  3474               	retlw	116	;'t'
   387  0029  3461               	retlw	97	;'a'
   388  002A  3474               	retlw	116	;'t'
   389  002B  3475               	retlw	117	;'u'
   390  002C  3473               	retlw	115	;'s'
   391  002D  343A               	retlw	58	;':'
   392  002E  3420               	retlw	32	;' '
   393  002F  3400               	retlw	0
   394  0030                     STR_3:
   395  0030  344F               	retlw	79	;'O'
   396  0031  3470               	retlw	112	;'p'
   397  0032  3465               	retlw	101	;'e'
   398  0033  346E               	retlw	110	;'n'
   399  0034  3465               	retlw	101	;'e'
   400  0035  3464               	retlw	100	;'d'
   401  0036  3400               	retlw	0
   402  0037                     STR_4:
   403  0037  3443               	retlw	67	;'C'
   404  0038  346C               	retlw	108	;'l'
   405  0039  346F               	retlw	111	;'o'
   406  003A  3473               	retlw	115	;'s'
   407  003B  3465               	retlw	101	;'e'
   408  003C  3464               	retlw	100	;'d'
   409  003D  3400               	retlw	0
   410  003E                     STR_6:
   411  003E  3468               	retlw	104	;'h'
   412  003F  346A               	retlw	106	;'j'
   413  0040  3468               	retlw	104	;'h'
   414  0041  346A               	retlw	106	;'j'
   415  0042  3400               	retlw	0
   416                           
   417                           	psect	cinit
   418  07F0                     start_initialization:	
   419                           ; #config settings
   420                           
   421  07F0                     __initialization:
   422                           
   423                           ; Clear objects allocated to COMMON
   424  07F0  01F8               	clrf	__pbssCOMMON& (0+127)
   425  07F1  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   426  07F2  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   427  07F3  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   428  07F4  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   429  07F5  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   430                           
   431                           ; Clear objects allocated to BANK0
   432  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   433  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   434  07F8  01AE               	clrf	__pbssBANK0& (0+127)
   435  07F9  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   436  07FA  01B0               	clrf	(__pbssBANK0+2)& (0+127)
   437  07FB  01B1               	clrf	(__pbssBANK0+3)& (0+127)
   438  07FC                     end_of_initialization:	
   439                           ;End of C runtime variable initialization code
   440                           
   441  07FC                     __end_of__initialization:
   442  07FC  0183               	clrf	3
   443  07FD  120A  118A  2F83   	ljmp	_main	;jump to C main() function
   444                           
   445                           	psect	bssCOMMON
   446  0078                     __pbssCOMMON:
   447  0078                     _numberID:
   448  0078                     	ds	2
   449  007A                     _parkingTime:
   450  007A                     	ds	2
   451  007C                     _counter:
   452  007C                     	ds	2
   453                           
   454                           	psect	bssBANK0
   455  002E                     __pbssBANK0:
   456  002E                     _isOpened:
   457  002E                     	ds	2
   458  0030                     _hold:
   459  0030                     	ds	2
   460                           
   461                           	psect	cstackCOMMON
   462  0070                     __pcstackCOMMON:
   463  0070                     ?_ser_int:
   464  0070                     ??_ser_int:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_rx:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ??_rx:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_Lcd8_Port:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ??_Lcd8_Port:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_Lcd8_Cmd:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_Lcd8_Init:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_Lcd8_Write_Char:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_Lcd8_Write_String:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_timerInit:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ??_timerInit:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_main:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     Lcd8_Port@a:	
   501                           ; 1 bytes @ 0x0
   502                           
   503                           
   504                           ; 1 bytes @ 0x0
   505  0070                     	ds	1
   506  0071                     ??_Lcd8_Cmd:
   507  0071                     ??_Lcd8_Write_Char:	
   508                           ; 1 bytes @ 0x1
   509                           
   510                           
   511                           ; 1 bytes @ 0x1
   512  0071                     	ds	2
   513  0073                     Lcd8_Cmd@a:
   514  0073                     Lcd8_Write_Char@a:	
   515                           ; 1 bytes @ 0x3
   516                           
   517                           
   518                           ; 1 bytes @ 0x3
   519  0073                     	ds	1
   520  0074                     ?_Lcd8_Set_Cursor:
   521  0074                     ??_Lcd8_Init:	
   522                           ; 1 bytes @ 0x4
   523                           
   524  0074                     ??_Lcd8_Write_String:	
   525                           ; 1 bytes @ 0x4
   526                           
   527  0074                     Lcd8_Set_Cursor@b:	
   528                           ; 1 bytes @ 0x4
   529                           
   530  0074                     Lcd8_Write_String@i:	
   531                           ; 1 bytes @ 0x4
   532                           
   533                           
   534                           ; 2 bytes @ 0x4
   535  0074                     	ds	1
   536  0075                     ??_Lcd8_Set_Cursor:
   537  0075                     Lcd8_Set_Cursor@a:	
   538                           ; 1 bytes @ 0x5
   539                           
   540                           
   541                           ; 1 bytes @ 0x5
   542  0075                     	ds	1
   543  0076                     Lcd8_Write_String@a:
   544                           
   545                           ; 1 bytes @ 0x6
   546  0076                     	ds	1
   547  0077                     ??_main:
   548                           
   549                           ; 1 bytes @ 0x7
   550  0077                     	ds	1
   551                           
   552                           	psect	cstackBANK0
   553  0020                     __pcstackBANK0:
   554  0020                     main@id:
   555                           
   556                           ; 12 bytes @ 0x0
   557  0020                     	ds	12
   558  002C                     main@i_168:
   559                           
   560                           ; 2 bytes @ 0xC
   561  002C                     	ds	2
   562                           
   563                           	psect	maintext
   564  0783                     __pmaintext:	
   565 ;;
   566 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   567 ;;
   568 ;; *************** function _main *****************
   569 ;; Defined at:
   570 ;;		line 123 in file "parkingCar.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;		None
   573 ;; Auto vars:     Size  Location     Type
   574 ;;  i               2   12[BANK0 ] int 
   575 ;;  id             12    0[BANK0 ] unsigned char [12]
   576 ;;  i               2    0        int 
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : B00/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   586 ;;      Params:         0       0       0       0       0
   587 ;;      Locals:         0      14       0       0       0
   588 ;;      Temps:          1       0       0       0       0
   589 ;;      Totals:         1      14       0       0       0
   590 ;;Total ram usage:       15 bytes
   591 ;; Hardware stack levels required when called:    3
   592 ;; This function calls:
   593 ;;		_Lcd8_Init
   594 ;;		_Lcd8_Set_Cursor
   595 ;;		_Lcd8_Write_String
   596 ;;		_rx
   597 ;;		_ser_int
   598 ;;		_timerInit
   599 ;; This function is called by:
   600 ;;		Startup code after reset
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           
   605                           ;psect for function _main
   606  0783                     _main:
   607  0783                     l1275:	
   608                           ;incstack = 0
   609                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   610                           
   611  0783  120A  118A  2662  120A  118A  	fcall	_timerInit
   612  0788                     l1277:
   613  0788  1683               	bsf	3,5	;RP0=1, select bank1
   614  0789  1303               	bcf	3,6	;RP1=0, select bank1
   615  078A  1701               	bsf	1,6	;volatile
   616  078B                     l1279:
   617  078B  158B               	bsf	11,3	;volatile
   618  078C                     l1281:
   619  078C  160B               	bsf	11,4	;volatile
   620  078D                     l1283:
   621  078D  30F1               	movlw	241
   622  078E  0086               	movwf	6	;volatile
   623  078F                     l1285:
   624  078F  1283               	bcf	3,5	;RP0=0, select bank0
   625  0790  1303               	bcf	3,6	;RP1=0, select bank0
   626  0791  0186               	clrf	6	;volatile
   627  0792                     l1287:
   628  0792  30C0               	movlw	192
   629  0793  1683               	bsf	3,5	;RP0=1, select bank1
   630  0794  1303               	bcf	3,6	;RP1=0, select bank1
   631  0795  0087               	movwf	7	;volatile
   632  0796                     l1289:
   633  0796  1283               	bcf	3,5	;RP0=0, select bank0
   634  0797  1303               	bcf	3,6	;RP1=0, select bank0
   635  0798  1786               	bsf	6,7	;volatile
   636  0799                     l1291:
   637  0799  1683               	bsf	3,5	;RP0=1, select bank1
   638  079A  1303               	bcf	3,6	;RP1=0, select bank1
   639  079B  0188               	clrf	8	;volatile
   640  079C                     l1293:
   641  079C  1405               	bsf	5,0	;volatile
   642  079D                     l1295:
   643  079D  1485               	bsf	5,1	;volatile
   644  079E                     l1297:
   645  079E  120A  118A  2735  120A  118A  	fcall	_Lcd8_Init
   646  07A3                     l1299:
   647  07A3  1283               	bcf	3,5	;RP0=0, select bank0
   648  07A4  1303               	bcf	3,6	;RP1=0, select bank0
   649  07A5  1287               	bcf	7,5	;volatile
   650  07A6                     l1301:
   651  07A6  120A  118A  2671  120A  118A  	fcall	_ser_int
   652  07AB                     l1303:
   653  07AB  01F4               	clrf	Lcd8_Set_Cursor@b
   654  07AC  0AF4               	incf	Lcd8_Set_Cursor@b,f
   655  07AD  3001               	movlw	1
   656  07AE  120A  118A  26B6  120A  118A  	fcall	_Lcd8_Set_Cursor
   657  07B3                     l1305:
   658  07B3  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   659  07B4  120A  118A  26D2  120A  118A  	fcall	_Lcd8_Write_String
   660  07B9                     l1307:
   661                           
   662                           ;parkingCar.c: 195:         for(int i=0; i<12; i++) {
   663  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   664  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   665  07BB  01AC               	clrf	main@i_168
   666  07BC  01AD               	clrf	main@i_168+1
   667  07BD                     l1313:
   668                           
   669                           ;parkingCar.c: 196:             id[i]=rx();
   670  07BD  120A  118A  2659  120A  118A  	fcall	_rx
   671  07C2  00F7               	movwf	??_main
   672  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   673  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   674  07C5  082C               	movf	main@i_168,w
   675  07C6  3E20               	addlw	(low (main@id| 0))& (0+255)
   676  07C7  0084               	movwf	4
   677  07C8  0877               	movf	??_main,w
   678  07C9  1383               	bcf	3,7	;select IRP bank0
   679  07CA  0080               	movwf	0
   680  07CB                     l1315:
   681                           
   682                           ;parkingCar.c: 198:         }
   683  07CB  3001               	movlw	1
   684  07CC  07AC               	addwf	main@i_168,f
   685  07CD  1803               	skipnc
   686  07CE  0AAD               	incf	main@i_168+1,f
   687  07CF  3000               	movlw	0
   688  07D0  07AD               	addwf	main@i_168+1,f
   689  07D1                     l1317:
   690  07D1  082D               	movf	main@i_168+1,w
   691  07D2  3A80               	xorlw	128
   692  07D3  00FF               	movwf	btemp+1
   693  07D4  3080               	movlw	128
   694  07D5  027F               	subwf	btemp+1,w
   695  07D6  1D03               	skipz
   696  07D7  2FDA               	goto	u425
   697  07D8  300C               	movlw	12
   698  07D9  022C               	subwf	main@i_168,w
   699  07DA                     u425:
   700  07DA  1C03               	skipc
   701  07DB  2FDD               	goto	u421
   702  07DC  2FDE               	goto	u420
   703  07DD                     u421:
   704  07DD  2FBD               	goto	l1313
   705  07DE                     u420:
   706  07DE                     l1319:
   707                           
   708                           ;parkingCar.c: 203:         Lcd8_Set_Cursor(2,1);
   709  07DE  01F4               	clrf	Lcd8_Set_Cursor@b
   710  07DF  0AF4               	incf	Lcd8_Set_Cursor@b,f
   711  07E0  3002               	movlw	2
   712  07E1  120A  118A  26B6  120A  118A  	fcall	_Lcd8_Set_Cursor
   713  07E6                     l1321:
   714                           
   715                           ;parkingCar.c: 204:         Lcd8_Write_String("hjhj");
   716  07E6  3036               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   717  07E7  120A  118A  26D2  120A  118A  	fcall	_Lcd8_Write_String
   718  07EC  2FB9               	goto	l1307
   719  07ED  120A  118A  2800   	ljmp	start
   720  07F0                     __end_of_main:
   721                           
   722                           	psect	text1
   723  0662                     __ptext1:	
   724 ;; *************** function _timerInit *****************
   725 ;; Defined at:
   726 ;;		line 93 in file "parkingCar.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;		None
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		status,2
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   740 ;;      Params:         0       0       0       0       0
   741 ;;      Locals:         0       0       0       0       0
   742 ;;      Temps:          0       0       0       0       0
   743 ;;      Totals:         0       0       0       0       0
   744 ;;Total ram usage:        0 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; This function calls:
   747 ;;		Nothing
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           
   754                           ;psect for function _timerInit
   755  0662                     _timerInit:
   756  0662                     l1237:	
   757                           ;incstack = 0
   758                           ; Regs used in _timerInit: [status,2]
   759                           
   760                           
   761                           ;parkingCar.c: 94:     RC5 = 0;
   762  0662  1683               	bsf	3,5	;RP0=1, select bank1
   763  0663  1303               	bcf	3,6	;RP1=0, select bank1
   764  0664  140C               	bsf	12,0	;volatile
   765                           
   766                           ;parkingCar.c: 95: 
   767  0665  1283               	bcf	3,5	;RP0=0, select bank0
   768  0666  1303               	bcf	3,6	;RP1=0, select bank0
   769  0667  100C               	bcf	12,0	;volatile
   770                           
   771                           ;parkingCar.c: 96:     int i;
   772  0668  170B               	bsf	11,6	;volatile
   773                           
   774                           ;parkingCar.c: 97:     unsigned char id[12];
   775  0669  178B               	bsf	11,7	;volatile
   776  066A                     l1239:
   777                           
   778                           ;parkingCar.c: 101:     Lcd8_Write_String("<<SHOW UR CARD>>");
   779  066A  018E               	clrf	14	;volatile
   780  066B  018F               	clrf	15	;volatile
   781  066C                     l1241:
   782                           
   783                           ;parkingCar.c: 103:     while (1) {
   784  066C  1090               	bcf	16,1	;volatile
   785  066D                     l1243:
   786  066D  1210               	bcf	16,4	;volatile
   787  066E                     l1245:
   788  066E  1290               	bcf	16,5	;volatile
   789  066F                     l1247:
   790  066F  1410               	bsf	16,0	;volatile
   791  0670                     l208:
   792  0670  0008               	return
   793  0671                     __end_of_timerInit:
   794                           
   795                           	psect	text2
   796  0671                     __ptext2:	
   797 ;; *************** function _ser_int *****************
   798 ;; Defined at:
   799 ;;		line 251 in file "parkingCar.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;		None
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   813 ;;      Params:         0       0       0       0       0
   814 ;;      Locals:         0       0       0       0       0
   815 ;;      Temps:          0       0       0       0       0
   816 ;;      Totals:         0       0       0       0       0
   817 ;;Total ram usage:        0 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		_main
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           
   827                           ;psect for function _ser_int
   828  0671                     _ser_int:
   829  0671                     l1249:	
   830                           ;incstack = 0
   831                           ; Regs used in _ser_int: [wreg]
   832                           
   833                           
   834                           ;parkingCar.c: 252:     TXSTA = 0x20;
   835  0671  3020               	movlw	32
   836  0672  1683               	bsf	3,5	;RP0=1, select bank1
   837  0673  1303               	bcf	3,6	;RP1=0, select bank1
   838  0674  0098               	movwf	24	;volatile
   839                           
   840                           ;parkingCar.c: 253:     RCSTA = 0b10010000;
   841  0675  3090               	movlw	144
   842  0676  1283               	bcf	3,5	;RP0=0, select bank0
   843  0677  1303               	bcf	3,6	;RP1=0, select bank0
   844  0678  0098               	movwf	24	;volatile
   845                           
   846                           ;parkingCar.c: 254:     SPBRG = 17;
   847  0679  3011               	movlw	17
   848  067A  1683               	bsf	3,5	;RP0=1, select bank1
   849  067B  1303               	bcf	3,6	;RP1=0, select bank1
   850  067C  0099               	movwf	25	;volatile
   851  067D                     l1251:
   852                           
   853                           ;parkingCar.c: 255:     TXIF = RCIF = 0;
   854  067D  1283               	bcf	3,5	;RP0=0, select bank0
   855  067E  1303               	bcf	3,6	;RP1=0, select bank0
   856  067F  128C               	bcf	12,5	;volatile
   857  0680  120C               	bcf	12,4	;volatile
   858  0681                     l236:
   859  0681  0008               	return
   860  0682                     __end_of_ser_int:
   861                           
   862                           	psect	text3
   863  0659                     __ptext3:	
   864 ;; *************** function _rx *****************
   865 ;; Defined at:
   866 ;;		line 264 in file "parkingCar.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      unsigned char 
   873 ;; Registers used:
   874 ;;		wreg
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   880 ;;      Params:         0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0
   882 ;;      Temps:          0       0       0       0       0
   883 ;;      Totals:         0       0       0       0       0
   884 ;;Total ram usage:        0 bytes
   885 ;; Hardware stack levels used:    1
   886 ;; This function calls:
   887 ;;		Nothing
   888 ;; This function is called by:
   889 ;;		_main
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           
   894                           ;psect for function _rx
   895  0659                     _rx:
   896  0659                     l1253:	
   897                           ;incstack = 0
   898                           ; Regs used in _rx: [wreg]
   899                           
   900  0659                     l245:	
   901                           ;parkingCar.c: 265:     while (!RCIF);
   902                           
   903  0659  1283               	bcf	3,5	;RP0=0, select bank0
   904  065A  1303               	bcf	3,6	;RP1=0, select bank0
   905  065B  1E8C               	btfss	12,5	;volatile
   906  065C  2E5E               	goto	u411
   907  065D  2E5F               	goto	u410
   908  065E                     u411:
   909  065E  2E59               	goto	l245
   910  065F                     u410:
   911  065F                     l247:
   912                           
   913                           ;parkingCar.c: 266:     RCIF = 0;
   914  065F  128C               	bcf	12,5	;volatile
   915  0660                     l1255:
   916                           
   917                           ;parkingCar.c: 267:     return RCREG;
   918  0660  081A               	movf	26,w	;volatile
   919  0661                     l248:
   920  0661  0008               	return
   921  0662                     __end_of_rx:
   922                           
   923                           	psect	text4
   924  06D2                     __ptext4:	
   925 ;; *************** function _Lcd8_Write_String *****************
   926 ;; Defined at:
   927 ;;		line 105 in file "./lcd.h"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  a               1    wreg     PTR unsigned char 
   930 ;;		 -> STR_6(5), STR_5(17), STR_4(7), STR_3(7), 
   931 ;;		 -> STR_2(9), 
   932 ;; Auto vars:     Size  Location     Type
   933 ;;  a               1    6[COMMON] PTR unsigned char 
   934 ;;		 -> STR_6(5), STR_5(17), STR_4(7), STR_3(7), 
   935 ;;		 -> STR_2(9), 
   936 ;;  i               2    4[COMMON] int 
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   946 ;;      Params:         0       0       0       0       0
   947 ;;      Locals:         3       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0
   949 ;;      Totals:         3       0       0       0       0
   950 ;;Total ram usage:        3 bytes
   951 ;; Hardware stack levels used:    1
   952 ;; Hardware stack levels required when called:    2
   953 ;; This function calls:
   954 ;;		_Lcd8_Write_Char
   955 ;; This function is called by:
   956 ;;		_main
   957 ;;		_checkGateStatus
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           
   962                           ;psect for function _Lcd8_Write_String
   963  06D2                     _Lcd8_Write_String:
   964                           
   965                           ;incstack = 0
   966                           ; Regs used in _Lcd8_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   967                           ;Lcd8_Write_String@a stored from wreg
   968  06D2  00F6               	movwf	Lcd8_Write_String@a
   969  06D3                     l1229:
   970                           
   971                           ;./lcd.h: 105: void Lcd8_Write_String(char *a);./lcd.h: 106: {;./lcd.h: 107:  int i;;./l
      +                          cd.h: 108:  for(i=0;a[i]!='\0';i++)
   972  06D3  01F4               	clrf	Lcd8_Write_String@i
   973  06D4  01F5               	clrf	Lcd8_Write_String@i+1
   974  06D5  2EE9               	goto	l1235
   975  06D6                     l1231:
   976                           
   977                           ;./lcd.h: 109:   Lcd8_Write_Char(a[i]);
   978  06D6  0874               	movf	Lcd8_Write_String@i,w
   979  06D7  0776               	addwf	Lcd8_Write_String@a,w
   980  06D8  0084               	movwf	4
   981  06D9  120A  118A  2003  120A  118A  	fcall	stringdir
   982  06DE  120A  118A  269C  120A  118A  	fcall	_Lcd8_Write_Char
   983  06E3                     l1233:
   984  06E3  3001               	movlw	1
   985  06E4  07F4               	addwf	Lcd8_Write_String@i,f
   986  06E5  1803               	skipnc
   987  06E6  0AF5               	incf	Lcd8_Write_String@i+1,f
   988  06E7  3000               	movlw	0
   989  06E8  07F5               	addwf	Lcd8_Write_String@i+1,f
   990  06E9                     l1235:
   991  06E9  0874               	movf	Lcd8_Write_String@i,w
   992  06EA  0776               	addwf	Lcd8_Write_String@a,w
   993  06EB  0084               	movwf	4
   994  06EC  120A  118A  2003  120A  118A  	fcall	stringdir
   995  06F1  3A00               	xorlw	0
   996  06F2  1D03               	skipz
   997  06F3  2EF5               	goto	u401
   998  06F4  2EF6               	goto	u400
   999  06F5                     u401:
  1000  06F5  2ED6               	goto	l1231
  1001  06F6                     u400:
  1002  06F6                     l131:
  1003  06F6  0008               	return
  1004  06F7                     __end_of_Lcd8_Write_String:
  1005                           
  1006                           	psect	text5
  1007  069C                     __ptext5:	
  1008 ;; *************** function _Lcd8_Write_Char *****************
  1009 ;; Defined at:
  1010 ;;		line 96 in file "./lcd.h"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  a               1    wreg     unsigned char 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  a               1    3[COMMON] unsigned char 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      void 
  1017 ;; Registers used:
  1018 ;;		wreg, status,2, status,0, pclath, cstack
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1024 ;;      Params:         0       0       0       0       0
  1025 ;;      Locals:         1       0       0       0       0
  1026 ;;      Temps:          2       0       0       0       0
  1027 ;;      Totals:         3       0       0       0       0
  1028 ;;Total ram usage:        3 bytes
  1029 ;; Hardware stack levels used:    1
  1030 ;; Hardware stack levels required when called:    1
  1031 ;; This function calls:
  1032 ;;		_Lcd8_Port
  1033 ;; This function is called by:
  1034 ;;		_Lcd8_Write_String
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           
  1039                           ;psect for function _Lcd8_Write_Char
  1040  069C                     _Lcd8_Write_Char:
  1041                           
  1042                           ;incstack = 0
  1043                           ; Regs used in _Lcd8_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1044                           ;Lcd8_Write_Char@a stored from wreg
  1045  069C  00F3               	movwf	Lcd8_Write_Char@a
  1046  069D                     l1199:
  1047                           
  1048                           ;./lcd.h: 96: void Lcd8_Write_Char(char a);./lcd.h: 97: {;./lcd.h: 98:    RC0 = 1;
  1049  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1050  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1051  069F  1407               	bsf	7,0	;volatile
  1052  06A0                     l1201:
  1053                           
  1054                           ;./lcd.h: 99:    Lcd8_Port(a);
  1055  06A0  0873               	movf	Lcd8_Write_Char@a,w
  1056  06A1  120A  118A  26F7  120A  118A  	fcall	_Lcd8_Port
  1057  06A6                     l1203:
  1058                           
  1059                           ;./lcd.h: 100:    RC2 = 1;
  1060  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  1061  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  1062  06A8  1507               	bsf	7,2	;volatile
  1063  06A9                     l1205:
  1064                           
  1065                           ;./lcd.h: 101:   _delay((unsigned long)((4)*(16000000/4000.0)));
  1066  06A9  3015               	movlw	21
  1067  06AA  00F2               	movwf	??_Lcd8_Write_Char+1
  1068  06AB  30C6               	movlw	198
  1069  06AC  00F1               	movwf	??_Lcd8_Write_Char
  1070  06AD                     u437:
  1071  06AD  0BF1               	decfsz	??_Lcd8_Write_Char,f
  1072  06AE  2EAD               	goto	u437
  1073  06AF  0BF2               	decfsz	??_Lcd8_Write_Char+1,f
  1074  06B0  2EAD               	goto	u437
  1075  06B1  0000               	nop
  1076  06B2                     l1207:
  1077                           
  1078                           ;./lcd.h: 102:    RC2 = 0;
  1079  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  1080  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  1081  06B4  1107               	bcf	7,2	;volatile
  1082  06B5                     l125:
  1083  06B5  0008               	return
  1084  06B6                     __end_of_Lcd8_Write_Char:
  1085                           
  1086                           	psect	text6
  1087  06B6                     __ptext6:	
  1088 ;; *************** function _Lcd8_Set_Cursor *****************
  1089 ;; Defined at:
  1090 ;;		line 70 in file "./lcd.h"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;  a               1    wreg     unsigned char 
  1093 ;;  b               1    4[COMMON] unsigned char 
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;  a               1    5[COMMON] unsigned char 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		wreg, status,2, status,0, pclath, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1105 ;;      Params:         1       0       0       0       0
  1106 ;;      Locals:         1       0       0       0       0
  1107 ;;      Temps:          0       0       0       0       0
  1108 ;;      Totals:         2       0       0       0       0
  1109 ;;Total ram usage:        2 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; Hardware stack levels required when called:    2
  1112 ;; This function calls:
  1113 ;;		_Lcd8_Cmd
  1114 ;; This function is called by:
  1115 ;;		_main
  1116 ;;		_checkGateStatus
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           
  1121                           ;psect for function _Lcd8_Set_Cursor
  1122  06B6                     _Lcd8_Set_Cursor:
  1123                           
  1124                           ;incstack = 0
  1125                           ; Regs used in _Lcd8_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1126                           ;Lcd8_Set_Cursor@a stored from wreg
  1127  06B6  00F5               	movwf	Lcd8_Set_Cursor@a
  1128  06B7                     l1209:
  1129                           
  1130                           ;./lcd.h: 70: void Lcd8_Set_Cursor(char a, char b);./lcd.h: 71: {;./lcd.h: 72:  if(a == 
      +                          1)
  1131  06B7  0375               	decf	Lcd8_Set_Cursor@a,w
  1132  06B8  1D03               	btfss	3,2
  1133  06B9  2EBB               	goto	u381
  1134  06BA  2EBC               	goto	u380
  1135  06BB                     u381:
  1136  06BB  2EC4               	goto	l1213
  1137  06BC                     u380:
  1138  06BC                     l1211:
  1139                           
  1140                           ;./lcd.h: 73:    Lcd8_Cmd(0x80 + b);
  1141  06BC  0874               	movf	Lcd8_Set_Cursor@b,w
  1142  06BD  3E80               	addlw	128
  1143  06BE  120A  118A  2682  120A  118A  	fcall	_Lcd8_Cmd
  1144  06C3  2ED1               	goto	l119
  1145  06C4                     l1213:
  1146  06C4  3002               	movlw	2
  1147  06C5  0675               	xorwf	Lcd8_Set_Cursor@a,w
  1148  06C6  1D03               	btfss	3,2
  1149  06C7  2EC9               	goto	u391
  1150  06C8  2ECA               	goto	u390
  1151  06C9                     u391:
  1152  06C9  2ED1               	goto	l119
  1153  06CA                     u390:
  1154  06CA                     l1215:
  1155                           
  1156                           ;./lcd.h: 75:   Lcd8_Cmd(0xC0 + b);
  1157  06CA  0874               	movf	Lcd8_Set_Cursor@b,w
  1158  06CB  3EC0               	addlw	192
  1159  06CC  120A  118A  2682  120A  118A  	fcall	_Lcd8_Cmd
  1160  06D1                     l119:
  1161  06D1  0008               	return
  1162  06D2                     __end_of_Lcd8_Set_Cursor:
  1163                           
  1164                           	psect	text7
  1165  0735                     __ptext7:	
  1166 ;; *************** function _Lcd8_Init *****************
  1167 ;; Defined at:
  1168 ;;		line 78 in file "./lcd.h"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0, pclath, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1182 ;;      Params:         0       0       0       0       0
  1183 ;;      Locals:         0       0       0       0       0
  1184 ;;      Temps:          2       0       0       0       0
  1185 ;;      Totals:         2       0       0       0       0
  1186 ;;Total ram usage:        2 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    2
  1189 ;; This function calls:
  1190 ;;		_Lcd8_Cmd
  1191 ;;		_Lcd8_Port
  1192 ;; This function is called by:
  1193 ;;		_main
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           
  1198                           ;psect for function _Lcd8_Init
  1199  0735                     _Lcd8_Init:
  1200  0735                     l1217:	
  1201                           ;incstack = 0
  1202                           ; Regs used in _Lcd8_Init: [wreg+status,2+status,0+pclath+cstack]
  1203                           
  1204                           
  1205                           ;./lcd.h: 80:  Lcd8_Port(0x00);
  1206  0735  3000               	movlw	0
  1207  0736  120A  118A  26F7  120A  118A  	fcall	_Lcd8_Port
  1208  073B                     l1219:
  1209                           
  1210                           ;./lcd.h: 81:  RC0 = 0;
  1211  073B  1283               	bcf	3,5	;RP0=0, select bank0
  1212  073C  1303               	bcf	3,6	;RP1=0, select bank0
  1213  073D  1007               	bcf	7,0	;volatile
  1214  073E                     l1221:
  1215                           
  1216                           ;./lcd.h: 82:  _delay((unsigned long)((25)*(16000000/4000.0)));
  1217  073E  3082               	movlw	130
  1218  073F  00F5               	movwf	??_Lcd8_Init+1
  1219  0740  30DD               	movlw	221
  1220  0741  00F4               	movwf	??_Lcd8_Init
  1221  0742                     u447:
  1222  0742  0BF4               	decfsz	??_Lcd8_Init,f
  1223  0743  2F42               	goto	u447
  1224  0744  0BF5               	decfsz	??_Lcd8_Init+1,f
  1225  0745  2F42               	goto	u447
  1226  0746  2F47               	nop2
  1227  0747                     l1223:
  1228                           
  1229                           ;./lcd.h: 84:   Lcd8_Cmd(0x30);
  1230  0747  3030               	movlw	48
  1231  0748  120A  118A  2682  120A  118A  	fcall	_Lcd8_Cmd
  1232                           
  1233                           ;./lcd.h: 85: _delay((unsigned long)((5)*(16000000/4000.0)));
  1234  074D  301A               	movlw	26
  1235  074E  00F5               	movwf	??_Lcd8_Init+1
  1236  074F  30F8               	movlw	248
  1237  0750  00F4               	movwf	??_Lcd8_Init
  1238  0751                     u457:
  1239  0751  0BF4               	decfsz	??_Lcd8_Init,f
  1240  0752  2F51               	goto	u457
  1241  0753  0BF5               	decfsz	??_Lcd8_Init+1,f
  1242  0754  2F51               	goto	u457
  1243  0755  0000               	nop
  1244  0756                     l1225:
  1245                           
  1246                           ;./lcd.h: 86:   Lcd8_Cmd(0x30);
  1247  0756  3030               	movlw	48
  1248  0757  120A  118A  2682  120A  118A  	fcall	_Lcd8_Cmd
  1249  075C                     l1227:
  1250                           
  1251                           ;./lcd.h: 87:  _delay((unsigned long)((15)*(16000000/4000.0)));
  1252  075C  304E               	movlw	78
  1253  075D  00F5               	movwf	??_Lcd8_Init+1
  1254  075E  30EB               	movlw	235
  1255  075F  00F4               	movwf	??_Lcd8_Init
  1256  0760                     u467:
  1257  0760  0BF4               	decfsz	??_Lcd8_Init,f
  1258  0761  2F60               	goto	u467
  1259  0762  0BF5               	decfsz	??_Lcd8_Init+1,f
  1260  0763  2F60               	goto	u467
  1261                           
  1262                           ;./lcd.h: 88:   Lcd8_Cmd(0x30);
  1263  0764  3030               	movlw	48
  1264  0765  120A  118A  2682  120A  118A  	fcall	_Lcd8_Cmd
  1265                           
  1266                           ;./lcd.h: 90:   Lcd8_Cmd(0x38);
  1267  076A  3038               	movlw	56
  1268  076B  120A  118A  2682  120A  118A  	fcall	_Lcd8_Cmd
  1269                           
  1270                           ;./lcd.h: 91:   Lcd8_Cmd(0x0C);
  1271  0770  300C               	movlw	12
  1272  0771  120A  118A  2682  120A  118A  	fcall	_Lcd8_Cmd
  1273                           
  1274                           ;./lcd.h: 92:   Lcd8_Cmd(0x01);
  1275  0776  3001               	movlw	1
  1276  0777  120A  118A  2682  120A  118A  	fcall	_Lcd8_Cmd
  1277                           
  1278                           ;./lcd.h: 93:   Lcd8_Cmd(0x06);
  1279  077C  3006               	movlw	6
  1280  077D  120A  118A  2682  120A  118A  	fcall	_Lcd8_Cmd
  1281  0782                     l122:
  1282  0782  0008               	return
  1283  0783                     __end_of_Lcd8_Init:
  1284                           
  1285                           	psect	text8
  1286  0682                     __ptext8:	
  1287 ;; *************** function _Lcd8_Cmd *****************
  1288 ;; Defined at:
  1289 ;;		line 56 in file "./lcd.h"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  a               1    wreg     unsigned char 
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  a               1    3[COMMON] unsigned char 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, status,2, status,0, pclath, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1303 ;;      Params:         0       0       0       0       0
  1304 ;;      Locals:         1       0       0       0       0
  1305 ;;      Temps:          2       0       0       0       0
  1306 ;;      Totals:         3       0       0       0       0
  1307 ;;Total ram usage:        3 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; Hardware stack levels required when called:    1
  1310 ;; This function calls:
  1311 ;;		_Lcd8_Port
  1312 ;; This function is called by:
  1313 ;;		_Lcd8_Set_Cursor
  1314 ;;		_Lcd8_Init
  1315 ;;		_Lcd8_Clear
  1316 ;;		_Lcd8_Shift_Right
  1317 ;;		_Lcd8_Shift_Left
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           
  1322                           ;psect for function _Lcd8_Cmd
  1323  0682                     _Lcd8_Cmd:
  1324                           
  1325                           ;incstack = 0
  1326                           ; Regs used in _Lcd8_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1327                           ;Lcd8_Cmd@a stored from wreg
  1328  0682  00F3               	movwf	Lcd8_Cmd@a
  1329  0683                     l1189:
  1330                           
  1331                           ;./lcd.h: 56: void Lcd8_Cmd(char a);./lcd.h: 57: {;./lcd.h: 58:   RC0 = 0;
  1332  0683  1283               	bcf	3,5	;RP0=0, select bank0
  1333  0684  1303               	bcf	3,6	;RP1=0, select bank0
  1334  0685  1007               	bcf	7,0	;volatile
  1335  0686                     l1191:
  1336                           
  1337                           ;./lcd.h: 59:   Lcd8_Port(a);
  1338  0686  0873               	movf	Lcd8_Cmd@a,w
  1339  0687  120A  118A  26F7  120A  118A  	fcall	_Lcd8_Port
  1340  068C                     l1193:
  1341                           
  1342                           ;./lcd.h: 60:   RC2 = 1;
  1343  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1344  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1345  068E  1507               	bsf	7,2	;volatile
  1346  068F                     l1195:
  1347                           
  1348                           ;./lcd.h: 61:   _delay((unsigned long)((5)*(16000000/4000.0)));
  1349  068F  301A               	movlw	26
  1350  0690  00F2               	movwf	??_Lcd8_Cmd+1
  1351  0691  30F8               	movlw	248
  1352  0692  00F1               	movwf	??_Lcd8_Cmd
  1353  0693                     u477:
  1354  0693  0BF1               	decfsz	??_Lcd8_Cmd,f
  1355  0694  2E93               	goto	u477
  1356  0695  0BF2               	decfsz	??_Lcd8_Cmd+1,f
  1357  0696  2E93               	goto	u477
  1358  0697  0000               	nop
  1359  0698                     l1197:
  1360                           
  1361                           ;./lcd.h: 62:   RC2 = 0;
  1362  0698  1283               	bcf	3,5	;RP0=0, select bank0
  1363  0699  1303               	bcf	3,6	;RP1=0, select bank0
  1364  069A  1107               	bcf	7,2	;volatile
  1365  069B                     l110:
  1366  069B  0008               	return
  1367  069C                     __end_of_Lcd8_Cmd:
  1368                           
  1369                           	psect	text9
  1370  06F7                     __ptext9:	
  1371 ;; *************** function _Lcd8_Port *****************
  1372 ;; Defined at:
  1373 ;;		line 14 in file "./lcd.h"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  a               1    wreg     unsigned char 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  a               1    0[COMMON] unsigned char 
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1387 ;;      Params:         0       0       0       0       0
  1388 ;;      Locals:         1       0       0       0       0
  1389 ;;      Temps:          0       0       0       0       0
  1390 ;;      Totals:         1       0       0       0       0
  1391 ;;Total ram usage:        1 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; This function calls:
  1394 ;;		Nothing
  1395 ;; This function is called by:
  1396 ;;		_Lcd8_Cmd
  1397 ;;		_Lcd8_Init
  1398 ;;		_Lcd8_Write_Char
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function _Lcd8_Port
  1404  06F7                     _Lcd8_Port:
  1405                           
  1406                           ;incstack = 0
  1407                           ; Regs used in _Lcd8_Port: [wreg]
  1408                           ;Lcd8_Port@a stored from wreg
  1409  06F7  00F0               	movwf	Lcd8_Port@a
  1410  06F8                     l1171:
  1411                           
  1412                           ;./lcd.h: 14: void Lcd8_Port(char a);./lcd.h: 15: {;./lcd.h: 16:  if(a & 1)
  1413  06F8  1C70               	btfss	Lcd8_Port@a,0
  1414  06F9  2EFB               	goto	u301
  1415  06FA  2EFC               	goto	u300
  1416  06FB                     u301:
  1417  06FB  2F00               	goto	l91
  1418  06FC                     u300:
  1419  06FC                     l1173:
  1420                           
  1421                           ;./lcd.h: 17:   RD0 = 1;
  1422  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1423  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1424  06FE  1408               	bsf	8,0	;volatile
  1425  06FF  2F03               	goto	l92
  1426  0700                     l91:	
  1427                           ;./lcd.h: 18:  else
  1428                           
  1429                           
  1430                           ;./lcd.h: 19:   RD0 = 0;
  1431  0700  1283               	bcf	3,5	;RP0=0, select bank0
  1432  0701  1303               	bcf	3,6	;RP1=0, select bank0
  1433  0702  1008               	bcf	8,0	;volatile
  1434  0703                     l92:
  1435                           
  1436                           ;./lcd.h: 21:  if(a & 2)
  1437  0703  1CF0               	btfss	Lcd8_Port@a,1
  1438  0704  2F06               	goto	u311
  1439  0705  2F07               	goto	u310
  1440  0706                     u311:
  1441  0706  2F09               	goto	l93
  1442  0707                     u310:
  1443  0707                     l1175:
  1444                           
  1445                           ;./lcd.h: 22:   RD1 = 1;
  1446  0707  1488               	bsf	8,1	;volatile
  1447  0708  2F0A               	goto	l94
  1448  0709                     l93:	
  1449                           ;./lcd.h: 23:  else
  1450                           
  1451                           
  1452                           ;./lcd.h: 24:   RD1 = 0;
  1453  0709  1088               	bcf	8,1	;volatile
  1454  070A                     l94:
  1455                           
  1456                           ;./lcd.h: 26:  if(a & 4)
  1457  070A  1D70               	btfss	Lcd8_Port@a,2
  1458  070B  2F0D               	goto	u321
  1459  070C  2F0E               	goto	u320
  1460  070D                     u321:
  1461  070D  2F10               	goto	l95
  1462  070E                     u320:
  1463  070E                     l1177:
  1464                           
  1465                           ;./lcd.h: 27:   RD2 = 1;
  1466  070E  1508               	bsf	8,2	;volatile
  1467  070F  2F11               	goto	l96
  1468  0710                     l95:	
  1469                           ;./lcd.h: 28:  else
  1470                           
  1471                           
  1472                           ;./lcd.h: 29:   RD2 = 0;
  1473  0710  1108               	bcf	8,2	;volatile
  1474  0711                     l96:
  1475                           
  1476                           ;./lcd.h: 31:  if(a & 8)
  1477  0711  1DF0               	btfss	Lcd8_Port@a,3
  1478  0712  2F14               	goto	u331
  1479  0713  2F15               	goto	u330
  1480  0714                     u331:
  1481  0714  2F17               	goto	l97
  1482  0715                     u330:
  1483  0715                     l1179:
  1484                           
  1485                           ;./lcd.h: 32:   RD3 = 1;
  1486  0715  1588               	bsf	8,3	;volatile
  1487  0716  2F18               	goto	l98
  1488  0717                     l97:	
  1489                           ;./lcd.h: 33:  else
  1490                           
  1491                           
  1492                           ;./lcd.h: 34:   RD3 = 0;
  1493  0717  1188               	bcf	8,3	;volatile
  1494  0718                     l98:
  1495                           
  1496                           ;./lcd.h: 36:  if(a & 16)
  1497  0718  1E70               	btfss	Lcd8_Port@a,4
  1498  0719  2F1B               	goto	u341
  1499  071A  2F1C               	goto	u340
  1500  071B                     u341:
  1501  071B  2F1E               	goto	l99
  1502  071C                     u340:
  1503  071C                     l1181:
  1504                           
  1505                           ;./lcd.h: 37:   RD4 = 1;
  1506  071C  1608               	bsf	8,4	;volatile
  1507  071D  2F1F               	goto	l100
  1508  071E                     l99:	
  1509                           ;./lcd.h: 38:  else
  1510                           
  1511                           
  1512                           ;./lcd.h: 39:   RD4 = 0;
  1513  071E  1208               	bcf	8,4	;volatile
  1514  071F                     l100:
  1515                           
  1516                           ;./lcd.h: 41:  if(a & 32)
  1517  071F  1EF0               	btfss	Lcd8_Port@a,5
  1518  0720  2F22               	goto	u351
  1519  0721  2F23               	goto	u350
  1520  0722                     u351:
  1521  0722  2F25               	goto	l101
  1522  0723                     u350:
  1523  0723                     l1183:
  1524                           
  1525                           ;./lcd.h: 42:   RD5 = 1;
  1526  0723  1688               	bsf	8,5	;volatile
  1527  0724  2F26               	goto	l102
  1528  0725                     l101:	
  1529                           ;./lcd.h: 43:  else
  1530                           
  1531                           
  1532                           ;./lcd.h: 44:   RD5 = 0;
  1533  0725  1288               	bcf	8,5	;volatile
  1534  0726                     l102:
  1535                           
  1536                           ;./lcd.h: 46:  if(a & 64)
  1537  0726  1F70               	btfss	Lcd8_Port@a,6
  1538  0727  2F29               	goto	u361
  1539  0728  2F2A               	goto	u360
  1540  0729                     u361:
  1541  0729  2F2C               	goto	l103
  1542  072A                     u360:
  1543  072A                     l1185:
  1544                           
  1545                           ;./lcd.h: 47:   RD6 = 1;
  1546  072A  1708               	bsf	8,6	;volatile
  1547  072B  2F2D               	goto	l104
  1548  072C                     l103:	
  1549                           ;./lcd.h: 48:  else
  1550                           
  1551                           
  1552                           ;./lcd.h: 49:   RD6 = 0;
  1553  072C  1308               	bcf	8,6	;volatile
  1554  072D                     l104:
  1555                           
  1556                           ;./lcd.h: 51:  if(a & 128)
  1557  072D  1FF0               	btfss	Lcd8_Port@a,7
  1558  072E  2F30               	goto	u371
  1559  072F  2F31               	goto	u370
  1560  0730                     u371:
  1561  0730  2F33               	goto	l105
  1562  0731                     u370:
  1563  0731                     l1187:
  1564                           
  1565                           ;./lcd.h: 52:   RD7 = 1;
  1566  0731  1788               	bsf	8,7	;volatile
  1567  0732  2F34               	goto	l107
  1568  0733                     l105:	
  1569                           ;./lcd.h: 53:  else
  1570                           
  1571                           
  1572                           ;./lcd.h: 54:   RD7 = 0;
  1573  0733  1388               	bcf	8,7	;volatile
  1574  0734                     l107:
  1575  0734  0008               	return
  1576  0735                     __end_of_Lcd8_Port:
  1577  007E                     btemp	set	126	;btemp
  1578  007E                     wtemp0	set	126
  1579                           
  1580                           	psect	config
  1581                           
  1582                           ;Config register CONFIG @ 0x2007
  1583                           ;	Oscillator Selection bits
  1584                           ;	FOSC = HS, HS oscillator
  1585                           ;	Watchdog Timer Enable bit
  1586                           ;	WDTE = OFF, WDT disabled
  1587                           ;	Power-up Timer Enable bit
  1588                           ;	PWRTE = ON, PWRT enabled
  1589                           ;	Brown-out Reset Enable bit
  1590                           ;	BOREN = ON, BOR enabled
  1591                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1592                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1593                           ;	Data EEPROM Memory Code Protection bit
  1594                           ;	CPD = OFF, Data EEPROM code protection off
  1595                           ;	Flash Program Memory Write Enable bits
  1596                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1597                           ;	In-Circuit Debugger Mode bit
  1598                           ;	DEBUG = 0x1, unprogrammed default
  1599                           ;	Flash Program Memory Code Protection bit
  1600                           ;	CP = OFF, Code protection off
  1601  2007                     	org	8199
  1602  2007  3F72               	dw	16242

Data Sizes:
    Strings     58
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     14      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd8_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_6(CODE[5]), STR_5(CODE[17]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_Lcd8_Write_String
    _Lcd8_Write_String->_Lcd8_Write_Char
    _Lcd8_Write_Char->_Lcd8_Port
    _Lcd8_Set_Cursor->_Lcd8_Cmd
    _Lcd8_Init->_Lcd8_Cmd
    _Lcd8_Cmd->_Lcd8_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0    1509
                                              7 COMMON     1     1      0
                                              0 BANK0     14    14      0
                          _Lcd8_Init
                    _Lcd8_Set_Cursor
                  _Lcd8_Write_String
                                 _rx
                            _ser_int
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rx                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Write_String                                    3     3      0     453
                                              4 COMMON     3     3      0
                    _Lcd8_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd8_Write_Char                                      3     3      0     198
                                              1 COMMON     3     3      0
                          _Lcd8_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Set_Cursor                                      2     1      1     590
                                              4 COMMON     2     1      1
                           _Lcd8_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Init                                            2     2      0     374
                                              4 COMMON     2     2      0
                           _Lcd8_Cmd
                          _Lcd8_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd8_Cmd                                             3     3      0     198
                                              1 COMMON     3     3      0
                          _Lcd8_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd8_Port                                            1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd8_Init
     _Lcd8_Cmd
       _Lcd8_Port
     _Lcd8_Port
   _Lcd8_Set_Cursor
     _Lcd8_Cmd
       _Lcd8_Port
   _Lcd8_Write_String
     _Lcd8_Write_Char
       _Lcd8_Port
   _rx
   _ser_int
   _timerInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      20       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      12       5       22.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      20      12        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Jun 01 01:00:12 2021

                         pc 0002                          l91 0700                          l92 0703  
                        l93 0709                          l94 070A                          l95 0710  
                        l96 0711                          l97 0717                          l98 0718  
                        l99 071E                          _rx 0659                          fsr 0004  
                       l100 071F                         l101 0725                         l102 0726  
                       l110 069B                         l103 072C                         l104 072D  
                       l105 0733                         l122 0782                         l107 0734  
                       l131 06F6                         l125 06B5                         l119 06D1  
                       l208 0670                         l236 0681                         l245 0659  
                       l247 065F                         l248 0661                         ?_rx 0070  
                       _GIE 005F                         _RB1 0031                         _RC0 0038  
                       _RD0 0040                         _RC2 003A                         _RD1 0041  
                       _RD2 0042                         _RD3 0043                         _RB7 0037  
                       _RC5 003D                         _RD4 0044                         _RD5 0045  
                       _RD6 0046                         _RD7 0047                         u300 06FC  
                       u301 06FB                         u310 0707                         u311 0706  
                       u320 070E                         u400 06F6                         u321 070D  
                       u401 06F5                         u330 0715                         u410 065F  
                       u331 0714                         u411 065E                         u340 071C  
                       u420 07DE                         u341 071B                         u421 07DD  
                       u350 0723                         u351 0722                         u360 072A  
                       u361 0729                         u425 07DA                         u370 0731  
                       u371 0730                         u380 06BC                         u381 06BB  
                       u437 06AD                         u390 06CA                         u447 0742  
                       u391 06C9                         u457 0751                         u467 0760  
                       u477 0693                         fsr0 0004                         indf 0000  
                      ??_rx 0070                        l1201 06A0                        l1211 06BC  
                      l1203 06A6                        l1221 073E                        l1213 06C4  
                      l1205 06A9                        l1301 07A6                        l1223 0747  
                      l1215 06CA                        l1207 06B2                        l1231 06D6  
                      l1303 07AB                        l1225 0756                        l1217 0735  
                      l1209 06B7                        l1233 06E3                        l1241 066C  
                      l1321 07E6                        l1313 07BD                        l1305 07B3  
                      l1171 06F8                        l1227 075C                        l1219 073B  
                      l1235 06E9                        l1251 067D                        l1243 066D  
                      l1315 07CB                        l1307 07B9                        l1181 071C  
                      l1173 06FC                        l1229 06D3                        l1253 0659  
                      l1245 066E                        l1237 0662                        l1317 07D1  
                      l1183 0723                        l1175 0707                        l1191 0686  
                      l1255 0660                        l1247 066F                        l1239 066A  
                      l1319 07DE                        l1185 072A                        l1177 070E  
                      l1193 068C                        l1249 0671                        l1281 078C  
                      l1187 0731                        l1179 0715                        l1195 068F  
                      l1291 0799                        l1283 078D                        l1275 0783  
                      l1197 0698                        l1189 0683                        l1293 079C  
                      l1285 078F                        l1277 0788                        l1199 069D  
                      l1295 079D                        l1287 0792                        l1279 078B  
                      l1297 079E                        l1289 0796                        l1299 07A3  
                      STR_1 001A                        STR_2 0027                        STR_3 0030  
                      STR_4 0037                        STR_5 0009                        STR_6 003E  
                      _PEIE 005E                        _INTE 005C                        _RBIE 005B  
                      _RCIF 0065                        _TMR1 000E                        _TXIF 0064  
                      _main 0783                        _hold 0030           ??_Lcd8_Set_Cursor 0075  
                      btemp 007E                        start 0000                       ?_main 0070  
                     _RCREG 001A                       _RCSTA 0018                       _SPBRG 0099  
                     _PORTB 0006                       _TRISB 0086                       _TRISC 0087  
                     _TRISD 0088                       _TXREG 0019                       _TXSTA 0098  
           __end_of_ser_int 0682                       pclath 000A                       status 0003  
          __end_of_Lcd8_Cmd 069C                       wtemp0 007E             __initialization 07F0  
              __end_of_main 07F0          __size_of_Lcd8_Init 004E          __size_of_Lcd8_Port 003E  
         ??_Lcd8_Write_Char 0071                      ??_main 0077                      _INTEDG 040E  
                    _TMR1IE 0460                      _TMR1IF 0060                      _TMR1CS 0081  
                    _TMR1ON 0080                      _TRISA0 0428                      _TRISA1 0429  
                    main@id 0020                   ??_ser_int 0070           __end_of_Lcd8_Init 0783  
         __end_of_Lcd8_Port 0735     __end_of__initialization 07FC              __pcstackCOMMON 0070  
                __end_of_rx 0662                   ?_Lcd8_Cmd 0070             _Lcd8_Set_Cursor 06B6  
                __pbssBANK0 002E                  __pmaintext 0783            Lcd8_Set_Cursor@a 0075  
          Lcd8_Set_Cursor@b 0074                     _T1CKPS0 0084                     _T1CKPS1 0085  
        __size_of_timerInit 000F                  ??_Lcd8_Cmd 0071                  __stringtab 0003  
           _Lcd8_Write_Char 069C     __end_of_Lcd8_Set_Cursor 06D2                     __ptext1 0662  
                   __ptext2 0671                     __ptext3 0659                     __ptext4 06D2  
                   __ptext5 069C                     __ptext6 06B6                     __ptext7 0735  
                   __ptext8 0682                     __ptext9 06F7                     _counter 007C  
                 Lcd8_Cmd@a 0073                     _ser_int 0671        end_of_initialization 07FC  
         __end_of_timerInit 0671     __end_of_Lcd8_Write_Char 06B6                   _Lcd8_Init 0735  
                 _Lcd8_Port 06F7            ?_Lcd8_Set_Cursor 0074         start_initialization 07F0  
         __size_of_Lcd8_Cmd 001A           _Lcd8_Write_String 06D2          ?_Lcd8_Write_String 0070  
                ?_Lcd8_Init 0070                  ?_Lcd8_Port 0070         ??_Lcd8_Write_String 0074  
               __pbssCOMMON 0078                   ___latbits 0002               __pcstackBANK0 0020  
 __end_of_Lcd8_Write_String 06F7            ?_Lcd8_Write_Char 0070                   __pstrings 0003  
                  ?_ser_int 0070                 __size_of_rx 0009                 ??_Lcd8_Init 0074  
          Lcd8_Write_Char@a 0073                 ??_Lcd8_Port 0070                   _timerInit 0662  
               __stringbase 0008                   main@i_168 002C                    _Lcd8_Cmd 0682  
__size_of_Lcd8_Write_String 0025                  ?_timerInit 0070          __end_of__stringtab 0009  
          __size_of_ser_int 0011                    _isOpened 002E               __size_of_main 006D  
               _parkingTime 007A                  Lcd8_Port@a 0070                    _numberID 0078  
  __size_of_Lcd8_Set_Cursor 001C                   stringcode 0003          Lcd8_Write_String@a 0076  
        Lcd8_Write_String@i 0074                 ??_timerInit 0070                    stringdir 0003  
                  stringtab 0003    __size_of_Lcd8_Write_Char 001A  
