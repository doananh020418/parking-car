

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Jun 09 20:54:15 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F877A Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0094                     	;# 
   175  0098                     	;# 
   176  0099                     	;# 
   177  009C                     	;# 
   178  009D                     	;# 
   179  009E                     	;# 
   180  009F                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0008                     	;# 
   196  0009                     	;# 
   197  000A                     	;# 
   198  000B                     	;# 
   199  000C                     	;# 
   200  000D                     	;# 
   201  000E                     	;# 
   202  000E                     	;# 
   203  000F                     	;# 
   204  0010                     	;# 
   205  0011                     	;# 
   206  0012                     	;# 
   207  0013                     	;# 
   208  0014                     	;# 
   209  0015                     	;# 
   210  0015                     	;# 
   211  0016                     	;# 
   212  0017                     	;# 
   213  0018                     	;# 
   214  0019                     	;# 
   215  001A                     	;# 
   216  001B                     	;# 
   217  001B                     	;# 
   218  001C                     	;# 
   219  001D                     	;# 
   220  001E                     	;# 
   221  001F                     	;# 
   222  0081                     	;# 
   223  0085                     	;# 
   224  0086                     	;# 
   225  0087                     	;# 
   226  0088                     	;# 
   227  0089                     	;# 
   228  008C                     	;# 
   229  008D                     	;# 
   230  008E                     	;# 
   231  0091                     	;# 
   232  0092                     	;# 
   233  0093                     	;# 
   234  0094                     	;# 
   235  0098                     	;# 
   236  0099                     	;# 
   237  009C                     	;# 
   238  009D                     	;# 
   239  009E                     	;# 
   240  009F                     	;# 
   241  010C                     	;# 
   242  010D                     	;# 
   243  010E                     	;# 
   244  010F                     	;# 
   245  018C                     	;# 
   246  018D                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  0007                     	;# 
   255  0008                     	;# 
   256  0009                     	;# 
   257  000A                     	;# 
   258  000B                     	;# 
   259  000C                     	;# 
   260  000D                     	;# 
   261  000E                     	;# 
   262  000E                     	;# 
   263  000F                     	;# 
   264  0010                     	;# 
   265  0011                     	;# 
   266  0012                     	;# 
   267  0013                     	;# 
   268  0014                     	;# 
   269  0015                     	;# 
   270  0015                     	;# 
   271  0016                     	;# 
   272  0017                     	;# 
   273  0018                     	;# 
   274  0019                     	;# 
   275  001A                     	;# 
   276  001B                     	;# 
   277  001B                     	;# 
   278  001C                     	;# 
   279  001D                     	;# 
   280  001E                     	;# 
   281  001F                     	;# 
   282  0081                     	;# 
   283  0085                     	;# 
   284  0086                     	;# 
   285  0087                     	;# 
   286  0088                     	;# 
   287  0089                     	;# 
   288  008C                     	;# 
   289  008D                     	;# 
   290  008E                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0094                     	;# 
   295  0098                     	;# 
   296  0099                     	;# 
   297  009C                     	;# 
   298  009D                     	;# 
   299  009E                     	;# 
   300  009F                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307                           
   308                           	psect	idataBANK0
   309  0506                     __pidataBANK0:
   310                           
   311                           ;initializer for _park
   312  0506  3463               	retlw	99
   313  0507  3400               	retlw	0
   314  000E                     _TMR1	set	14
   315  0006                     _PORTB	set	6
   316  001A                     _RCREG	set	26
   317  0059                     _INTF	set	89
   318  0031                     _RB1	set	49
   319  0034                     _RB4	set	52
   320  0033                     _RB3	set	51
   321  0037                     _RB7	set	55
   322  005C                     _INTE	set	92
   323  0080                     _TMR1ON	set	128
   324  0085                     _T1CKPS1	set	133
   325  0084                     _T1CKPS0	set	132
   326  0081                     _TMR1CS	set	129
   327  005F                     _GIE	set	95
   328  0060                     _TMR1IF	set	96
   329  003A                     _RC2	set	58
   330  0038                     _RC0	set	56
   331  0047                     _RD7	set	71
   332  0046                     _RD6	set	70
   333  0045                     _RD5	set	69
   334  0044                     _RD4	set	68
   335  0043                     _RD3	set	67
   336  0042                     _RD2	set	66
   337  0041                     _RD1	set	65
   338  0040                     _RD0	set	64
   339  0065                     _RCIF	set	101
   340  00C4                     _CREN	set	196
   341  005E                     _PEIE	set	94
   342  00C7                     _SPEN	set	199
   343  0088                     _TRISD	set	136
   344  0087                     _TRISC	set	135
   345  0086                     _TRISB	set	134
   346  0099                     _SPBRG	set	153
   347  040E                     _INTEDG	set	1038
   348  0460                     _TMR1IE	set	1120
   349  0465                     _RCIE	set	1125
   350  043F                     _TRISC7	set	1087
   351  043E                     _TRISC6	set	1086
   352  04C4                     _SYNC	set	1220
   353  04C2                     _BRGH	set	1218
   354                           
   355                           	psect	strings
   356  0339                     __pstrings:
   357  0339                     stringtab:
   358  0339                     __stringtab:
   359                           
   360                           ;	String table - string pointers are 1 byte each
   361  0339  1BFF               	btfsc	btemp+1,7
   362  033A  2B43               	ljmp	stringcode
   363  033B  1383               	bcf	3,7
   364  033C  187F               	btfsc	btemp+1,0
   365  033D  1783               	bsf	3,7
   366  033E  0800               	movf	0,w
   367  033F  0A84               	incf	4,f
   368  0340  1903               	skipnz
   369  0341  0AFF               	incf	btemp+1,f
   370  0342  0008               	return
   371  0343                     stringcode:
   372  0343                     stringdir:
   373  0343  3003               	movlw	high stringdir
   374  0344  008A               	movwf	10
   375  0345  0804               	movf	4,w
   376  0346  0A84               	incf	4,f
   377  0347  0782               	addwf	2,f
   378  0348                     __stringbase:
   379  0348  3400               	retlw	0
   380  0349                     __end_of__stringtab:
   381  0349                     STR_1:
   382  0349  3431               	retlw	49	;'1'
   383  034A  3431               	retlw	49	;'1'
   384  034B  3431               	retlw	49	;'1'
   385  034C  3431               	retlw	49	;'1'
   386  034D  3431               	retlw	49	;'1'
   387  034E  3431               	retlw	49	;'1'
   388  034F  3431               	retlw	49	;'1'
   389  0350  3431               	retlw	49	;'1'
   390  0351  3431               	retlw	49	;'1'
   391  0352  3431               	retlw	49	;'1'
   392  0353  3431               	retlw	49	;'1'
   393  0354  3431               	retlw	49	;'1'
   394  0355  3400               	retlw	0
   395  0356                     STR_5:
   396  0356  3457               	retlw	87	;'W'
   397  0357  3465               	retlw	101	;'e'
   398  0358  346C               	retlw	108	;'l'
   399  0359  346C               	retlw	108	;'l'
   400  035A  3463               	retlw	99	;'c'
   401  035B  346F               	retlw	111	;'o'
   402  035C  346D               	retlw	109	;'m'
   403  035D  3465               	retlw	101	;'e'
   404  035E  3421               	retlw	33	;'!'
   405  035F  3400               	retlw	0
   406  0360                     STR_2:
   407  0360  344C               	retlw	76	;'L'
   408  0361  346F               	retlw	111	;'o'
   409  0362  3463               	retlw	99	;'c'
   410  0363  346B               	retlw	107	;'k'
   411  0364  3421               	retlw	33	;'!'
   412  0365  3421               	retlw	33	;'!'
   413  0366  3421               	retlw	33	;'!'
   414  0367  3400               	retlw	0
   415  0368                     STR_3:
   416  0368  344F               	retlw	79	;'O'
   417  0369  3470               	retlw	112	;'p'
   418  036A  3465               	retlw	101	;'e'
   419  036B  346E               	retlw	110	;'n'
   420  036C  3465               	retlw	101	;'e'
   421  036D  3464               	retlw	100	;'d'
   422  036E  3421               	retlw	33	;'!'
   423  036F  3400               	retlw	0
   424  0370                     STR_4:
   425  0370  3443               	retlw	67	;'C'
   426  0371  346C               	retlw	108	;'l'
   427  0372  346F               	retlw	111	;'o'
   428  0373  3473               	retlw	115	;'s'
   429  0374  3465               	retlw	101	;'e'
   430  0375  3464               	retlw	100	;'d'
   431  0376  3421               	retlw	33	;'!'
   432  0377  3400               	retlw	0
   433                           
   434                           	psect	cinit
   435  000F                     start_initialization:	
   436                           ; #config settings
   437                           
   438  000F                     __initialization:
   439                           
   440                           ; Initialize objects allocated to BANK0
   441  000F  120A  118A  2506  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   442  0014  00CC               	movwf	__pdataBANK0& (0+127)
   443  0015  120A  118A  2507  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   444  001A  00CD               	movwf	(__pdataBANK0+1)& (0+127)
   445                           
   446                           ; Clear objects allocated to BANK0
   447  001B  01C6               	clrf	__pbssBANK0& (0+127)
   448  001C  01C7               	clrf	(__pbssBANK0+1)& (0+127)
   449  001D  01C8               	clrf	(__pbssBANK0+2)& (0+127)
   450  001E  01C9               	clrf	(__pbssBANK0+3)& (0+127)
   451  001F  01CA               	clrf	(__pbssBANK0+4)& (0+127)
   452  0020  01CB               	clrf	(__pbssBANK0+5)& (0+127)
   453                           
   454                           ; Clear objects allocated to COMMON
   455  0021  01F6               	clrf	__pbssCOMMON& (0+127)
   456  0022  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   457  0023  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   458  0024  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   459  0025                     end_of_initialization:	
   460                           ;End of C runtime variable initialization code
   461                           
   462  0025                     __end_of__initialization:
   463  0025  0183               	clrf	3
   464  0026  120A  118A  28E3   	ljmp	_main	;jump to C main() function
   465                           
   466                           	psect	bssCOMMON
   467  0076                     __pbssCOMMON:
   468  0076                     _numberID:
   469  0076                     	ds	2
   470  0078                     _counter:
   471  0078                     	ds	2
   472                           
   473                           	psect	bssBANK0
   474  0046                     __pbssBANK0:
   475  0046                     _isOpened:
   476  0046                     	ds	2
   477  0048                     _lock:
   478  0048                     	ds	2
   479  004A                     _parkingTime:
   480  004A                     	ds	2
   481                           
   482                           	psect	dataBANK0
   483  004C                     __pdataBANK0:
   484  004C                     _park:
   485  004C                     	ds	2
   486                           
   487                           	psect	cstackCOMMON
   488  0070                     __pcstackCOMMON:
   489  0070                     ?_Rotation90:
   490  0070                     ?_Rotation0:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_Lcd8_Port:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_Lcd8_Cmd:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ?_Lcd8_Init:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_Lcd8_Write_Char:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_timerInit:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_checkGateStatus:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_main:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_ISR:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?i1_Rotation90:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ??i1_Rotation90:	
   521                           ; 1 bytes @ 0x0
   522                           
   523                           
   524                           ; 1 bytes @ 0x0
   525  0070                     	ds	2
   526  0072                     i1Rotation90@i:
   527                           
   528                           ; 2 bytes @ 0x2
   529  0072                     	ds	2
   530  0074                     ??_ISR:
   531                           
   532                           ; 1 bytes @ 0x4
   533  0074                     	ds	2
   534                           
   535                           	psect	cstackBANK0
   536  0020                     __pcstackBANK0:
   537  0020                     ??_Rotation90:
   538  0020                     ??_Rotation0:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0020                     ??_Lcd8_Port:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0020                     ??_timerInit:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0020                     ?___wmul:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0020                     ?___awdiv:	
   551                           ; 2 bytes @ 0x0
   552                           
   553  0020                     ?___awmod:	
   554                           ; 2 bytes @ 0x0
   555                           
   556  0020                     Lcd8_Port@a:	
   557                           ; 2 bytes @ 0x0
   558                           
   559  0020                     ___wmul@multiplier:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0020                     ___awdiv@divisor:	
   563                           ; 2 bytes @ 0x0
   564                           
   565  0020                     ___awmod@divisor:	
   566                           ; 2 bytes @ 0x0
   567                           
   568                           
   569                           ; 2 bytes @ 0x0
   570  0020                     	ds	1
   571  0021                     ??_Lcd8_Cmd:
   572  0021                     ??_Lcd8_Write_Char:	
   573                           ; 1 bytes @ 0x1
   574                           
   575                           
   576                           ; 1 bytes @ 0x1
   577  0021                     	ds	1
   578  0022                     Rotation0@i:
   579  0022                     Rotation90@i:	
   580                           ; 2 bytes @ 0x2
   581                           
   582  0022                     ___wmul@multiplicand:	
   583                           ; 2 bytes @ 0x2
   584                           
   585  0022                     ___awdiv@dividend:	
   586                           ; 2 bytes @ 0x2
   587                           
   588  0022                     ___awmod@dividend:	
   589                           ; 2 bytes @ 0x2
   590                           
   591                           
   592                           ; 2 bytes @ 0x2
   593  0022                     	ds	1
   594  0023                     Lcd8_Cmd@a:
   595  0023                     Lcd8_Write_Char@a:	
   596                           ; 1 bytes @ 0x3
   597                           
   598                           
   599                           ; 1 bytes @ 0x3
   600  0023                     	ds	1
   601  0024                     ?_Lcd8_Set_Cursor:
   602  0024                     ??_Lcd8_Init:	
   603                           ; 1 bytes @ 0x4
   604                           
   605  0024                     ?_Lcd8_Write_String:	
   606                           ; 1 bytes @ 0x4
   607                           
   608  0024                     ??___wmul:	
   609                           ; 1 bytes @ 0x4
   610                           
   611  0024                     ??___awdiv:	
   612                           ; 1 bytes @ 0x4
   613                           
   614  0024                     ??___awmod:	
   615                           ; 1 bytes @ 0x4
   616                           
   617  0024                     Lcd8_Set_Cursor@b:	
   618                           ; 1 bytes @ 0x4
   619                           
   620  0024                     Lcd8_Write_String@a:	
   621                           ; 1 bytes @ 0x4
   622                           
   623  0024                     ___wmul@product:	
   624                           ; 2 bytes @ 0x4
   625                           
   626                           
   627                           ; 2 bytes @ 0x4
   628  0024                     	ds	1
   629  0025                     ??_Lcd8_Set_Cursor:
   630  0025                     Lcd8_Set_Cursor@a:	
   631                           ; 1 bytes @ 0x5
   632                           
   633  0025                     ___awdiv@counter:	
   634                           ; 1 bytes @ 0x5
   635                           
   636  0025                     ___awmod@counter:	
   637                           ; 1 bytes @ 0x5
   638                           
   639                           
   640                           ; 1 bytes @ 0x5
   641  0025                     	ds	1
   642  0026                     ??_Lcd8_Write_String:
   643  0026                     ___awdiv@sign:	
   644                           ; 1 bytes @ 0x6
   645                           
   646  0026                     ___awmod@sign:	
   647                           ; 1 bytes @ 0x6
   648                           
   649                           
   650                           ; 1 bytes @ 0x6
   651  0026                     	ds	1
   652  0027                     ___awdiv@quotient:
   653                           
   654                           ; 2 bytes @ 0x7
   655  0027                     	ds	2
   656  0029                     ?_toa:
   657  0029                     Lcd8_Write_String@i:	
   658                           ; 2 bytes @ 0x9
   659                           
   660  0029                     toa@value:	
   661                           ; 2 bytes @ 0x9
   662                           
   663                           
   664                           ; 2 bytes @ 0x9
   665  0029                     	ds	2
   666  002B                     toa@ptr:
   667                           
   668                           ; 1 bytes @ 0xB
   669  002B                     	ds	1
   670  002C                     ??_toa:
   671                           
   672                           ; 1 bytes @ 0xC
   673  002C                     	ds	1
   674  002D                     toa@count:
   675                           
   676                           ; 2 bytes @ 0xD
   677  002D                     	ds	2
   678  002F                     toa@temp:
   679                           
   680                           ; 2 bytes @ 0xF
   681  002F                     	ds	2
   682  0031                     ??_checkGateStatus:
   683                           
   684                           ; 1 bytes @ 0x11
   685  0031                     	ds	1
   686  0032                     checkGateStatus@string:
   687                           
   688                           ; 20 bytes @ 0x12
   689  0032                     	ds	20
   690  0046                     ??_main:
   691                           
   692                           	psect	maintext
   693  00E3                     __pmaintext:	
   694                           ; 1 bytes @ 0x26
   695 ;;
   696 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   697 ;;
   698 ;; *************** function _main *****************
   699 ;; Defined at:
   700 ;;		line 152 in file "parkingCar.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;  id             13    0        unsigned char [13]
   705 ;;  i               2    0        int 
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : B00/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   715 ;;      Params:         0       0       0       0       0
   716 ;;      Locals:         0       0       0       0       0
   717 ;;      Temps:          0       0       0       0       0
   718 ;;      Totals:         0       0       0       0       0
   719 ;;Total ram usage:        0 bytes
   720 ;; Hardware stack levels required when called:    6
   721 ;; This function calls:
   722 ;;		_Lcd8_Init
   723 ;;		_Lcd8_Set_Cursor
   724 ;;		_Lcd8_Write_String
   725 ;;		_Rotation0
   726 ;;		_Rotation90
   727 ;;		_checkGateStatus
   728 ;;		_timerInit
   729 ;; This function is called by:
   730 ;;		Startup code after reset
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           
   735                           ;psect for function _main
   736  00E3                     _main:
   737  00E3                     l2018:	
   738                           ;incstack = 0
   739                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   740                           
   741                           
   742                           ;parkingCar.c: 153:                     }
   743  00E3  120A  118A  24F7  120A  118A  	fcall	_timerInit
   744  00E8                     l2020:
   745                           
   746                           ;parkingCar.c: 156: }
   747  00E8  1683               	bsf	3,5	;RP0=1, select bank1
   748  00E9  1303               	bcf	3,6	;RP1=0, select bank1
   749  00EA  1701               	bsf	1,6	;volatile
   750  00EB                     l2022:
   751                           
   752                           ;parkingCar.c: 157: 
   753  00EB  160B               	bsf	11,4	;volatile
   754  00EC                     l2024:
   755                           
   756                           ;parkingCar.c: 158: void Rotation0()
   757  00EC  30FD               	movlw	253
   758  00ED  0086               	movwf	6	;volatile
   759  00EE                     l2026:
   760                           
   761                           ;parkingCar.c: 159: {
   762  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   763  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   764  00F0  0186               	clrf	6	;volatile
   765  00F1                     l2028:
   766                           
   767                           ;parkingCar.c: 160:     unsigned int i;
   768  00F1  30C0               	movlw	192
   769  00F2  1683               	bsf	3,5	;RP0=1, select bank1
   770  00F3  1303               	bcf	3,6	;RP1=0, select bank1
   771  00F4  0087               	movwf	7	;volatile
   772  00F5                     l2030:
   773                           
   774                           ;parkingCar.c: 161:     for(i=0;i<50;i++)
   775  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   776  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   777  00F7  1786               	bsf	6,7	;volatile
   778  00F8                     l2032:
   779                           
   780                           ;parkingCar.c: 162:     {
   781  00F8  1683               	bsf	3,5	;RP0=1, select bank1
   782  00F9  1303               	bcf	3,6	;RP1=0, select bank1
   783  00FA  1787               	bsf	7,7	;volatile
   784  00FB  1B87               	btfsc	7,7	;volatile
   785  00FC  28FE               	goto	u1771
   786  00FD  2902               	goto	u1770
   787  00FE                     u1771:
   788  00FE  1683               	bsf	3,5	;RP0=1, select bank1
   789  00FF  1303               	bcf	3,6	;RP1=0, select bank1
   790  0100  1707               	bsf	7,6	;volatile
   791  0101  2905               	goto	u1784
   792  0102                     u1770:
   793  0102  1683               	bsf	3,5	;RP0=1, select bank1
   794  0103  1303               	bcf	3,6	;RP1=0, select bank1
   795  0104  1307               	bcf	7,6	;volatile
   796  0105                     u1784:
   797  0105                     l2034:
   798                           
   799                           ;parkingCar.c: 164:         _delay((unsigned long)((900)*(16000000/4000000.0)));
   800  0105  0188               	clrf	8	;volatile
   801  0106                     l2036:
   802                           
   803                           ;parkingCar.c: 166:         _delay((unsigned long)((19100)*(16000000/4000000.0)));
   804  0106  120A  118A  229F  120A  118A  	fcall	_Lcd8_Init
   805  010B                     l2038:
   806                           
   807                           ;parkingCar.c: 169: };parkingCar.c: 170: ;parkingCar.c: 172: {
   808  010B  1283               	bcf	3,5	;RP0=0, select bank0
   809  010C  1303               	bcf	3,6	;RP1=0, select bank0
   810  010D  01A4               	clrf	Lcd8_Set_Cursor@b
   811  010E  3001               	movlw	1
   812  010F  120A  118A  24A1  120A  118A  	fcall	_Lcd8_Set_Cursor
   813  0114                     l2040:
   814                           
   815                           ;parkingCar.c: 173:     unsigned int i;
   816  0114  300E               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   817  0115  1283               	bcf	3,5	;RP0=0, select bank0
   818  0116  1303               	bcf	3,6	;RP1=0, select bank0
   819  0117  00A4               	movwf	Lcd8_Write_String@a
   820  0118  3080               	movlw	128
   821  0119  00A5               	movwf	Lcd8_Write_String@a+1
   822  011A  120A  118A  22F3  120A  118A  	fcall	_Lcd8_Write_String
   823  011F                     l2042:
   824                           
   825                           ;parkingCar.c: 176:         RB1 = 1;
   826  011F  120A  118A  21E0  120A  118A  	fcall	_checkGateStatus
   827  0124                     l2044:
   828                           
   829                           ;parkingCar.c: 179:         _delay((unsigned long)((18050)*(16000000/4000000.0)));
   830  0124  1283               	bcf	3,5	;RP0=0, select bank0
   831  0125  1303               	bcf	3,6	;RP1=0, select bank0
   832  0126  1D86               	btfss	6,3	;volatile
   833  0127  2929               	goto	u1791
   834  0128  292A               	goto	u1790
   835  0129                     u1791:
   836  0129  2957               	goto	l2062
   837  012A                     u1790:
   838  012A                     l2046:
   839                           
   840                           ;parkingCar.c: 180:     }
   841  012A  0846               	movf	_isOpened,w
   842  012B  0447               	iorwf	_isOpened+1,w
   843  012C  1D03               	btfss	3,2
   844  012D  292F               	goto	u1801
   845  012E  2930               	goto	u1800
   846  012F                     u1801:
   847  012F  293F               	goto	l2054
   848  0130                     u1800:
   849  0130                     l2048:
   850  0130  0848               	movf	_lock,w
   851  0131  0449               	iorwf	_lock+1,w
   852  0132  1D03               	btfss	3,2
   853  0133  2935               	goto	u1811
   854  0134  2936               	goto	u1810
   855  0135                     u1811:
   856  0135  293F               	goto	l2054
   857  0136                     u1810:
   858  0136                     l2050:
   859                           
   860                           ;parkingCar.c: 181:     isOpened = 1;
   861  0136  120A  118A  23B4  120A  118A  	fcall	_Rotation90
   862  013B                     l2052:
   863                           
   864                           ;parkingCar.c: 182: }
   865  013B  1283               	bcf	3,5	;RP0=0, select bank0
   866  013C  1303               	bcf	3,6	;RP1=0, select bank0
   867  013D  01CA               	clrf	_parkingTime
   868  013E  01CB               	clrf	_parkingTime+1
   869  013F                     l2054:
   870                           
   871                           ;parkingCar.c: 185:         if(INTF == 1) {
   872  013F  3000               	movlw	0
   873  0140  024B               	subwf	_parkingTime+1,w
   874  0141  3010               	movlw	16
   875  0142  1903               	skipnz
   876  0143  024A               	subwf	_parkingTime,w
   877  0144  1C03               	skipc
   878  0145  2947               	goto	u1821
   879  0146  2948               	goto	u1820
   880  0147                     u1821:
   881  0147  2957               	goto	l2062
   882  0148                     u1820:
   883  0148                     l2056:
   884  0148  1A06               	btfsc	6,4	;volatile
   885  0149  294B               	goto	u1831
   886  014A  294C               	goto	u1830
   887  014B                     u1831:
   888  014B  2957               	goto	l2062
   889  014C                     u1830:
   890  014C                     l2058:
   891                           
   892                           ;parkingCar.c: 187:             lock = 0;
   893  014C  120A  118A  241A  120A  118A  	fcall	_Rotation0
   894  0151                     l2060:
   895                           
   896                           ;parkingCar.c: 188:             parkingTime = 0;
   897  0151  3001               	movlw	1
   898  0152  1283               	bcf	3,5	;RP0=0, select bank0
   899  0153  1303               	bcf	3,6	;RP1=0, select bank0
   900  0154  00C8               	movwf	_lock
   901  0155  3000               	movlw	0
   902  0156  00C9               	movwf	_lock+1
   903  0157                     l2062:
   904                           
   905                           ;parkingCar.c: 192:             counter ++;
   906  0157  1E06               	btfss	6,4	;volatile
   907  0158  295A               	goto	u1841
   908  0159  295B               	goto	u1840
   909  015A                     u1841:
   910  015A  291F               	goto	l2042
   911  015B                     u1840:
   912  015B                     l2064:
   913                           
   914                           ;parkingCar.c: 193:             if(counter == 61*1){
   915  015B  1986               	btfsc	6,3	;volatile
   916  015C  295E               	goto	u1851
   917  015D  295F               	goto	u1850
   918  015E                     u1851:
   919  015E  291F               	goto	l2042
   920  015F                     u1850:
   921  015F                     l2066:
   922                           
   923                           ;parkingCar.c: 194:                 parkingTime ++;
   924  015F  0346               	decf	_isOpened,w
   925  0160  0447               	iorwf	_isOpened+1,w
   926  0161  1D03               	btfss	3,2
   927  0162  2964               	goto	u1861
   928  0163  2965               	goto	u1860
   929  0164                     u1861:
   930  0164  2973               	goto	l250
   931  0165                     u1860:
   932  0165                     l2068:
   933                           
   934                           ;parkingCar.c: 195:                 counter=0;
   935  0165  120A  118A  241A  120A  118A  	fcall	_Rotation0
   936  016A                     l2070:
   937                           
   938                           ;parkingCar.c: 196:             }
   939  016A  30FF               	movlw	255
   940  016B  1283               	bcf	3,5	;RP0=0, select bank0
   941  016C  1303               	bcf	3,6	;RP1=0, select bank0
   942  016D  07CC               	addwf	_park,f
   943  016E  1803               	skipnc
   944  016F  0ACD               	incf	_park+1,f
   945  0170  30FF               	movlw	255
   946  0171  07CD               	addwf	_park+1,f
   947  0172  291F               	goto	l2042
   948  0173                     l250:	
   949                           ;parkingCar.c: 199: }
   950                           
   951  0173  291F               	goto	l2042
   952  0174  120A  118A  280C   	ljmp	start
   953  0177                     __end_of_main:
   954                           
   955                           	psect	text1
   956  04F7                     __ptext1:	
   957 ;; *************** function _timerInit *****************
   958 ;; Defined at:
   959 ;;		line 115 in file "parkingCar.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		status,2
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   973 ;;      Params:         0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0
   976 ;;      Totals:         0       0       0       0       0
   977 ;;Total ram usage:        0 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    2
   980 ;; This function calls:
   981 ;;		Nothing
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           
   988                           ;psect for function _timerInit
   989  04F7                     _timerInit:
   990  04F7                     l1958:	
   991                           ;incstack = 0
   992                           ; Regs used in _timerInit: [status,2]
   993                           
   994                           
   995                           ;parkingCar.c: 116:     RB7 = 1;
   996  04F7  1683               	bsf	3,5	;RP0=1, select bank1
   997  04F8  1303               	bcf	3,6	;RP1=0, select bank1
   998  04F9  140C               	bsf	12,0	;volatile
   999                           
  1000                           ;parkingCar.c: 117:     TRISC6=TRISC7=1;
  1001  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  1002  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  1003  04FC  100C               	bcf	12,0	;volatile
  1004                           
  1005                           ;parkingCar.c: 118: 
  1006  04FD  170B               	bsf	11,6	;volatile
  1007                           
  1008                           ;parkingCar.c: 119:     TRISD = 0x00;
  1009  04FE  178B               	bsf	11,7	;volatile
  1010  04FF                     l1960:
  1011                           
  1012                           ;parkingCar.c: 123: 
  1013  04FF  018E               	clrf	14	;volatile
  1014  0500  018F               	clrf	15	;volatile
  1015  0501                     l1962:
  1016                           
  1017                           ;parkingCar.c: 125:     unsigned char id[13];
  1018  0501  1090               	bcf	16,1	;volatile
  1019  0502                     l1964:
  1020                           
  1021                           ;parkingCar.c: 127:     Lcd8_Set_Cursor(1, 0);
  1022  0502  1210               	bcf	16,4	;volatile
  1023  0503                     l1966:
  1024                           
  1025                           ;parkingCar.c: 128:     Lcd8_Write_String("Wellcome!");
  1026  0503  1290               	bcf	16,5	;volatile
  1027  0504                     l1968:
  1028                           
  1029                           ;parkingCar.c: 130:     while (1) {
  1030  0504  1410               	bsf	16,0	;volatile
  1031  0505                     l233:
  1032  0505  0008               	return
  1033  0506                     __end_of_timerInit:
  1034                           
  1035                           	psect	text2
  1036  01E0                     __ptext2:	
  1037 ;; *************** function _checkGateStatus *****************
  1038 ;; Defined at:
  1039 ;;		line 133 in file "parkingCar.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;		None
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;  string         20   18[BANK0 ] unsigned char [20]
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      void 
  1046 ;; Registers used:
  1047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1053 ;;      Params:         0       0       0       0       0
  1054 ;;      Locals:         0      20       0       0       0
  1055 ;;      Temps:          0       1       0       0       0
  1056 ;;      Totals:         0      21       0       0       0
  1057 ;;Total ram usage:       21 bytes
  1058 ;; Hardware stack levels used:    1
  1059 ;; Hardware stack levels required when called:    5
  1060 ;; This function calls:
  1061 ;;		_Lcd8_Set_Cursor
  1062 ;;		_Lcd8_Write_String
  1063 ;;		_toa
  1064 ;; This function is called by:
  1065 ;;		_main
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           
  1070                           ;psect for function _checkGateStatus
  1071  01E0                     _checkGateStatus:
  1072  01E0                     l1970:	
  1073                           ;incstack = 0
  1074                           ; Regs used in _checkGateStatus: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1075                           
  1076                           
  1077                           ;parkingCar.c: 134:                     if(1){
  1078  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1079  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1080  01E2  0348               	decf	_lock,w
  1081  01E3  0449               	iorwf	_lock+1,w
  1082  01E4  1D03               	btfss	3,2
  1083  01E5  29E7               	goto	u1731
  1084  01E6  29E8               	goto	u1730
  1085  01E7                     u1731:
  1086  01E7  29FB               	goto	l1976
  1087  01E8                     u1730:
  1088  01E8                     l1972:
  1089                           
  1090                           ;parkingCar.c: 135:                         if (isOpened == 0 && lock == 0){
  1091  01E8  01A4               	clrf	Lcd8_Set_Cursor@b
  1092  01E9  3002               	movlw	2
  1093  01EA  120A  118A  24A1  120A  118A  	fcall	_Lcd8_Set_Cursor
  1094  01EF                     l1974:
  1095                           
  1096                           ;parkingCar.c: 136:                             Rotation90();
  1097  01EF  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1098  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  1099  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  1100  01F2  00A4               	movwf	Lcd8_Write_String@a
  1101  01F3  3080               	movlw	128
  1102  01F4  00A5               	movwf	Lcd8_Write_String@a+1
  1103  01F5  120A  118A  22F3  120A  118A  	fcall	_Lcd8_Write_String
  1104                           
  1105                           ;parkingCar.c: 137:                             parkingTime = 0;
  1106  01FA  2A1D               	goto	l237
  1107  01FB                     l1976:
  1108                           
  1109                           ;parkingCar.c: 139:                         }
  1110  01FB  01A4               	clrf	Lcd8_Set_Cursor@b
  1111  01FC  3002               	movlw	2
  1112  01FD  120A  118A  24A1  120A  118A  	fcall	_Lcd8_Set_Cursor
  1113  0202                     l1978:
  1114                           
  1115                           ;parkingCar.c: 140:                         if(parkingTime > 15 && RB4 == 0){
  1116  0202  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0203  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0204  0346               	decf	_isOpened,w
  1119  0205  0447               	iorwf	_isOpened+1,w
  1120  0206  1D03               	btfss	3,2
  1121  0207  2A09               	goto	u1741
  1122  0208  2A0A               	goto	u1740
  1123  0209                     u1741:
  1124  0209  2A14               	goto	l1982
  1125  020A                     u1740:
  1126  020A                     l1980:
  1127                           
  1128                           ;parkingCar.c: 141: 
  1129  020A  3020               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1130  020B  00A4               	movwf	Lcd8_Write_String@a
  1131  020C  3080               	movlw	128
  1132  020D  00A5               	movwf	Lcd8_Write_String@a+1
  1133  020E  120A  118A  22F3  120A  118A  	fcall	_Lcd8_Write_String
  1134                           
  1135                           ;parkingCar.c: 142:                                 Rotation0();
  1136  0213  2A1D               	goto	l237
  1137  0214                     l1982:
  1138                           
  1139                           ;parkingCar.c: 143:                                 lock = 1;
  1140  0214  3028               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1141  0215  00A4               	movwf	Lcd8_Write_String@a
  1142  0216  3080               	movlw	128
  1143  0217  00A5               	movwf	Lcd8_Write_String@a+1
  1144  0218  120A  118A  22F3  120A  118A  	fcall	_Lcd8_Write_String
  1145  021D                     l237:	
  1146                           ;parkingCar.c: 145:                     }
  1147                           
  1148                           
  1149                           ;parkingCar.c: 146:                 };parkingCar.c: 147:                 if(RB4==1){
  1150  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1151  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1152  021F  084D               	movf	_park+1,w
  1153  0220  00AA               	movwf	toa@value+1
  1154  0221  084C               	movf	_park,w
  1155  0222  00A9               	movwf	toa@value
  1156  0223  3032               	movlw	(low (checkGateStatus@string| 0))& (0+255)
  1157  0224  00B1               	movwf	??_checkGateStatus
  1158  0225  0831               	movf	??_checkGateStatus,w
  1159  0226  00AB               	movwf	toa@ptr
  1160  0227  120A  118A  2029  120A  118A  	fcall	_toa
  1161  022C                     l1984:
  1162                           
  1163                           ;parkingCar.c: 148:                     if (RB3==0){
  1164  022C  300A               	movlw	10
  1165  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1166  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1167  022F  00B1               	movwf	??_checkGateStatus
  1168  0230  0831               	movf	??_checkGateStatus,w
  1169  0231  00A4               	movwf	Lcd8_Set_Cursor@b
  1170  0232  3002               	movlw	2
  1171  0233  120A  118A  24A1  120A  118A  	fcall	_Lcd8_Set_Cursor
  1172  0238                     l1986:
  1173                           
  1174                           ;parkingCar.c: 149:                         if(isOpened == 1){
  1175  0238  3032               	movlw	(low (checkGateStatus@string| 0))& (0+255)
  1176  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1177  023A  1303               	bcf	3,6	;RP1=0, select bank0
  1178  023B  00A4               	movwf	Lcd8_Write_String@a
  1179  023C  3000               	movlw	0
  1180  023D  00A5               	movwf	Lcd8_Write_String@a+1
  1181  023E  120A  118A  22F3  120A  118A  	fcall	_Lcd8_Write_String
  1182  0243                     l240:
  1183  0243  0008               	return
  1184  0244                     __end_of_checkGateStatus:
  1185                           
  1186                           	psect	text3
  1187  0029                     __ptext3:	
  1188 ;; *************** function _toa *****************
  1189 ;; Defined at:
  1190 ;;		line 54 in file "parkingCar.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;  value           2    9[BANK0 ] int 
  1193 ;;  ptr             1   11[BANK0 ] PTR unsigned char 
  1194 ;;		 -> checkGateStatus@string(20), 
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  temp            2   15[BANK0 ] int 
  1197 ;;  count           2   13[BANK0 ] int 
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  2    9[BANK0 ] int 
  1200 ;; Registers used:
  1201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1207 ;;      Params:         0       3       0       0       0
  1208 ;;      Locals:         0       4       0       0       0
  1209 ;;      Temps:          0       1       0       0       0
  1210 ;;      Totals:         0       8       0       0       0
  1211 ;;Total ram usage:        8 bytes
  1212 ;; Hardware stack levels used:    1
  1213 ;; Hardware stack levels required when called:    3
  1214 ;; This function calls:
  1215 ;;		___awdiv
  1216 ;;		___awmod
  1217 ;;		___wmul
  1218 ;; This function is called by:
  1219 ;;		_checkGateStatus
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           
  1224                           ;psect for function _toa
  1225  0029                     _toa:
  1226  0029                     l1898:	
  1227                           ;incstack = 0
  1228                           ; Regs used in _toa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1229                           
  1230                           
  1231                           ;parkingCar.c: 54:     for (int i = 0; i < numberID; i++) {;parkingCar.c: 55:         if
      +                           (strcmp((unsigned char) eeprom_read(i), id) == 0) {;parkingCar.c: 56:             retur
      +                          n 1;
  1232  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1233  002A  1303               	bcf	3,6	;RP1=0, select bank0
  1234  002B  01AD               	clrf	toa@count
  1235  002C  01AE               	clrf	toa@count+1
  1236  002D                     l1900:
  1237                           
  1238                           ;parkingCar.c: 57:         }
  1239  002D  082B               	movf	toa@ptr,w
  1240  002E  1D03               	btfss	3,2
  1241  002F  2831               	goto	u1681
  1242  0030  2832               	goto	u1680
  1243  0031                     u1681:
  1244  0031  2833               	goto	l1904
  1245  0032                     u1680:
  1246  0032  28E2               	goto	l205
  1247  0033                     l1904:
  1248                           
  1249                           ;parkingCar.c: 59:     return 0;
  1250  0033  0829               	movf	toa@value,w
  1251  0034  042A               	iorwf	toa@value+1,w
  1252  0035  1D03               	btfss	3,2
  1253  0036  2838               	goto	u1691
  1254  0037  2839               	goto	u1690
  1255  0038                     u1691:
  1256  0038  2841               	goto	l206
  1257  0039                     u1690:
  1258  0039                     l1906:
  1259                           
  1260                           ;parkingCar.c: 60: };parkingCar.c: 61: 
  1261  0039  3030               	movlw	48
  1262  003A  00AC               	movwf	??_toa
  1263  003B  082B               	movf	toa@ptr,w
  1264  003C  0084               	movwf	4
  1265  003D  082C               	movf	??_toa,w
  1266  003E  1383               	bcf	3,7	;select IRP bank0
  1267  003F  0080               	movwf	0
  1268  0040  28E2               	goto	l205
  1269  0041                     l206:	
  1270                           ;parkingCar.c: 63: 
  1271                           
  1272                           
  1273                           ;parkingCar.c: 65:         return 1;
  1274  0041  1FAA               	btfss	toa@value+1,7
  1275  0042  2844               	goto	u1701
  1276  0043  2845               	goto	u1700
  1277  0044                     u1701:
  1278  0044  2869               	goto	l1918
  1279  0045                     u1700:
  1280  0045                     l1910:
  1281                           
  1282                           ;parkingCar.c: 66:     };parkingCar.c: 67:     return 0;
  1283  0045  30FF               	movlw	255
  1284  0046  00A0               	movwf	___wmul@multiplier
  1285  0047  30FF               	movlw	255
  1286  0048  00A1               	movwf	___wmul@multiplier+1
  1287  0049  082A               	movf	toa@value+1,w
  1288  004A  00A3               	movwf	___wmul@multiplicand+1
  1289  004B  0829               	movf	toa@value,w
  1290  004C  00A2               	movwf	___wmul@multiplicand
  1291  004D  120A  118A  247A  120A  118A  	fcall	___wmul
  1292  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1293  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1294  0054  0821               	movf	?___wmul+1,w
  1295  0055  00AA               	movwf	toa@value+1
  1296  0056  0820               	movf	?___wmul,w
  1297  0057  00A9               	movwf	toa@value
  1298  0058                     l1912:
  1299                           
  1300                           ;parkingCar.c: 68: }
  1301  0058  302D               	movlw	45
  1302  0059  00AC               	movwf	??_toa
  1303  005A  082B               	movf	toa@ptr,w
  1304  005B  0084               	movwf	4
  1305  005C  082C               	movf	??_toa,w
  1306  005D  1383               	bcf	3,7	;select IRP bank0
  1307  005E  0080               	movwf	0
  1308  005F                     l1914:
  1309  005F  3001               	movlw	1
  1310  0060  00AC               	movwf	??_toa
  1311  0061  082C               	movf	??_toa,w
  1312  0062  07AB               	addwf	toa@ptr,f
  1313  0063                     l1916:
  1314                           
  1315                           ;parkingCar.c: 69: 
  1316  0063  3001               	movlw	1
  1317  0064  07AD               	addwf	toa@count,f
  1318  0065  1803               	skipnc
  1319  0066  0AAE               	incf	toa@count+1,f
  1320  0067  3000               	movlw	0
  1321  0068  07AE               	addwf	toa@count+1,f
  1322  0069                     l1918:
  1323                           
  1324                           ;parkingCar.c: 71:     TMR1IE = 1;
  1325  0069  082A               	movf	toa@value+1,w
  1326  006A  00B0               	movwf	toa@temp+1
  1327  006B  0829               	movf	toa@value,w
  1328  006C  00AF               	movwf	toa@temp
  1329  006D                     l1920:
  1330  006D  0830               	movf	toa@temp+1,w
  1331  006E  3A80               	xorlw	128
  1332  006F  00FF               	movwf	btemp+1
  1333  0070  3080               	movlw	128
  1334  0071  027F               	subwf	btemp+1,w
  1335  0072  1D03               	skipz
  1336  0073  2876               	goto	u1715
  1337  0074  3001               	movlw	1
  1338  0075  022F               	subwf	toa@temp,w
  1339  0076                     u1715:
  1340  0076  1803               	skipnc
  1341  0077  2879               	goto	u1711
  1342  0078  287A               	goto	u1710
  1343  0079                     u1711:
  1344  0079  287B               	goto	l1924
  1345  007A                     u1710:
  1346  007A  2895               	goto	l1930
  1347  007B                     l1924:
  1348  007B  300A               	movlw	10
  1349  007C  1283               	bcf	3,5	;RP0=0, select bank0
  1350  007D  1303               	bcf	3,6	;RP1=0, select bank0
  1351  007E  00A0               	movwf	___awdiv@divisor
  1352  007F  3000               	movlw	0
  1353  0080  00A1               	movwf	___awdiv@divisor+1
  1354  0081  0830               	movf	toa@temp+1,w
  1355  0082  00A3               	movwf	___awdiv@dividend+1
  1356  0083  082F               	movf	toa@temp,w
  1357  0084  00A2               	movwf	___awdiv@dividend
  1358  0085  120A  118A  2177  120A  118A  	fcall	___awdiv
  1359  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1360  008B  1303               	bcf	3,6	;RP1=0, select bank0
  1361  008C  0821               	movf	?___awdiv+1,w
  1362  008D  00B0               	movwf	toa@temp+1
  1363  008E  0820               	movf	?___awdiv,w
  1364  008F  00AF               	movwf	toa@temp
  1365  0090                     l1926:
  1366  0090  3001               	movlw	1
  1367  0091  00AC               	movwf	??_toa
  1368  0092  082C               	movf	??_toa,w
  1369  0093  07AB               	addwf	toa@ptr,f
  1370  0094  286D               	goto	l1920
  1371  0095                     l1930:
  1372                           
  1373                           ;parkingCar.c: 72:     TMR1IF = 0;
  1374  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1375  0096  1303               	bcf	3,6	;RP1=0, select bank0
  1376  0097  082B               	movf	toa@ptr,w
  1377  0098  0084               	movwf	4
  1378  0099  1383               	bcf	3,7	;select IRP bank0
  1379  009A  0180               	clrf	0
  1380  009B                     l1932:
  1381                           
  1382                           ;parkingCar.c: 73:     PEIE = 1;
  1383  009B  082A               	movf	toa@value+1,w
  1384  009C  00B0               	movwf	toa@temp+1
  1385  009D  0829               	movf	toa@value,w
  1386  009E  00AF               	movwf	toa@temp
  1387  009F                     l1934:
  1388  009F  0830               	movf	toa@temp+1,w
  1389  00A0  3A80               	xorlw	128
  1390  00A1  00FF               	movwf	btemp+1
  1391  00A2  3080               	movlw	128
  1392  00A3  027F               	subwf	btemp+1,w
  1393  00A4  1D03               	skipz
  1394  00A5  28A8               	goto	u1725
  1395  00A6  3001               	movlw	1
  1396  00A7  022F               	subwf	toa@temp,w
  1397  00A8                     u1725:
  1398  00A8  1803               	skipnc
  1399  00A9  28AB               	goto	u1721
  1400  00AA  28AC               	goto	u1720
  1401  00AB                     u1721:
  1402  00AB  28AD               	goto	l1938
  1403  00AC                     u1720:
  1404  00AC  28E2               	goto	l205
  1405  00AD                     l1938:
  1406                           
  1407                           ;parkingCar.c: 74:     GIE = 1;;parkingCar.c: 75: 
  1408  00AD  300A               	movlw	10
  1409  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1410  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1411  00B0  00A0               	movwf	___awmod@divisor
  1412  00B1  3000               	movlw	0
  1413  00B2  00A1               	movwf	___awmod@divisor+1
  1414  00B3  0830               	movf	toa@temp+1,w
  1415  00B4  00A3               	movwf	___awmod@dividend+1
  1416  00B5  082F               	movf	toa@temp,w
  1417  00B6  00A2               	movwf	___awmod@dividend
  1418  00B7  120A  118A  2244  120A  118A  	fcall	___awmod
  1419  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1420  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1421  00BE  0820               	movf	?___awmod,w
  1422  00BF  3E30               	addlw	48
  1423  00C0  00AC               	movwf	??_toa
  1424  00C1  3001               	movlw	1
  1425  00C2  02AB               	subwf	toa@ptr,f
  1426  00C3  082B               	movf	toa@ptr,w
  1427  00C4  0084               	movwf	4
  1428  00C5  082C               	movf	??_toa,w
  1429  00C6  1383               	bcf	3,7	;select IRP bank0
  1430  00C7  0080               	movwf	0
  1431  00C8                     l1940:
  1432                           
  1433                           ;parkingCar.c: 76: 
  1434  00C8  3001               	movlw	1
  1435  00C9  07AD               	addwf	toa@count,f
  1436  00CA  1803               	skipnc
  1437  00CB  0AAE               	incf	toa@count+1,f
  1438  00CC  3000               	movlw	0
  1439  00CD  07AE               	addwf	toa@count+1,f
  1440  00CE                     l1942:
  1441                           
  1442                           ;parkingCar.c: 77: 
  1443  00CE  300A               	movlw	10
  1444  00CF  00A0               	movwf	___awdiv@divisor
  1445  00D0  3000               	movlw	0
  1446  00D1  00A1               	movwf	___awdiv@divisor+1
  1447  00D2  0830               	movf	toa@temp+1,w
  1448  00D3  00A3               	movwf	___awdiv@dividend+1
  1449  00D4  082F               	movf	toa@temp,w
  1450  00D5  00A2               	movwf	___awdiv@dividend
  1451  00D6  120A  118A  2177  120A  118A  	fcall	___awdiv
  1452  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1453  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1454  00DD  0821               	movf	?___awdiv+1,w
  1455  00DE  00B0               	movwf	toa@temp+1
  1456  00DF  0820               	movf	?___awdiv,w
  1457  00E0  00AF               	movwf	toa@temp
  1458  00E1  289F               	goto	l1934
  1459  00E2                     l205:
  1460  00E2  0008               	return
  1461  00E3                     __end_of_toa:
  1462                           
  1463                           	psect	text4
  1464  047A                     __ptext4:	
  1465 ;; *************** function ___wmul *****************
  1466 ;; Defined at:
  1467 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1470 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  product         2    4[BANK0 ] unsigned int 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  2    0[BANK0 ] unsigned int 
  1475 ;; Registers used:
  1476 ;;		wreg, status,2, status,0
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1482 ;;      Params:         0       4       0       0       0
  1483 ;;      Locals:         0       2       0       0       0
  1484 ;;      Temps:          0       0       0       0       0
  1485 ;;      Totals:         0       6       0       0       0
  1486 ;;Total ram usage:        6 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; Hardware stack levels required when called:    2
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_toa
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           
  1497                           ;psect for function ___wmul
  1498  047A                     ___wmul:
  1499  047A                     l1786:	
  1500                           ;incstack = 0
  1501                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1502                           
  1503  047A  1283               	bcf	3,5	;RP0=0, select bank0
  1504  047B  1303               	bcf	3,6	;RP1=0, select bank0
  1505  047C  01A4               	clrf	___wmul@product
  1506  047D  01A5               	clrf	___wmul@product+1
  1507  047E                     l1788:
  1508  047E  1C20               	btfss	___wmul@multiplier,0
  1509  047F  2C81               	goto	u1401
  1510  0480  2C82               	goto	u1400
  1511  0481                     u1401:
  1512  0481  2C88               	goto	l396
  1513  0482                     u1400:
  1514  0482                     l1790:
  1515  0482  0822               	movf	___wmul@multiplicand,w
  1516  0483  07A4               	addwf	___wmul@product,f
  1517  0484  1803               	skipnc
  1518  0485  0AA5               	incf	___wmul@product+1,f
  1519  0486  0823               	movf	___wmul@multiplicand+1,w
  1520  0487  07A5               	addwf	___wmul@product+1,f
  1521  0488                     l396:
  1522  0488  3001               	movlw	1
  1523  0489                     u1415:
  1524  0489  1003               	clrc
  1525  048A  0DA2               	rlf	___wmul@multiplicand,f
  1526  048B  0DA3               	rlf	___wmul@multiplicand+1,f
  1527  048C  3EFF               	addlw	-1
  1528  048D  1D03               	skipz
  1529  048E  2C89               	goto	u1415
  1530  048F                     l1792:
  1531  048F  3001               	movlw	1
  1532  0490                     u1425:
  1533  0490  1003               	clrc
  1534  0491  0CA1               	rrf	___wmul@multiplier+1,f
  1535  0492  0CA0               	rrf	___wmul@multiplier,f
  1536  0493  3EFF               	addlw	-1
  1537  0494  1D03               	skipz
  1538  0495  2C90               	goto	u1425
  1539  0496                     l1794:
  1540  0496  0820               	movf	___wmul@multiplier,w
  1541  0497  0421               	iorwf	___wmul@multiplier+1,w
  1542  0498  1D03               	btfss	3,2
  1543  0499  2C9B               	goto	u1431
  1544  049A  2C9C               	goto	u1430
  1545  049B                     u1431:
  1546  049B  2C7E               	goto	l1788
  1547  049C                     u1430:
  1548  049C                     l1796:
  1549  049C  0825               	movf	___wmul@product+1,w
  1550  049D  00A1               	movwf	?___wmul+1
  1551  049E  0824               	movf	___wmul@product,w
  1552  049F  00A0               	movwf	?___wmul
  1553  04A0                     l398:
  1554  04A0  0008               	return
  1555  04A1                     __end_of___wmul:
  1556                           
  1557                           	psect	text5
  1558  0244                     __ptext5:	
  1559 ;; *************** function ___awmod *****************
  1560 ;; Defined at:
  1561 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awmod.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  divisor         2    0[BANK0 ] int 
  1564 ;;  dividend        2    2[BANK0 ] int 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  sign            1    6[BANK0 ] unsigned char 
  1567 ;;  counter         1    5[BANK0 ] unsigned char 
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  2    0[BANK0 ] int 
  1570 ;; Registers used:
  1571 ;;		wreg, status,2, status,0
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1577 ;;      Params:         0       4       0       0       0
  1578 ;;      Locals:         0       2       0       0       0
  1579 ;;      Temps:          0       1       0       0       0
  1580 ;;      Totals:         0       7       0       0       0
  1581 ;;Total ram usage:        7 bytes
  1582 ;; Hardware stack levels used:    1
  1583 ;; Hardware stack levels required when called:    2
  1584 ;; This function calls:
  1585 ;;		Nothing
  1586 ;; This function is called by:
  1587 ;;		_toa
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           
  1592                           ;psect for function ___awmod
  1593  0244                     ___awmod:
  1594  0244                     l1844:	
  1595                           ;incstack = 0
  1596                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1597                           
  1598  0244  1283               	bcf	3,5	;RP0=0, select bank0
  1599  0245  1303               	bcf	3,6	;RP1=0, select bank0
  1600  0246  01A6               	clrf	___awmod@sign
  1601  0247                     l1846:
  1602  0247  1FA3               	btfss	___awmod@dividend+1,7
  1603  0248  2A4A               	goto	u1541
  1604  0249  2A4B               	goto	u1540
  1605  024A                     u1541:
  1606  024A  2A52               	goto	l1852
  1607  024B                     u1540:
  1608  024B                     l1848:
  1609  024B  09A2               	comf	___awmod@dividend,f
  1610  024C  09A3               	comf	___awmod@dividend+1,f
  1611  024D  0AA2               	incf	___awmod@dividend,f
  1612  024E  1903               	skipnz
  1613  024F  0AA3               	incf	___awmod@dividend+1,f
  1614  0250                     l1850:
  1615  0250  01A6               	clrf	___awmod@sign
  1616  0251  0AA6               	incf	___awmod@sign,f
  1617  0252                     l1852:
  1618  0252  1FA1               	btfss	___awmod@divisor+1,7
  1619  0253  2A55               	goto	u1551
  1620  0254  2A56               	goto	u1550
  1621  0255                     u1551:
  1622  0255  2A5B               	goto	l1856
  1623  0256                     u1550:
  1624  0256                     l1854:
  1625  0256  09A0               	comf	___awmod@divisor,f
  1626  0257  09A1               	comf	___awmod@divisor+1,f
  1627  0258  0AA0               	incf	___awmod@divisor,f
  1628  0259  1903               	skipnz
  1629  025A  0AA1               	incf	___awmod@divisor+1,f
  1630  025B                     l1856:
  1631  025B  0820               	movf	___awmod@divisor,w
  1632  025C  0421               	iorwf	___awmod@divisor+1,w
  1633  025D  1903               	btfsc	3,2
  1634  025E  2A60               	goto	u1561
  1635  025F  2A61               	goto	u1560
  1636  0260                     u1561:
  1637  0260  2A90               	goto	l1874
  1638  0261                     u1560:
  1639  0261                     l1858:
  1640  0261  01A5               	clrf	___awmod@counter
  1641  0262  0AA5               	incf	___awmod@counter,f
  1642  0263  2A6F               	goto	l1864
  1643  0264                     l1860:
  1644  0264  3001               	movlw	1
  1645  0265                     u1575:
  1646  0265  1003               	clrc
  1647  0266  0DA0               	rlf	___awmod@divisor,f
  1648  0267  0DA1               	rlf	___awmod@divisor+1,f
  1649  0268  3EFF               	addlw	-1
  1650  0269  1D03               	skipz
  1651  026A  2A65               	goto	u1575
  1652  026B                     l1862:
  1653  026B  3001               	movlw	1
  1654  026C  00A4               	movwf	??___awmod
  1655  026D  0824               	movf	??___awmod,w
  1656  026E  07A5               	addwf	___awmod@counter,f
  1657  026F                     l1864:
  1658  026F  1FA1               	btfss	___awmod@divisor+1,7
  1659  0270  2A72               	goto	u1581
  1660  0271  2A73               	goto	u1580
  1661  0272                     u1581:
  1662  0272  2A64               	goto	l1860
  1663  0273                     u1580:
  1664  0273                     l1866:
  1665  0273  0821               	movf	___awmod@divisor+1,w
  1666  0274  0223               	subwf	___awmod@dividend+1,w
  1667  0275  1D03               	skipz
  1668  0276  2A79               	goto	u1595
  1669  0277  0820               	movf	___awmod@divisor,w
  1670  0278  0222               	subwf	___awmod@dividend,w
  1671  0279                     u1595:
  1672  0279  1C03               	skipc
  1673  027A  2A7C               	goto	u1591
  1674  027B  2A7D               	goto	u1590
  1675  027C                     u1591:
  1676  027C  2A83               	goto	l1870
  1677  027D                     u1590:
  1678  027D                     l1868:
  1679  027D  0820               	movf	___awmod@divisor,w
  1680  027E  02A2               	subwf	___awmod@dividend,f
  1681  027F  0821               	movf	___awmod@divisor+1,w
  1682  0280  1C03               	skipc
  1683  0281  03A3               	decf	___awmod@dividend+1,f
  1684  0282  02A3               	subwf	___awmod@dividend+1,f
  1685  0283                     l1870:
  1686  0283  3001               	movlw	1
  1687  0284                     u1605:
  1688  0284  1003               	clrc
  1689  0285  0CA1               	rrf	___awmod@divisor+1,f
  1690  0286  0CA0               	rrf	___awmod@divisor,f
  1691  0287  3EFF               	addlw	-1
  1692  0288  1D03               	skipz
  1693  0289  2A84               	goto	u1605
  1694  028A                     l1872:
  1695  028A  3001               	movlw	1
  1696  028B  02A5               	subwf	___awmod@counter,f
  1697  028C  1D03               	btfss	3,2
  1698  028D  2A8F               	goto	u1611
  1699  028E  2A90               	goto	u1610
  1700  028F                     u1611:
  1701  028F  2A73               	goto	l1866
  1702  0290                     u1610:
  1703  0290                     l1874:
  1704  0290  0826               	movf	___awmod@sign,w
  1705  0291  1903               	btfsc	3,2
  1706  0292  2A94               	goto	u1621
  1707  0293  2A95               	goto	u1620
  1708  0294                     u1621:
  1709  0294  2A9A               	goto	l1878
  1710  0295                     u1620:
  1711  0295                     l1876:
  1712  0295  09A2               	comf	___awmod@dividend,f
  1713  0296  09A3               	comf	___awmod@dividend+1,f
  1714  0297  0AA2               	incf	___awmod@dividend,f
  1715  0298  1903               	skipnz
  1716  0299  0AA3               	incf	___awmod@dividend+1,f
  1717  029A                     l1878:
  1718  029A  0823               	movf	___awmod@dividend+1,w
  1719  029B  00A1               	movwf	?___awmod+1
  1720  029C  0822               	movf	___awmod@dividend,w
  1721  029D  00A0               	movwf	?___awmod
  1722  029E                     l562:
  1723  029E  0008               	return
  1724  029F                     __end_of___awmod:
  1725                           
  1726                           	psect	text6
  1727  0177                     __ptext6:	
  1728 ;; *************** function ___awdiv *****************
  1729 ;; Defined at:
  1730 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awdiv.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  divisor         2    0[BANK0 ] int 
  1733 ;;  dividend        2    2[BANK0 ] int 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  quotient        2    7[BANK0 ] int 
  1736 ;;  sign            1    6[BANK0 ] unsigned char 
  1737 ;;  counter         1    5[BANK0 ] unsigned char 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  2    0[BANK0 ] int 
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1747 ;;      Params:         0       4       0       0       0
  1748 ;;      Locals:         0       4       0       0       0
  1749 ;;      Temps:          0       1       0       0       0
  1750 ;;      Totals:         0       9       0       0       0
  1751 ;;Total ram usage:        9 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:    2
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		_toa
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           
  1762                           ;psect for function ___awdiv
  1763  0177                     ___awdiv:
  1764  0177                     l1800:	
  1765                           ;incstack = 0
  1766                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1767                           
  1768  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1769  0178  1303               	bcf	3,6	;RP1=0, select bank0
  1770  0179  01A6               	clrf	___awdiv@sign
  1771  017A                     l1802:
  1772  017A  1FA1               	btfss	___awdiv@divisor+1,7
  1773  017B  297D               	goto	u1441
  1774  017C  297E               	goto	u1440
  1775  017D                     u1441:
  1776  017D  2985               	goto	l1808
  1777  017E                     u1440:
  1778  017E                     l1804:
  1779  017E  09A0               	comf	___awdiv@divisor,f
  1780  017F  09A1               	comf	___awdiv@divisor+1,f
  1781  0180  0AA0               	incf	___awdiv@divisor,f
  1782  0181  1903               	skipnz
  1783  0182  0AA1               	incf	___awdiv@divisor+1,f
  1784  0183                     l1806:
  1785  0183  01A6               	clrf	___awdiv@sign
  1786  0184  0AA6               	incf	___awdiv@sign,f
  1787  0185                     l1808:
  1788  0185  1FA3               	btfss	___awdiv@dividend+1,7
  1789  0186  2988               	goto	u1451
  1790  0187  2989               	goto	u1450
  1791  0188                     u1451:
  1792  0188  2992               	goto	l1814
  1793  0189                     u1450:
  1794  0189                     l1810:
  1795  0189  09A2               	comf	___awdiv@dividend,f
  1796  018A  09A3               	comf	___awdiv@dividend+1,f
  1797  018B  0AA2               	incf	___awdiv@dividend,f
  1798  018C  1903               	skipnz
  1799  018D  0AA3               	incf	___awdiv@dividend+1,f
  1800  018E                     l1812:
  1801  018E  3001               	movlw	1
  1802  018F  00A4               	movwf	??___awdiv
  1803  0190  0824               	movf	??___awdiv,w
  1804  0191  06A6               	xorwf	___awdiv@sign,f
  1805  0192                     l1814:
  1806  0192  01A7               	clrf	___awdiv@quotient
  1807  0193  01A8               	clrf	___awdiv@quotient+1
  1808  0194                     l1816:
  1809  0194  0820               	movf	___awdiv@divisor,w
  1810  0195  0421               	iorwf	___awdiv@divisor+1,w
  1811  0196  1903               	btfsc	3,2
  1812  0197  2999               	goto	u1461
  1813  0198  299A               	goto	u1460
  1814  0199                     u1461:
  1815  0199  29D1               	goto	l1836
  1816  019A                     u1460:
  1817  019A                     l1818:
  1818  019A  01A5               	clrf	___awdiv@counter
  1819  019B  0AA5               	incf	___awdiv@counter,f
  1820  019C  29A8               	goto	l1824
  1821  019D                     l1820:
  1822  019D  3001               	movlw	1
  1823  019E                     u1475:
  1824  019E  1003               	clrc
  1825  019F  0DA0               	rlf	___awdiv@divisor,f
  1826  01A0  0DA1               	rlf	___awdiv@divisor+1,f
  1827  01A1  3EFF               	addlw	-1
  1828  01A2  1D03               	skipz
  1829  01A3  299E               	goto	u1475
  1830  01A4                     l1822:
  1831  01A4  3001               	movlw	1
  1832  01A5  00A4               	movwf	??___awdiv
  1833  01A6  0824               	movf	??___awdiv,w
  1834  01A7  07A5               	addwf	___awdiv@counter,f
  1835  01A8                     l1824:
  1836  01A8  1FA1               	btfss	___awdiv@divisor+1,7
  1837  01A9  29AB               	goto	u1481
  1838  01AA  29AC               	goto	u1480
  1839  01AB                     u1481:
  1840  01AB  299D               	goto	l1820
  1841  01AC                     u1480:
  1842  01AC                     l1826:
  1843  01AC  3001               	movlw	1
  1844  01AD                     u1495:
  1845  01AD  1003               	clrc
  1846  01AE  0DA7               	rlf	___awdiv@quotient,f
  1847  01AF  0DA8               	rlf	___awdiv@quotient+1,f
  1848  01B0  3EFF               	addlw	-1
  1849  01B1  1D03               	skipz
  1850  01B2  29AD               	goto	u1495
  1851  01B3  0821               	movf	___awdiv@divisor+1,w
  1852  01B4  0223               	subwf	___awdiv@dividend+1,w
  1853  01B5  1D03               	skipz
  1854  01B6  29B9               	goto	u1505
  1855  01B7  0820               	movf	___awdiv@divisor,w
  1856  01B8  0222               	subwf	___awdiv@dividend,w
  1857  01B9                     u1505:
  1858  01B9  1C03               	skipc
  1859  01BA  29BC               	goto	u1501
  1860  01BB  29BD               	goto	u1500
  1861  01BC                     u1501:
  1862  01BC  29C4               	goto	l1832
  1863  01BD                     u1500:
  1864  01BD                     l1828:
  1865  01BD  0820               	movf	___awdiv@divisor,w
  1866  01BE  02A2               	subwf	___awdiv@dividend,f
  1867  01BF  0821               	movf	___awdiv@divisor+1,w
  1868  01C0  1C03               	skipc
  1869  01C1  03A3               	decf	___awdiv@dividend+1,f
  1870  01C2  02A3               	subwf	___awdiv@dividend+1,f
  1871  01C3                     l1830:
  1872  01C3  1427               	bsf	___awdiv@quotient,0
  1873  01C4                     l1832:
  1874  01C4  3001               	movlw	1
  1875  01C5                     u1515:
  1876  01C5  1003               	clrc
  1877  01C6  0CA1               	rrf	___awdiv@divisor+1,f
  1878  01C7  0CA0               	rrf	___awdiv@divisor,f
  1879  01C8  3EFF               	addlw	-1
  1880  01C9  1D03               	skipz
  1881  01CA  29C5               	goto	u1515
  1882  01CB                     l1834:
  1883  01CB  3001               	movlw	1
  1884  01CC  02A5               	subwf	___awdiv@counter,f
  1885  01CD  1D03               	btfss	3,2
  1886  01CE  29D0               	goto	u1521
  1887  01CF  29D1               	goto	u1520
  1888  01D0                     u1521:
  1889  01D0  29AC               	goto	l1826
  1890  01D1                     u1520:
  1891  01D1                     l1836:
  1892  01D1  0826               	movf	___awdiv@sign,w
  1893  01D2  1903               	btfsc	3,2
  1894  01D3  29D5               	goto	u1531
  1895  01D4  29D6               	goto	u1530
  1896  01D5                     u1531:
  1897  01D5  29DB               	goto	l1840
  1898  01D6                     u1530:
  1899  01D6                     l1838:
  1900  01D6  09A7               	comf	___awdiv@quotient,f
  1901  01D7  09A8               	comf	___awdiv@quotient+1,f
  1902  01D8  0AA7               	incf	___awdiv@quotient,f
  1903  01D9  1903               	skipnz
  1904  01DA  0AA8               	incf	___awdiv@quotient+1,f
  1905  01DB                     l1840:
  1906  01DB  0828               	movf	___awdiv@quotient+1,w
  1907  01DC  00A1               	movwf	?___awdiv+1
  1908  01DD  0827               	movf	___awdiv@quotient,w
  1909  01DE  00A0               	movwf	?___awdiv
  1910  01DF                     l549:
  1911  01DF  0008               	return
  1912  01E0                     __end_of___awdiv:
  1913                           
  1914                           	psect	text7
  1915  02F3                     __ptext7:	
  1916 ;; *************** function _Lcd8_Write_String *****************
  1917 ;; Defined at:
  1918 ;;		line 105 in file "./lcd.h"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  a               2    4[BANK0 ] PTR unsigned char 
  1921 ;;		 -> STR_5(10), checkGateStatus@string(20), STR_4(8), STR_3(8), 
  1922 ;;		 -> STR_2(8), 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  i               2    9[BANK0 ] int 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1934 ;;      Params:         0       2       0       0       0
  1935 ;;      Locals:         0       2       0       0       0
  1936 ;;      Temps:          0       3       0       0       0
  1937 ;;      Totals:         0       7       0       0       0
  1938 ;;Total ram usage:        7 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:    4
  1941 ;; This function calls:
  1942 ;;		_Lcd8_Write_Char
  1943 ;; This function is called by:
  1944 ;;		_checkGateStatus
  1945 ;;		_main
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           
  1950                           ;psect for function _Lcd8_Write_String
  1951  02F3                     _Lcd8_Write_String:
  1952  02F3                     l1890:	
  1953                           ;incstack = 0
  1954                           ; Regs used in _Lcd8_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1955                           
  1956                           
  1957                           ;./lcd.h: 105: void Lcd8_Write_String(char *a);./lcd.h: 106: {;./lcd.h: 107:  int i;;./l
      +                          cd.h: 108:  for(i=0;a[i]!='\0';i++)
  1958  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  1959  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  1960  02F5  01A9               	clrf	Lcd8_Write_String@i
  1961  02F6  01AA               	clrf	Lcd8_Write_String@i+1
  1962  02F7  2B1C               	goto	l1896
  1963  02F8                     l1892:
  1964                           
  1965                           ;./lcd.h: 109:   Lcd8_Write_Char(a[i]);
  1966  02F8  0829               	movf	Lcd8_Write_String@i,w
  1967  02F9  0724               	addwf	Lcd8_Write_String@a,w
  1968  02FA  00A7               	movwf	??_Lcd8_Write_String+1
  1969  02FB  0825               	movf	Lcd8_Write_String@a+1,w
  1970  02FC  00A6               	movwf	??_Lcd8_Write_String
  1971  02FD  1803               	skipnc
  1972  02FE  0AA6               	incf	??_Lcd8_Write_String,f
  1973  02FF  1FA9               	btfss	Lcd8_Write_String@i,7
  1974  0300  2B02               	goto	u1650
  1975  0301  03A6               	decf	??_Lcd8_Write_String,f
  1976  0302                     u1650:
  1977  0302  1283               	bcf	3,5	;RP0=0, select bank0
  1978  0303  1303               	bcf	3,6	;RP1=0, select bank0
  1979  0304  0826               	movf	??_Lcd8_Write_String,w
  1980  0305  00A8               	movwf	??_Lcd8_Write_String+2
  1981  0306  0828               	movf	??_Lcd8_Write_String+2,w
  1982  0307  00FF               	movwf	btemp+1
  1983  0308  0827               	movf	??_Lcd8_Write_String+1,w
  1984  0309  0084               	movwf	4
  1985  030A  120A  118A  2339  120A  118A  	fcall	stringtab
  1986  030F  120A  118A  24BF  120A  118A  	fcall	_Lcd8_Write_Char
  1987  0314                     l1894:
  1988  0314  3001               	movlw	1
  1989  0315  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0316  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0317  07A9               	addwf	Lcd8_Write_String@i,f
  1992  0318  1803               	skipnc
  1993  0319  0AAA               	incf	Lcd8_Write_String@i+1,f
  1994  031A  3000               	movlw	0
  1995  031B  07AA               	addwf	Lcd8_Write_String@i+1,f
  1996  031C                     l1896:
  1997  031C  0829               	movf	Lcd8_Write_String@i,w
  1998  031D  0724               	addwf	Lcd8_Write_String@a,w
  1999  031E  00A7               	movwf	??_Lcd8_Write_String+1
  2000  031F  0825               	movf	Lcd8_Write_String@a+1,w
  2001  0320  00A6               	movwf	??_Lcd8_Write_String
  2002  0321  1803               	skipnc
  2003  0322  0AA6               	incf	??_Lcd8_Write_String,f
  2004  0323  1FA9               	btfss	Lcd8_Write_String@i,7
  2005  0324  2B26               	goto	u1660
  2006  0325  03A6               	decf	??_Lcd8_Write_String,f
  2007  0326                     u1660:
  2008  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2009  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2010  0328  0826               	movf	??_Lcd8_Write_String,w
  2011  0329  00A8               	movwf	??_Lcd8_Write_String+2
  2012  032A  0828               	movf	??_Lcd8_Write_String+2,w
  2013  032B  00FF               	movwf	btemp+1
  2014  032C  0827               	movf	??_Lcd8_Write_String+1,w
  2015  032D  0084               	movwf	4
  2016  032E  120A  118A  2339  120A  118A  	fcall	stringtab
  2017  0333  3A00               	xorlw	0
  2018  0334  1D03               	skipz
  2019  0335  2B37               	goto	u1671
  2020  0336  2B38               	goto	u1670
  2021  0337                     u1671:
  2022  0337  2AF8               	goto	l1892
  2023  0338                     u1670:
  2024  0338                     l144:
  2025  0338  0008               	return
  2026  0339                     __end_of_Lcd8_Write_String:
  2027                           
  2028                           	psect	text8
  2029  04BF                     __ptext8:	
  2030 ;; *************** function _Lcd8_Write_Char *****************
  2031 ;; Defined at:
  2032 ;;		line 96 in file "./lcd.h"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  a               1    wreg     unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  a               1    3[BANK0 ] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0, pclath, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2046 ;;      Params:         0       0       0       0       0
  2047 ;;      Locals:         0       1       0       0       0
  2048 ;;      Temps:          0       2       0       0       0
  2049 ;;      Totals:         0       3       0       0       0
  2050 ;;Total ram usage:        3 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    3
  2053 ;; This function calls:
  2054 ;;		_Lcd8_Port
  2055 ;; This function is called by:
  2056 ;;		_Lcd8_Write_String
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           
  2061                           ;psect for function _Lcd8_Write_Char
  2062  04BF                     _Lcd8_Write_Char:
  2063                           
  2064                           ;incstack = 0
  2065                           ; Regs used in _Lcd8_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2066                           ;Lcd8_Write_Char@a stored from wreg
  2067  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2068  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2069  04C1  00A3               	movwf	Lcd8_Write_Char@a
  2070  04C2                     l1776:
  2071                           
  2072                           ;./lcd.h: 96: void Lcd8_Write_Char(char a);./lcd.h: 97: {;./lcd.h: 98:    RC0 = 1;
  2073  04C2  1407               	bsf	7,0	;volatile
  2074  04C3                     l1778:
  2075                           
  2076                           ;./lcd.h: 99:    Lcd8_Port(a);
  2077  04C3  0823               	movf	Lcd8_Write_Char@a,w
  2078  04C4  120A  118A  2378  120A  118A  	fcall	_Lcd8_Port
  2079  04C9                     l1780:
  2080                           
  2081                           ;./lcd.h: 100:    RC2 = 1;
  2082  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  2083  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  2084  04CB  1507               	bsf	7,2	;volatile
  2085  04CC                     l1782:
  2086                           
  2087                           ;./lcd.h: 101:   _delay((unsigned long)((4)*(16000000/4000.0)));
  2088  04CC  3015               	movlw	21
  2089  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  2090  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  2091  04CF  00A2               	movwf	??_Lcd8_Write_Char+1
  2092  04D0  30C5               	movlw	197
  2093  04D1  00A1               	movwf	??_Lcd8_Write_Char
  2094  04D2                     u1877:
  2095  04D2  0BA1               	decfsz	??_Lcd8_Write_Char,f
  2096  04D3  2CD2               	goto	u1877
  2097  04D4  0BA2               	decfsz	??_Lcd8_Write_Char+1,f
  2098  04D5  2CD2               	goto	u1877
  2099  04D6  2CD7               	nop2
  2100  04D7                     l1784:
  2101                           
  2102                           ;./lcd.h: 102:    RC2 = 0;
  2103  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2104  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2105  04D9  1107               	bcf	7,2	;volatile
  2106  04DA                     l138:
  2107  04DA  0008               	return
  2108  04DB                     __end_of_Lcd8_Write_Char:
  2109                           
  2110                           	psect	text9
  2111  04A1                     __ptext9:	
  2112 ;; *************** function _Lcd8_Set_Cursor *****************
  2113 ;; Defined at:
  2114 ;;		line 70 in file "./lcd.h"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  a               1    wreg     unsigned char 
  2117 ;;  b               1    4[BANK0 ] unsigned char 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  a               1    5[BANK0 ] unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, status,2, status,0, pclath, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2129 ;;      Params:         0       1       0       0       0
  2130 ;;      Locals:         0       1       0       0       0
  2131 ;;      Temps:          0       0       0       0       0
  2132 ;;      Totals:         0       2       0       0       0
  2133 ;;Total ram usage:        2 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    4
  2136 ;; This function calls:
  2137 ;;		_Lcd8_Cmd
  2138 ;; This function is called by:
  2139 ;;		_checkGateStatus
  2140 ;;		_main
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           
  2145                           ;psect for function _Lcd8_Set_Cursor
  2146  04A1                     _Lcd8_Set_Cursor:
  2147                           
  2148                           ;incstack = 0
  2149                           ; Regs used in _Lcd8_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2150                           ;Lcd8_Set_Cursor@a stored from wreg
  2151  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  2152  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  2153  04A3  00A5               	movwf	Lcd8_Set_Cursor@a
  2154  04A4                     l1882:
  2155                           
  2156                           ;./lcd.h: 70: void Lcd8_Set_Cursor(char a, char b);./lcd.h: 71: {;./lcd.h: 72:  if(a == 
      +                          1)
  2157  04A4  0325               	decf	Lcd8_Set_Cursor@a,w
  2158  04A5  1D03               	btfss	3,2
  2159  04A6  2CA8               	goto	u1631
  2160  04A7  2CA9               	goto	u1630
  2161  04A8                     u1631:
  2162  04A8  2CB1               	goto	l1886
  2163  04A9                     u1630:
  2164  04A9                     l1884:
  2165                           
  2166                           ;./lcd.h: 73:    Lcd8_Cmd(0x80 + b);
  2167  04A9  0824               	movf	Lcd8_Set_Cursor@b,w
  2168  04AA  3E80               	addlw	128
  2169  04AB  120A  118A  24DB  120A  118A  	fcall	_Lcd8_Cmd
  2170  04B0  2CBE               	goto	l132
  2171  04B1                     l1886:
  2172  04B1  3002               	movlw	2
  2173  04B2  0625               	xorwf	Lcd8_Set_Cursor@a,w
  2174  04B3  1D03               	btfss	3,2
  2175  04B4  2CB6               	goto	u1641
  2176  04B5  2CB7               	goto	u1640
  2177  04B6                     u1641:
  2178  04B6  2CBE               	goto	l132
  2179  04B7                     u1640:
  2180  04B7                     l1888:
  2181                           
  2182                           ;./lcd.h: 75:   Lcd8_Cmd(0xC0 + b);
  2183  04B7  0824               	movf	Lcd8_Set_Cursor@b,w
  2184  04B8  3EC0               	addlw	192
  2185  04B9  120A  118A  24DB  120A  118A  	fcall	_Lcd8_Cmd
  2186  04BE                     l132:
  2187  04BE  0008               	return
  2188  04BF                     __end_of_Lcd8_Set_Cursor:
  2189                           
  2190                           	psect	text10
  2191  03B4                     __ptext10:	
  2192 ;; *************** function _Rotation90 *****************
  2193 ;; Defined at:
  2194 ;;		line 216 in file "parkingCar.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;		None
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;  i               2    2[BANK0 ] unsigned int 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  1    wreg      void 
  2201 ;; Registers used:
  2202 ;;		wreg, status,2
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2208 ;;      Params:         0       0       0       0       0
  2209 ;;      Locals:         0       2       0       0       0
  2210 ;;      Temps:          0       2       0       0       0
  2211 ;;      Totals:         0       4       0       0       0
  2212 ;;Total ram usage:        4 bytes
  2213 ;; Hardware stack levels used:    1
  2214 ;; Hardware stack levels required when called:    2
  2215 ;; This function calls:
  2216 ;;		Nothing
  2217 ;; This function is called by:
  2218 ;;		_main
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           
  2223                           ;psect for function _Rotation90
  2224  03B4                     _Rotation90:
  2225  03B4                     l1988:	
  2226                           ;incstack = 0
  2227                           ; Regs used in _Rotation90: [wreg+status,2]
  2228                           
  2229  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2230  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2231  03B6  01A2               	clrf	Rotation90@i
  2232  03B7  01A3               	clrf	Rotation90@i+1
  2233  03B8                     l263:
  2234  03B8  1486               	bsf	6,1	;volatile
  2235  03B9                     l1994:
  2236  03B9  300B               	movlw	11
  2237  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2238  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  2239  03BC  00A1               	movwf	??_Rotation90+1
  2240  03BD  301F               	movlw	31
  2241  03BE  00A0               	movwf	??_Rotation90
  2242  03BF                     u1887:
  2243  03BF  0BA0               	decfsz	??_Rotation90,f
  2244  03C0  2BBF               	goto	u1887
  2245  03C1  0BA1               	decfsz	??_Rotation90+1,f
  2246  03C2  2BBF               	goto	u1887
  2247  03C3                     l1996:
  2248  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2249  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2250  03C5  1086               	bcf	6,1	;volatile
  2251  03C6  305E               	movlw	94
  2252  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2253  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2254  03C9  00A1               	movwf	??_Rotation90+1
  2255  03CA  30C2               	movlw	194
  2256  03CB  00A0               	movwf	??_Rotation90
  2257  03CC                     u1897:
  2258  03CC  0BA0               	decfsz	??_Rotation90,f
  2259  03CD  2BCC               	goto	u1897
  2260  03CE  0BA1               	decfsz	??_Rotation90+1,f
  2261  03CF  2BCC               	goto	u1897
  2262  03D0  0000               	nop
  2263  03D1  3001               	movlw	1
  2264  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  2265  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  2266  03D4  07A2               	addwf	Rotation90@i,f
  2267  03D5  1803               	skipnc
  2268  03D6  0AA3               	incf	Rotation90@i+1,f
  2269  03D7  3000               	movlw	0
  2270  03D8  07A3               	addwf	Rotation90@i+1,f
  2271  03D9  3000               	movlw	0
  2272  03DA  0223               	subwf	Rotation90@i+1,w
  2273  03DB  3032               	movlw	50
  2274  03DC  1903               	skipnz
  2275  03DD  0222               	subwf	Rotation90@i,w
  2276  03DE  1C03               	skipc
  2277  03DF  2BE1               	goto	u1751
  2278  03E0  2BE2               	goto	u1750
  2279  03E1                     u1751:
  2280  03E1  2BB8               	goto	l263
  2281  03E2                     u1750:
  2282  03E2                     l1998:
  2283  03E2  3001               	movlw	1
  2284  03E3  00C6               	movwf	_isOpened
  2285  03E4  3000               	movlw	0
  2286  03E5  00C7               	movwf	_isOpened+1
  2287  03E6                     l265:
  2288  03E6  0008               	return
  2289  03E7                     __end_of_Rotation90:
  2290                           
  2291                           	psect	text11
  2292  041A                     __ptext11:	
  2293 ;; *************** function _Rotation0 *****************
  2294 ;; Defined at:
  2295 ;;		line 203 in file "parkingCar.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;		None
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  i               2    2[BANK0 ] unsigned int 
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      void 
  2302 ;; Registers used:
  2303 ;;		wreg, status,2
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2309 ;;      Params:         0       0       0       0       0
  2310 ;;      Locals:         0       2       0       0       0
  2311 ;;      Temps:          0       2       0       0       0
  2312 ;;      Totals:         0       4       0       0       0
  2313 ;;Total ram usage:        4 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:    2
  2316 ;; This function calls:
  2317 ;;		Nothing
  2318 ;; This function is called by:
  2319 ;;		_main
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           
  2324                           ;psect for function _Rotation0
  2325  041A                     _Rotation0:
  2326  041A                     l2000:	
  2327                           ;incstack = 0
  2328                           ; Regs used in _Rotation0: [wreg+status,2]
  2329                           
  2330  041A  1283               	bcf	3,5	;RP0=0, select bank0
  2331  041B  1303               	bcf	3,6	;RP1=0, select bank0
  2332  041C  01A2               	clrf	Rotation0@i
  2333  041D  01A3               	clrf	Rotation0@i+1
  2334  041E                     l258:
  2335  041E  1486               	bsf	6,1	;volatile
  2336  041F                     l2006:
  2337  041F  3005               	movlw	5
  2338  0420  1283               	bcf	3,5	;RP0=0, select bank0
  2339  0421  1303               	bcf	3,6	;RP1=0, select bank0
  2340  0422  00A1               	movwf	??_Rotation0+1
  2341  0423  30AB               	movlw	171
  2342  0424  00A0               	movwf	??_Rotation0
  2343  0425                     u1907:
  2344  0425  0BA0               	decfsz	??_Rotation0,f
  2345  0426  2C25               	goto	u1907
  2346  0427  0BA1               	decfsz	??_Rotation0+1,f
  2347  0428  2C25               	goto	u1907
  2348  0429                     l2008:
  2349  0429  1283               	bcf	3,5	;RP0=0, select bank0
  2350  042A  1303               	bcf	3,6	;RP1=0, select bank0
  2351  042B  1086               	bcf	6,1	;volatile
  2352  042C  3064               	movlw	100
  2353  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2354  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2355  042F  00A1               	movwf	??_Rotation0+1
  2356  0430  3036               	movlw	54
  2357  0431  00A0               	movwf	??_Rotation0
  2358  0432                     u1917:
  2359  0432  0BA0               	decfsz	??_Rotation0,f
  2360  0433  2C32               	goto	u1917
  2361  0434  0BA1               	decfsz	??_Rotation0+1,f
  2362  0435  2C32               	goto	u1917
  2363  0436  0000               	nop
  2364  0437  3001               	movlw	1
  2365  0438  1283               	bcf	3,5	;RP0=0, select bank0
  2366  0439  1303               	bcf	3,6	;RP1=0, select bank0
  2367  043A  07A2               	addwf	Rotation0@i,f
  2368  043B  1803               	skipnc
  2369  043C  0AA3               	incf	Rotation0@i+1,f
  2370  043D  3000               	movlw	0
  2371  043E  07A3               	addwf	Rotation0@i+1,f
  2372  043F  3000               	movlw	0
  2373  0440  0223               	subwf	Rotation0@i+1,w
  2374  0441  3032               	movlw	50
  2375  0442  1903               	skipnz
  2376  0443  0222               	subwf	Rotation0@i,w
  2377  0444  1C03               	skipc
  2378  0445  2C47               	goto	u1761
  2379  0446  2C48               	goto	u1760
  2380  0447                     u1761:
  2381  0447  2C1E               	goto	l258
  2382  0448                     u1760:
  2383  0448                     l2010:
  2384  0448  01C6               	clrf	_isOpened
  2385  0449  01C7               	clrf	_isOpened+1
  2386  044A                     l260:
  2387  044A  0008               	return
  2388  044B                     __end_of_Rotation0:
  2389                           
  2390                           	psect	text12
  2391  029F                     __ptext12:	
  2392 ;; *************** function _Lcd8_Init *****************
  2393 ;; Defined at:
  2394 ;;		line 78 in file "./lcd.h"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;		None
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;		None
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      void 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2, status,0, pclath, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2408 ;;      Params:         0       0       0       0       0
  2409 ;;      Locals:         0       0       0       0       0
  2410 ;;      Temps:          0       2       0       0       0
  2411 ;;      Totals:         0       2       0       0       0
  2412 ;;Total ram usage:        2 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    4
  2415 ;; This function calls:
  2416 ;;		_Lcd8_Cmd
  2417 ;;		_Lcd8_Port
  2418 ;; This function is called by:
  2419 ;;		_main
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           
  2424                           ;psect for function _Lcd8_Init
  2425  029F                     _Lcd8_Init:
  2426  029F                     l1946:	
  2427                           ;incstack = 0
  2428                           ; Regs used in _Lcd8_Init: [wreg+status,2+status,0+pclath+cstack]
  2429                           
  2430                           
  2431                           ;./lcd.h: 80:  Lcd8_Port(0x00);
  2432  029F  3000               	movlw	0
  2433  02A0  120A  118A  2378  120A  118A  	fcall	_Lcd8_Port
  2434  02A5                     l1948:
  2435                           
  2436                           ;./lcd.h: 81:  RC0 = 0;
  2437  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  2438  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  2439  02A7  1007               	bcf	7,0	;volatile
  2440  02A8                     l1950:
  2441                           
  2442                           ;./lcd.h: 82:  _delay((unsigned long)((25)*(16000000/4000.0)));
  2443  02A8  3082               	movlw	130
  2444  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  2445  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  2446  02AB  00A5               	movwf	??_Lcd8_Init+1
  2447  02AC  30DD               	movlw	221
  2448  02AD  00A4               	movwf	??_Lcd8_Init
  2449  02AE                     u1927:
  2450  02AE  0BA4               	decfsz	??_Lcd8_Init,f
  2451  02AF  2AAE               	goto	u1927
  2452  02B0  0BA5               	decfsz	??_Lcd8_Init+1,f
  2453  02B1  2AAE               	goto	u1927
  2454  02B2                     l1952:
  2455                           
  2456                           ;./lcd.h: 84:   Lcd8_Cmd(0x30);
  2457  02B2  3030               	movlw	48
  2458  02B3  120A  118A  24DB  120A  118A  	fcall	_Lcd8_Cmd
  2459                           
  2460                           ;./lcd.h: 85: _delay((unsigned long)((5)*(16000000/4000.0)));
  2461  02B8  301A               	movlw	26
  2462  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  2463  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  2464  02BB  00A5               	movwf	??_Lcd8_Init+1
  2465  02BC  30F7               	movlw	247
  2466  02BD  00A4               	movwf	??_Lcd8_Init
  2467  02BE                     u1937:
  2468  02BE  0BA4               	decfsz	??_Lcd8_Init,f
  2469  02BF  2ABE               	goto	u1937
  2470  02C0  0BA5               	decfsz	??_Lcd8_Init+1,f
  2471  02C1  2ABE               	goto	u1937
  2472  02C2  2AC3               	nop2
  2473  02C3                     l1954:
  2474                           
  2475                           ;./lcd.h: 86:   Lcd8_Cmd(0x30);
  2476  02C3  3030               	movlw	48
  2477  02C4  120A  118A  24DB  120A  118A  	fcall	_Lcd8_Cmd
  2478  02C9                     l1956:
  2479                           
  2480                           ;./lcd.h: 87:  _delay((unsigned long)((15)*(16000000/4000.0)));
  2481  02C9  304E               	movlw	78
  2482  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2483  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2484  02CC  00A5               	movwf	??_Lcd8_Init+1
  2485  02CD  30EA               	movlw	234
  2486  02CE  00A4               	movwf	??_Lcd8_Init
  2487  02CF                     u1947:
  2488  02CF  0BA4               	decfsz	??_Lcd8_Init,f
  2489  02D0  2ACF               	goto	u1947
  2490  02D1  0BA5               	decfsz	??_Lcd8_Init+1,f
  2491  02D2  2ACF               	goto	u1947
  2492  02D3  0000               	nop
  2493                           
  2494                           ;./lcd.h: 88:   Lcd8_Cmd(0x30);
  2495  02D4  3030               	movlw	48
  2496  02D5  120A  118A  24DB  120A  118A  	fcall	_Lcd8_Cmd
  2497                           
  2498                           ;./lcd.h: 90:   Lcd8_Cmd(0x38);
  2499  02DA  3038               	movlw	56
  2500  02DB  120A  118A  24DB  120A  118A  	fcall	_Lcd8_Cmd
  2501                           
  2502                           ;./lcd.h: 91:   Lcd8_Cmd(0x0C);
  2503  02E0  300C               	movlw	12
  2504  02E1  120A  118A  24DB  120A  118A  	fcall	_Lcd8_Cmd
  2505                           
  2506                           ;./lcd.h: 92:   Lcd8_Cmd(0x01);
  2507  02E6  3001               	movlw	1
  2508  02E7  120A  118A  24DB  120A  118A  	fcall	_Lcd8_Cmd
  2509                           
  2510                           ;./lcd.h: 93:   Lcd8_Cmd(0x06);
  2511  02EC  3006               	movlw	6
  2512  02ED  120A  118A  24DB  120A  118A  	fcall	_Lcd8_Cmd
  2513  02F2                     l135:
  2514  02F2  0008               	return
  2515  02F3                     __end_of_Lcd8_Init:
  2516                           
  2517                           	psect	text13
  2518  04DB                     __ptext13:	
  2519 ;; *************** function _Lcd8_Cmd *****************
  2520 ;; Defined at:
  2521 ;;		line 56 in file "./lcd.h"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  a               1    wreg     unsigned char 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  a               1    3[BANK0 ] unsigned char 
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      void 
  2528 ;; Registers used:
  2529 ;;		wreg, status,2, status,0, pclath, cstack
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2535 ;;      Params:         0       0       0       0       0
  2536 ;;      Locals:         0       1       0       0       0
  2537 ;;      Temps:          0       2       0       0       0
  2538 ;;      Totals:         0       3       0       0       0
  2539 ;;Total ram usage:        3 bytes
  2540 ;; Hardware stack levels used:    1
  2541 ;; Hardware stack levels required when called:    3
  2542 ;; This function calls:
  2543 ;;		_Lcd8_Port
  2544 ;; This function is called by:
  2545 ;;		_Lcd8_Set_Cursor
  2546 ;;		_Lcd8_Init
  2547 ;;		_Lcd8_Clear
  2548 ;;		_Lcd8_Shift_Right
  2549 ;;		_Lcd8_Shift_Left
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           
  2554                           ;psect for function _Lcd8_Cmd
  2555  04DB                     _Lcd8_Cmd:
  2556                           
  2557                           ;incstack = 0
  2558                           ; Regs used in _Lcd8_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2559                           ;Lcd8_Cmd@a stored from wreg
  2560  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  2561  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  2562  04DD  00A3               	movwf	Lcd8_Cmd@a
  2563  04DE                     l1766:
  2564                           
  2565                           ;./lcd.h: 56: void Lcd8_Cmd(char a);./lcd.h: 57: {;./lcd.h: 58:   RC0 = 0;
  2566  04DE  1007               	bcf	7,0	;volatile
  2567  04DF                     l1768:
  2568                           
  2569                           ;./lcd.h: 59:   Lcd8_Port(a);
  2570  04DF  0823               	movf	Lcd8_Cmd@a,w
  2571  04E0  120A  118A  2378  120A  118A  	fcall	_Lcd8_Port
  2572  04E5                     l1770:
  2573                           
  2574                           ;./lcd.h: 60:   RC2 = 1;
  2575  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  2576  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  2577  04E7  1507               	bsf	7,2	;volatile
  2578  04E8                     l1772:
  2579                           
  2580                           ;./lcd.h: 61:   _delay((unsigned long)((5)*(16000000/4000.0)));
  2581  04E8  301A               	movlw	26
  2582  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  2583  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  2584  04EB  00A2               	movwf	??_Lcd8_Cmd+1
  2585  04EC  30F7               	movlw	247
  2586  04ED  00A1               	movwf	??_Lcd8_Cmd
  2587  04EE                     u1957:
  2588  04EE  0BA1               	decfsz	??_Lcd8_Cmd,f
  2589  04EF  2CEE               	goto	u1957
  2590  04F0  0BA2               	decfsz	??_Lcd8_Cmd+1,f
  2591  04F1  2CEE               	goto	u1957
  2592  04F2  2CF3               	nop2
  2593  04F3                     l1774:
  2594                           
  2595                           ;./lcd.h: 62:   RC2 = 0;
  2596  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  2597  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  2598  04F5  1107               	bcf	7,2	;volatile
  2599  04F6                     l123:
  2600  04F6  0008               	return
  2601  04F7                     __end_of_Lcd8_Cmd:
  2602                           
  2603                           	psect	text14
  2604  0378                     __ptext14:	
  2605 ;; *************** function _Lcd8_Port *****************
  2606 ;; Defined at:
  2607 ;;		line 14 in file "./lcd.h"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  a               1    wreg     unsigned char 
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;  a               1    0[BANK0 ] unsigned char 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2621 ;;      Params:         0       0       0       0       0
  2622 ;;      Locals:         0       1       0       0       0
  2623 ;;      Temps:          0       0       0       0       0
  2624 ;;      Totals:         0       1       0       0       0
  2625 ;;Total ram usage:        1 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; Hardware stack levels required when called:    2
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		_Lcd8_Cmd
  2632 ;;		_Lcd8_Init
  2633 ;;		_Lcd8_Write_Char
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           
  2638                           ;psect for function _Lcd8_Port
  2639  0378                     _Lcd8_Port:
  2640                           
  2641                           ;incstack = 0
  2642                           ; Regs used in _Lcd8_Port: [wreg]
  2643                           ;Lcd8_Port@a stored from wreg
  2644  0378  1283               	bcf	3,5	;RP0=0, select bank0
  2645  0379  1303               	bcf	3,6	;RP1=0, select bank0
  2646  037A  00A0               	movwf	Lcd8_Port@a
  2647  037B                     l1748:
  2648                           
  2649                           ;./lcd.h: 14: void Lcd8_Port(char a);./lcd.h: 15: {;./lcd.h: 16:  if(a & 1)
  2650  037B  1C20               	btfss	Lcd8_Port@a,0
  2651  037C  2B7E               	goto	u1321
  2652  037D  2B7F               	goto	u1320
  2653  037E                     u1321:
  2654  037E  2B81               	goto	l104
  2655  037F                     u1320:
  2656  037F                     l1750:
  2657                           
  2658                           ;./lcd.h: 17:   RD0 = 1;
  2659  037F  1408               	bsf	8,0	;volatile
  2660  0380  2B82               	goto	l105
  2661  0381                     l104:	
  2662                           ;./lcd.h: 18:  else
  2663                           
  2664                           
  2665                           ;./lcd.h: 19:   RD0 = 0;
  2666  0381  1008               	bcf	8,0	;volatile
  2667  0382                     l105:
  2668                           
  2669                           ;./lcd.h: 21:  if(a & 2)
  2670  0382  1CA0               	btfss	Lcd8_Port@a,1
  2671  0383  2B85               	goto	u1331
  2672  0384  2B86               	goto	u1330
  2673  0385                     u1331:
  2674  0385  2B88               	goto	l106
  2675  0386                     u1330:
  2676  0386                     l1752:
  2677                           
  2678                           ;./lcd.h: 22:   RD1 = 1;
  2679  0386  1488               	bsf	8,1	;volatile
  2680  0387  2B89               	goto	l107
  2681  0388                     l106:	
  2682                           ;./lcd.h: 23:  else
  2683                           
  2684                           
  2685                           ;./lcd.h: 24:   RD1 = 0;
  2686  0388  1088               	bcf	8,1	;volatile
  2687  0389                     l107:
  2688                           
  2689                           ;./lcd.h: 26:  if(a & 4)
  2690  0389  1D20               	btfss	Lcd8_Port@a,2
  2691  038A  2B8C               	goto	u1341
  2692  038B  2B8D               	goto	u1340
  2693  038C                     u1341:
  2694  038C  2B8F               	goto	l108
  2695  038D                     u1340:
  2696  038D                     l1754:
  2697                           
  2698                           ;./lcd.h: 27:   RD2 = 1;
  2699  038D  1508               	bsf	8,2	;volatile
  2700  038E  2B90               	goto	l109
  2701  038F                     l108:	
  2702                           ;./lcd.h: 28:  else
  2703                           
  2704                           
  2705                           ;./lcd.h: 29:   RD2 = 0;
  2706  038F  1108               	bcf	8,2	;volatile
  2707  0390                     l109:
  2708                           
  2709                           ;./lcd.h: 31:  if(a & 8)
  2710  0390  1DA0               	btfss	Lcd8_Port@a,3
  2711  0391  2B93               	goto	u1351
  2712  0392  2B94               	goto	u1350
  2713  0393                     u1351:
  2714  0393  2B96               	goto	l110
  2715  0394                     u1350:
  2716  0394                     l1756:
  2717                           
  2718                           ;./lcd.h: 32:   RD3 = 1;
  2719  0394  1588               	bsf	8,3	;volatile
  2720  0395  2B97               	goto	l111
  2721  0396                     l110:	
  2722                           ;./lcd.h: 33:  else
  2723                           
  2724                           
  2725                           ;./lcd.h: 34:   RD3 = 0;
  2726  0396  1188               	bcf	8,3	;volatile
  2727  0397                     l111:
  2728                           
  2729                           ;./lcd.h: 36:  if(a & 16)
  2730  0397  1E20               	btfss	Lcd8_Port@a,4
  2731  0398  2B9A               	goto	u1361
  2732  0399  2B9B               	goto	u1360
  2733  039A                     u1361:
  2734  039A  2B9D               	goto	l112
  2735  039B                     u1360:
  2736  039B                     l1758:
  2737                           
  2738                           ;./lcd.h: 37:   RD4 = 1;
  2739  039B  1608               	bsf	8,4	;volatile
  2740  039C  2B9E               	goto	l113
  2741  039D                     l112:	
  2742                           ;./lcd.h: 38:  else
  2743                           
  2744                           
  2745                           ;./lcd.h: 39:   RD4 = 0;
  2746  039D  1208               	bcf	8,4	;volatile
  2747  039E                     l113:
  2748                           
  2749                           ;./lcd.h: 41:  if(a & 32)
  2750  039E  1EA0               	btfss	Lcd8_Port@a,5
  2751  039F  2BA1               	goto	u1371
  2752  03A0  2BA2               	goto	u1370
  2753  03A1                     u1371:
  2754  03A1  2BA4               	goto	l114
  2755  03A2                     u1370:
  2756  03A2                     l1760:
  2757                           
  2758                           ;./lcd.h: 42:   RD5 = 1;
  2759  03A2  1688               	bsf	8,5	;volatile
  2760  03A3  2BA5               	goto	l115
  2761  03A4                     l114:	
  2762                           ;./lcd.h: 43:  else
  2763                           
  2764                           
  2765                           ;./lcd.h: 44:   RD5 = 0;
  2766  03A4  1288               	bcf	8,5	;volatile
  2767  03A5                     l115:
  2768                           
  2769                           ;./lcd.h: 46:  if(a & 64)
  2770  03A5  1F20               	btfss	Lcd8_Port@a,6
  2771  03A6  2BA8               	goto	u1381
  2772  03A7  2BA9               	goto	u1380
  2773  03A8                     u1381:
  2774  03A8  2BAB               	goto	l116
  2775  03A9                     u1380:
  2776  03A9                     l1762:
  2777                           
  2778                           ;./lcd.h: 47:   RD6 = 1;
  2779  03A9  1708               	bsf	8,6	;volatile
  2780  03AA  2BAC               	goto	l117
  2781  03AB                     l116:	
  2782                           ;./lcd.h: 48:  else
  2783                           
  2784                           
  2785                           ;./lcd.h: 49:   RD6 = 0;
  2786  03AB  1308               	bcf	8,6	;volatile
  2787  03AC                     l117:
  2788                           
  2789                           ;./lcd.h: 51:  if(a & 128)
  2790  03AC  1FA0               	btfss	Lcd8_Port@a,7
  2791  03AD  2BAF               	goto	u1391
  2792  03AE  2BB0               	goto	u1390
  2793  03AF                     u1391:
  2794  03AF  2BB2               	goto	l118
  2795  03B0                     u1390:
  2796  03B0                     l1764:
  2797                           
  2798                           ;./lcd.h: 52:   RD7 = 1;
  2799  03B0  1788               	bsf	8,7	;volatile
  2800  03B1  2BB3               	goto	l120
  2801  03B2                     l118:	
  2802                           ;./lcd.h: 53:  else
  2803                           
  2804                           
  2805                           ;./lcd.h: 54:   RD7 = 0;
  2806  03B2  1388               	bcf	8,7	;volatile
  2807  03B3                     l120:
  2808  03B3  0008               	return
  2809  03B4                     __end_of_Lcd8_Port:
  2810                           
  2811                           	psect	text15
  2812  03E7                     __ptext15:	
  2813 ;; *************** function _ISR *****************
  2814 ;; Defined at:
  2815 ;;		line 229 in file "parkingCar.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;		None
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;		None
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  1    wreg      void 
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, status,0, pclath, cstack
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2829 ;;      Params:         0       0       0       0       0
  2830 ;;      Locals:         0       0       0       0       0
  2831 ;;      Temps:          2       0       0       0       0
  2832 ;;      Totals:         2       0       0       0       0
  2833 ;;Total ram usage:        2 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    1
  2836 ;; This function calls:
  2837 ;;		i1_Rotation90
  2838 ;; This function is called by:
  2839 ;;		Interrupt level 1
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           
  2844                           ;psect for function _ISR
  2845  03E7                     _ISR:
  2846  03E7                     i1l1726:
  2847  03E7  1C8B               	btfss	11,1	;volatile
  2848  03E8  2BEA               	goto	u129_21
  2849  03E9  2BEB               	goto	u129_20
  2850  03EA                     u129_21:
  2851  03EA  2BF7               	goto	i1l1736
  2852  03EB                     u129_20:
  2853  03EB                     i1l1728:
  2854  03EB  120A  118A  244B  120A  118A  	fcall	i1_Rotation90
  2855  03F0                     i1l1730:
  2856  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2857  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2858  03F2  01C8               	clrf	_lock
  2859  03F3  01C9               	clrf	_lock+1
  2860  03F4                     i1l1732:
  2861  03F4  01CA               	clrf	_parkingTime
  2862  03F5  01CB               	clrf	_parkingTime+1
  2863  03F6                     i1l1734:
  2864  03F6  108B               	bcf	11,1	;volatile
  2865  03F7                     i1l1736:
  2866  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2867  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  2868  03F9  1C0C               	btfss	12,0	;volatile
  2869  03FA  2BFC               	goto	u130_21
  2870  03FB  2BFD               	goto	u130_20
  2871  03FC                     u130_21:
  2872  03FC  2C13               	goto	i1l273
  2873  03FD                     u130_20:
  2874  03FD                     i1l1738:
  2875  03FD  3001               	movlw	1
  2876  03FE  07F8               	addwf	_counter,f
  2877  03FF  1803               	skipnc
  2878  0400  0AF9               	incf	_counter+1,f
  2879  0401  3000               	movlw	0
  2880  0402  07F9               	addwf	_counter+1,f
  2881  0403                     i1l1740:
  2882  0403  303D               	movlw	61
  2883  0404  0678               	xorwf	_counter,w
  2884  0405  0479               	iorwf	_counter+1,w
  2885  0406  1D03               	btfss	3,2
  2886  0407  2C09               	goto	u131_21
  2887  0408  2C0A               	goto	u131_20
  2888  0409                     u131_21:
  2889  0409  2C12               	goto	i1l1746
  2890  040A                     u131_20:
  2891  040A                     i1l1742:
  2892  040A  3001               	movlw	1
  2893  040B  07CA               	addwf	_parkingTime,f
  2894  040C  1803               	skipnc
  2895  040D  0ACB               	incf	_parkingTime+1,f
  2896  040E  3000               	movlw	0
  2897  040F  07CB               	addwf	_parkingTime+1,f
  2898  0410                     i1l1744:
  2899  0410  01F8               	clrf	_counter
  2900  0411  01F9               	clrf	_counter+1
  2901  0412                     i1l1746:
  2902  0412  100C               	bcf	12,0	;volatile
  2903  0413                     i1l273:
  2904  0413  0875               	movf	??_ISR+1,w
  2905  0414  008A               	movwf	10
  2906  0415  0E74               	swapf	??_ISR,w
  2907  0416  0083               	movwf	3
  2908  0417  0EFE               	swapf	btemp,f
  2909  0418  0E7E               	swapf	btemp,w
  2910  0419  0009               	retfie
  2911  041A                     __end_of_ISR:
  2912                           
  2913                           	psect	intentry
  2914  0004                     __pintentry:	
  2915                           ;incstack = 0
  2916                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2917                           
  2918  0004                     interrupt_function:
  2919  007E                     saved_w	set	btemp
  2920  0004  00FE               	movwf	btemp
  2921  0005  0E03               	swapf	3,w
  2922  0006  00F4               	movwf	??_ISR
  2923  0007  080A               	movf	10,w
  2924  0008  00F5               	movwf	??_ISR+1
  2925  0009  120A  118A  2BE7   	ljmp	_ISR
  2926                           
  2927                           	psect	text16
  2928  044B                     __ptext16:	
  2929 ;; *************** function i1_Rotation90 *****************
  2930 ;; Defined at:
  2931 ;;		line 216 in file "parkingCar.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;		None
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  i               2    2[COMMON] unsigned int 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      void 
  2938 ;; Registers used:
  2939 ;;		wreg, status,2
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2945 ;;      Params:         0       0       0       0       0
  2946 ;;      Locals:         2       0       0       0       0
  2947 ;;      Temps:          2       0       0       0       0
  2948 ;;      Totals:         4       0       0       0       0
  2949 ;;Total ram usage:        4 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; This function calls:
  2952 ;;		Nothing
  2953 ;; This function is called by:
  2954 ;;		_ISR
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           
  2959                           ;psect for function i1_Rotation90
  2960  044B                     i1_Rotation90:
  2961  044B                     i1l1654:	
  2962                           ;incstack = 0
  2963                           ; Regs used in i1_Rotation90: [wreg+status,2]
  2964                           
  2965  044B  01F2               	clrf	i1Rotation90@i
  2966  044C  01F3               	clrf	i1Rotation90@i+1
  2967  044D                     i1l263:
  2968  044D  1283               	bcf	3,5	;RP0=0, select bank0
  2969  044E  1303               	bcf	3,6	;RP1=0, select bank0
  2970  044F  1486               	bsf	6,1	;volatile
  2971  0450                     i1l1660:
  2972  0450  300B               	movlw	11
  2973  0451  00F1               	movwf	??i1_Rotation90+1
  2974  0452  301F               	movlw	31
  2975  0453  00F0               	movwf	??i1_Rotation90
  2976  0454                     u196_27:
  2977  0454  0BF0               	decfsz	??i1_Rotation90,f
  2978  0455  2C54               	goto	u196_27
  2979  0456  0BF1               	decfsz	??i1_Rotation90+1,f
  2980  0457  2C54               	goto	u196_27
  2981  0458  2C59               	nop2
  2982  0459                     i1l1662:
  2983  0459  1283               	bcf	3,5	;RP0=0, select bank0
  2984  045A  1303               	bcf	3,6	;RP1=0, select bank0
  2985  045B  1086               	bcf	6,1	;volatile
  2986  045C  305E               	movlw	94
  2987  045D  00F1               	movwf	??i1_Rotation90+1
  2988  045E  30C3               	movlw	195
  2989  045F  00F0               	movwf	??i1_Rotation90
  2990  0460                     u197_27:
  2991  0460  0BF0               	decfsz	??i1_Rotation90,f
  2992  0461  2C60               	goto	u197_27
  2993  0462  0BF1               	decfsz	??i1_Rotation90+1,f
  2994  0463  2C60               	goto	u197_27
  2995  0464  3001               	movlw	1
  2996  0465  07F2               	addwf	i1Rotation90@i,f
  2997  0466  1803               	skipnc
  2998  0467  0AF3               	incf	i1Rotation90@i+1,f
  2999  0468  3000               	movlw	0
  3000  0469  07F3               	addwf	i1Rotation90@i+1,f
  3001  046A  3000               	movlw	0
  3002  046B  0273               	subwf	i1Rotation90@i+1,w
  3003  046C  3032               	movlw	50
  3004  046D  1903               	skipnz
  3005  046E  0272               	subwf	i1Rotation90@i,w
  3006  046F  1C03               	skipc
  3007  0470  2C72               	goto	u118_21
  3008  0471  2C73               	goto	u118_20
  3009  0472                     u118_21:
  3010  0472  2C4D               	goto	i1l263
  3011  0473                     u118_20:
  3012  0473                     i1l1664:
  3013  0473  3001               	movlw	1
  3014  0474  1283               	bcf	3,5	;RP0=0, select bank0
  3015  0475  1303               	bcf	3,6	;RP1=0, select bank0
  3016  0476  00C6               	movwf	_isOpened
  3017  0477  3000               	movlw	0
  3018  0478  00C7               	movwf	_isOpened+1
  3019  0479                     i1l265:
  3020  0479  0008               	return
  3021  047A                     __end_ofi1_Rotation90:
  3022  007E                     btemp	set	126	;btemp
  3023  007E                     wtemp0	set	126
  3024                           
  3025                           	psect	config
  3026                           
  3027                           ;Config register CONFIG @ 0x2007
  3028                           ;	Oscillator Selection bits
  3029                           ;	FOSC = HS, HS oscillator
  3030                           ;	Watchdog Timer Enable bit
  3031                           ;	WDTE = OFF, WDT disabled
  3032                           ;	Power-up Timer Enable bit
  3033                           ;	PWRTE = ON, PWRT enabled
  3034                           ;	Brown-out Reset Enable bit
  3035                           ;	BOREN = ON, BOR enabled
  3036                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3037                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3038                           ;	Data EEPROM Memory Code Protection bit
  3039                           ;	CPD = OFF, Data EEPROM code protection off
  3040                           ;	Flash Program Memory Write Enable bits
  3041                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3042                           ;	In-Circuit Debugger Mode bit
  3043                           ;	DEBUG = 0x1, unprogrammed default
  3044                           ;	Flash Program Memory Code Protection bit
  3045                           ;	CP = OFF, Code protection off
  3046  2007                     	org	8199
  3047  2007  3F72               	dw	16242

Data Sizes:
    Strings     47
    Constant    0
    Data        2
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     38      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    toa@ptr	PTR unsigned char  size(1) Largest target is 20
		 -> checkGateStatus@string(BANK0[20]), 

    Lcd8_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[10]), checkGateStatus@string(BANK0[20]), STR_4(CODE[8]), STR_3(CODE[8]), 
		 -> STR_2(CODE[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_Rotation90

Critical Paths under _main in BANK0

    _main->_checkGateStatus
    _checkGateStatus->_toa
    _toa->___awdiv
    _Lcd8_Write_String->_Lcd8_Write_Char
    _Lcd8_Write_Char->_Lcd8_Port
    _Lcd8_Set_Cursor->_Lcd8_Cmd
    _Lcd8_Init->_Lcd8_Cmd
    _Lcd8_Cmd->_Lcd8_Port

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    6477
                          _Lcd8_Init
                    _Lcd8_Set_Cursor
                  _Lcd8_Write_String
                          _Rotation0
                         _Rotation90
                    _checkGateStatus
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkGateStatus                                     21    21      0    4192
                                             17 BANK0     21    21      0
                    _Lcd8_Set_Cursor
                  _Lcd8_Write_String
                                _toa
 ---------------------------------------------------------------------------------
 (2) _toa                                                  8     5      3    2478
                                              9 BANK0      8     5      3
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _Lcd8_Write_String                                    7     5      2     859
                                              4 BANK0      7     5      2
                    _Lcd8_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd8_Write_Char                                      3     3      0     279
                                              1 BANK0      3     3      0
                          _Lcd8_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd8_Set_Cursor                                      2     1      1     763
                                              4 BANK0      2     1      1
                           _Lcd8_Cmd
 ---------------------------------------------------------------------------------
 (1) _Rotation90                                           4     4      0      68
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Rotation0                                            4     4      0      68
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Init                                            2     2      0     527
                                              4 BANK0      2     2      0
                           _Lcd8_Cmd
                          _Lcd8_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd8_Cmd                                             3     3      0     279
                                              1 BANK0      3     3      0
                          _Lcd8_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd8_Port                                            1     1      0     248
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0      46
                                              4 COMMON     2     2      0
                       i1_Rotation90
 ---------------------------------------------------------------------------------
 (6) i1_Rotation90                                         4     4      0      46
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd8_Init
     _Lcd8_Cmd
       _Lcd8_Port
     _Lcd8_Port
   _Lcd8_Set_Cursor
     _Lcd8_Cmd
       _Lcd8_Port
   _Lcd8_Write_String
     _Lcd8_Write_Char
       _Lcd8_Port
   _Rotation0
   _Rotation90
   _checkGateStatus
     _Lcd8_Set_Cursor
       _Lcd8_Cmd
         _Lcd8_Port
     _Lcd8_Write_String
       _Lcd8_Write_Char
         _Lcd8_Port
     _toa
       ___awdiv
       ___awmod
       ___wmul
   _timerInit

 _ISR (ROOT)
   i1_Rotation90

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     26      2E       5       57.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      38      12        0.0%
ABS                  0      0      38       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Jun 09 20:54:15 2021

              i1_Rotation90 044B                           pc 0002                ___awdiv@sign 0026  
                        fsr 0004         ___wmul@multiplicand 0022                         l110 0396  
                       l111 0397                         l120 03B3                         l112 039D  
                       l104 0381                         l113 039E                         l105 0382  
                       l114 03A4                         l106 0388                         l115 03A5  
                       l107 0389                         l123 04F6                         l116 03AB  
                       l108 038F                         l132 04BE                         l117 03AC  
                       l109 0390                         l205 00E2                         l118 03B2  
                       l206 0041                         l135 02F2                         l144 0338  
                       l240 0243                         l233 0505                         l138 04DA  
                       l250 0173                         l260 044A                         l237 021D  
                       l263 03B8                         l265 03E6                         l258 041E  
                       l562 029E                         l396 0488                         l549 01DF  
                       l398 04A0                         _GIE 005F                         _RB1 0031  
                       _RC0 0038                         _RB3 0033                         _RD0 0040  
                       _RC2 003A                         _RB4 0034                         _RD1 0041  
                       _RD2 0042                         _RD3 0043                         _RB7 0037  
                       _RD4 0044                         _RD5 0045                         _RD6 0046  
                       _RD7 0047                         _ISR 03E7                         _toa 0029  
                       fsr0 0004                         indf 0000                ___awmod@sign 0026  
                      ?_ISR 0070                        l2000 041A                        l2010 0448  
                      l2020 00E8                        l2006 041F                        l2030 00F5  
                      l2022 00EB                        l2008 0429                        l2040 0114  
                      l2032 00F8                        l2024 00EC                        l2050 0136  
                      l2042 011F                        l2034 0105                        l2026 00EE  
                      l2018 00E3                        l2060 0151                        l2052 013B  
                      l2044 0124                        l2036 0106                        l2028 00F1  
                      l2070 016A                        l2054 013F                        l2046 012A  
                      l2062 0157                        l2038 010B                        l2064 015B  
                      l2056 0148                        l2048 0130                        l2066 015F  
                      l2058 014C                        l2068 0165                        l1800 0177  
                      l1810 0189                        l1802 017A                        l1820 019D  
                      l1812 018E                        l1804 017E                        l1900 002D  
                      l1750 037F                        l1830 01C3                        l1822 01A4  
                      l1814 0192                        l1806 0183                        l1910 0045  
                      l1760 03A2                        l1752 0386                        l1840 01DB  
                      l1832 01C4                        l1824 01A8                        l1816 0194  
                      l1808 0185                        l1920 006D                        l1912 0058  
                      l1904 0033                        l1762 03A9                        l1754 038D  
                      l1770 04E5                        l1834 01CB                        l1826 01AC  
                      l1818 019A                        l1850 0250                        l1930 0095  
                      l1914 005F                        l1906 0039                        l1764 03B0  
                      l1756 0394                        l1748 037B                        l1772 04E8  
                      l1780 04C9                        l1828 01BD                        l1836 01D1  
                      l1860 0264                        l1852 0252                        l1844 0244  
                      l1940 00C8                        l1932 009B                        l1924 007B  
                      l1916 0063                        l1758 039B                        l1774 04F3  
                      l1766 04DE                        l1950 02A8                        l1782 04CC  
                      l1838 01D6                        l1870 0283                        l1862 026B  
                      l1854 0256                        l1846 0247                        l1790 0482  
                      l1942 00CE                        l1934 009F                        l1926 0090  
                      l1918 0069                        l1768 04DF                        l1952 02B2  
                      l1784 04D7                        l1776 04C2                        l1872 028A  
                      l1864 026F                        l1856 025B                        l1848 024B  
                      l1792 048F                        l1960 04FF                        l1954 02C3  
                      l1946 029F                        l1882 04A4                        l1778 04C3  
                      l1890 02F3                        l1866 0273                        l1858 0261  
                      l1874 0290                        l1794 0496                        l1786 047A  
                      l1938 00AD                        l1970 01E0                        l1962 0501  
                      l1956 02C9                        l1948 02A5                        l1884 04A9  
                      l1892 02F8                        l1876 0295                        l1868 027D  
                      l1796 049C                        l1788 047E                        l1980 020A  
                      l1972 01E8                        l1964 0502                        l1886 04B1  
                      l1894 0314                        l1878 029A                        l1982 0214  
                      l1974 01EF                        l1966 0503                        l1958 04F7  
                      l1888 04B7                        l1896 031C                        l1984 022C  
                      l1976 01FB                        l1968 0504                        l1994 03B9  
                      l1898 0029                        l1986 0238                        l1978 0202  
                      l1996 03C3                        l1988 03B4                        l1998 03E2  
                      ?_toa 0029                        STR_1 0349                        STR_2 0360  
                      STR_3 0368                        STR_4 0370                        STR_5 0356  
                      _BRGH 04C2                        _CREN 00C4                        u1320 037F  
                      u1400 0482                        u1321 037E                        u1401 0481  
             i1Rotation90@i 0072                        u1330 0386                        u1331 0385  
                      u1340 038D                        u1500 01BD                        u1341 038C  
                      u1501 01BC                        u1350 0394                        u1430 049C  
                      u1351 0393                        u1431 049B                        u1415 0489  
                      u1360 039B                        u1520 01D1                        u1440 017E  
                      u1361 039A                        u1521 01D0                        u1505 01B9  
                      u1441 017D                        u1425 0490                        u1370 03A2  
                      u1530 01D6                        u1450 0189                        u1610 0290  
                      u1371 03A1                        u1531 01D5                        u1515 01C5  
                      u1451 0188                        u1611 028F                        u1380 03A9  
                      u1460 019A                        u1620 0295                        u1540 024B  
                      u1700 0045                        u1381 03A8                        u1461 0199  
                      u1621 0294                        u1605 0284                        u1541 024A  
                      u1701 0044                        u1390 03B0                        u1630 04A9  
                      u1550 0256                        u1710 007A                        u1391 03AF  
                      u1631 04A8                        u1551 0255                        u1711 0079  
                      u1640 04B7                        u1480 01AC                        u1560 0261  
                      u1720 00AC                        u1800 0130                        u1641 04B6  
                      u1481 01AB                        u1561 0260                        u1721 00AB  
                      u1801 012F                        u1650 0302                        u1730 01E8  
                      u1810 0136                        u1475 019E                        u1715 0076  
                      u1731 01E7                        u1811 0135                        u1660 0326  
                      u1580 0273                        u1740 020A                        u1820 0148  
                      u1581 0272                        u1725 00A8                        u1741 0209  
                      u1821 0147                        u1750 03E2                        u1670 0338  
                      u1590 027D                        u1830 014C                        u1751 03E1  
                      u1671 0337                        u1495 01AD                        u1591 027C  
                      u1575 0265                        u1831 014B                        u1760 0448  
                      u1680 0032                        u1840 015B                        u1761 0447  
                      u1681 0031                        u1841 015A                        u1690 0039  
                      u1850 015F                        u1770 0102                        u1907 0425  
                      u1595 0279                        u1691 0038                        u1851 015E  
                      u1771 00FE                        u1860 0165                        u1917 0432  
                      u1861 0164                        u1790 012A                        u1927 02AE  
                      u1791 0129                        u1784 0105                        u1937 02BE  
                      u1947 02CF                        _PEIE 005E                        u1957 04EE  
                      u1877 04D2                        _INTE 005C                        _INTF 0059  
                      u1887 03BF                        u1897 03CC                        _RCIE 0465  
                      _RCIF 0065                        _TMR1 000E                        _SPEN 00C7  
                      _SYNC 04C4                        _main 00E3                        _lock 0048  
                      _park 004C           ??_Lcd8_Set_Cursor 0025                        btemp 007E  
                      start 000C                       ??_ISR 0074            ?_checkGateStatus 0070  
                     ??_toa 002C                       ?_main 0070             __end_of___awdiv 01E0  
           __end_of___awmod 029F             ___awdiv@divisor 0020                       i1l263 044D  
                     i1l265 0479                       i1l273 0413             ___awdiv@counter 0025  
                     _RCREG 001A                       _SPBRG 0099                       _PORTB 0006  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     pclath 000A                       status 0003            __end_of_Lcd8_Cmd 04F7  
                     wtemp0 007E             __initialization 000F                __end_of_main 0177  
        __size_of_Lcd8_Init 0054          __size_of_Lcd8_Port 003C           ??_Lcd8_Write_Char 0021  
                    ??_main 0046            ___awdiv@dividend 0022                      i1l1730 03F0  
                    i1l1660 0450                      i1l1740 0403                      i1l1732 03F4  
                    i1l1662 0459                      i1l1654 044B                      i1l1742 040A  
                    i1l1734 03F6                      i1l1726 03E7                      i1l1664 0473  
                    i1l1744 0410                      u130_20 03FD                      i1l1728 03EB  
                    i1l1736 03F7                      u130_21 03FC                      i1l1746 0412  
                    i1l1738 03FD                      u131_20 040A                      u131_21 0409  
                    u118_20 0473                      u118_21 0472                      _INTEDG 040E  
                    u129_20 03EB                      u129_21 03EA                      u196_27 0454  
                    u197_27 0460                      _TMR1IE 0460                      _TMR1IF 0060  
                    _TMR1CS 0081                      _TMR1ON 0080                      _TRISC6 043E  
                    _TRISC7 043F                      ___wmul 047A                   ??___awdiv 0024  
                 ??___awmod 0024            ___awdiv@quotient 0027             ___awmod@divisor 0020  
           ___awmod@counter 0025                      toa@ptr 002B                      saved_w 007E  
                _Rotation90 03B4          __size_of_Rotation0 0031           __end_of_Lcd8_Init 02F3  
         __end_of_Lcd8_Port 03B4     __end_of__initialization 0025                  Rotation0@i 0022  
            __pcstackCOMMON 0070                __pidataBANK0 0506                   ?_Lcd8_Cmd 0070  
           _Lcd8_Set_Cursor 04A1                  __pbssBANK0 0046                  __pmaintext 00E3  
         __end_of_Rotation0 044B                     ?___wmul 0020                  __pintentry 0004  
          Lcd8_Set_Cursor@a 0025            Lcd8_Set_Cursor@b 0024                     _T1CKPS0 0084  
                   _T1CKPS1 0085          __size_of_timerInit 000F                  ??_Lcd8_Cmd 0021  
               ?_Rotation90 0070                  __stringtab 0339             _Lcd8_Write_Char 04BF  
                   ___awdiv 0177                     ___awmod 0244             __size_of___wmul 0027  
   __end_of_Lcd8_Set_Cursor 04BF                     __ptext1 04F7                     __ptext2 01E0  
                   __ptext3 0029                     __ptext4 047A                     __ptext5 0244  
                   __ptext6 0177                     __ptext7 02F3                     __ptext8 04BF  
                   __ptext9 04A1                __size_of_ISR 0033                     _counter 0078  
                 Lcd8_Cmd@a 0023                __size_of_toa 00BA            ___awmod@dividend 0022  
  __size_of_checkGateStatus 0064        end_of_initialization 0025                     toa@temp 002F  
         __end_of_timerInit 0506         __size_of_Rotation90 0033     __end_of_Lcd8_Write_Char 04DB  
               Rotation90@i 0022                   _Lcd8_Init 029F                   _Lcd8_Port 0378  
             ?i1_Rotation90 0070              __end_of___wmul 04A1            ?_Lcd8_Set_Cursor 0024  
       start_initialization 000F                 __end_of_ISR 041A           __size_of_Lcd8_Cmd 001C  
               __end_of_toa 00E3           _Lcd8_Write_String 02F3           ??_checkGateStatus 0031  
        ?_Lcd8_Write_String 0024                  ?_Lcd8_Init 0070                  ?_Lcd8_Port 0070  
       ??_Lcd8_Write_String 0026              ??i1_Rotation90 0070                    ??___wmul 0024  
               __pdataBANK0 004C                   _Rotation0 041A                 __pbssCOMMON 0076  
                 ___latbits 0002               __pcstackBANK0 0020   __end_of_Lcd8_Write_String 0339  
              ??_Rotation90 0020            ?_Lcd8_Write_Char 0070                    ?___awdiv 0020  
                  ?___awmod 0020          __end_of_Rotation90 03E7                   __pstrings 0339  
                ?_Rotation0 0070       checkGateStatus@string 0032           interrupt_function 0004  
               ??_Lcd8_Init 0024              ___wmul@product 0024            Lcd8_Write_Char@a 0023  
               ??_Lcd8_Port 0020                   _timerInit 04F7                 __stringbase 0348  
         ___wmul@multiplier 0020                    _Lcd8_Cmd 04DB  __size_of_Lcd8_Write_String 0046  
      __end_ofi1_Rotation90 047A                  ?_timerInit 0070            __size_of___awdiv 0069  
          __size_of___awmod 005B                 ??_Rotation0 0020          __end_of__stringtab 0349  
           _checkGateStatus 01E0                    __ptext10 03B4                    __ptext11 041A  
                  __ptext12 029F                    __ptext13 04DB                    __ptext14 0378  
                  __ptext15 03E7                    __ptext16 044B                    _isOpened 0046  
             __size_of_main 0094                 _parkingTime 004A                  Lcd8_Port@a 0020  
                  _numberID 0076    __size_of_Lcd8_Set_Cursor 001E                    intlevel1 0000  
                  toa@count 002D                    toa@value 0029                   stringcode 0343  
        Lcd8_Write_String@a 0024          Lcd8_Write_String@i 0029                 ??_timerInit 0020  
   __end_of_checkGateStatus 0244       __size_ofi1_Rotation90 002F                    stringdir 0343  
                  stringtab 0339    __size_of_Lcd8_Write_Char 001C  
