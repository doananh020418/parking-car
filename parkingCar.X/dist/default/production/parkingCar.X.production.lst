

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu Jun 10 14:50:43 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F877A Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009C                     	;# 
   180  009D                     	;# 
   181  009E                     	;# 
   182  009F                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  010E                     	;# 
   186  010F                     	;# 
   187  018C                     	;# 
   188  018D                     	;# 
   189  0000                     	;# 
   190  0001                     	;# 
   191  0002                     	;# 
   192  0003                     	;# 
   193  0004                     	;# 
   194  0005                     	;# 
   195  0006                     	;# 
   196  0007                     	;# 
   197  0008                     	;# 
   198  0009                     	;# 
   199  000A                     	;# 
   200  000B                     	;# 
   201  000C                     	;# 
   202  000D                     	;# 
   203  000E                     	;# 
   204  000E                     	;# 
   205  000F                     	;# 
   206  0010                     	;# 
   207  0011                     	;# 
   208  0012                     	;# 
   209  0013                     	;# 
   210  0014                     	;# 
   211  0015                     	;# 
   212  0015                     	;# 
   213  0016                     	;# 
   214  0017                     	;# 
   215  0018                     	;# 
   216  0019                     	;# 
   217  001A                     	;# 
   218  001B                     	;# 
   219  001B                     	;# 
   220  001C                     	;# 
   221  001D                     	;# 
   222  001E                     	;# 
   223  001F                     	;# 
   224  0081                     	;# 
   225  0085                     	;# 
   226  0086                     	;# 
   227  0087                     	;# 
   228  0088                     	;# 
   229  0089                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  0091                     	;# 
   234  0092                     	;# 
   235  0093                     	;# 
   236  0094                     	;# 
   237  0098                     	;# 
   238  0099                     	;# 
   239  009C                     	;# 
   240  009D                     	;# 
   241  009E                     	;# 
   242  009F                     	;# 
   243  010C                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  010F                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  0091                     	;# 
   294  0092                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  010E                     	;# 
   306  010F                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309                           
   310                           	psect	idataBANK0
   311  05C2                     __pidataBANK0:
   312                           
   313                           ;initializer for _park
   314  05C2  3463               	retlw	99
   315  05C3  3400               	retlw	0
   316  000E                     _TMR1	set	14
   317  001E                     _ADRESH	set	30
   318  001F                     _ADCON0	set	31
   319  0006                     _PORTB	set	6
   320  001A                     _RCREG	set	26
   321  00FA                     _GO_nDONE	set	250
   322  0059                     _INTF	set	89
   323  0031                     _RB1	set	49
   324  0032                     _RB2	set	50
   325  0035                     _RB5	set	53
   326  0034                     _RB4	set	52
   327  0037                     _RB7	set	55
   328  005C                     _INTE	set	92
   329  0080                     _TMR1ON	set	128
   330  0085                     _T1CKPS1	set	133
   331  0084                     _T1CKPS0	set	132
   332  0081                     _TMR1CS	set	129
   333  005F                     _GIE	set	95
   334  0060                     _TMR1IF	set	96
   335  003A                     _RC2	set	58
   336  0038                     _RC0	set	56
   337  0047                     _RD7	set	71
   338  0046                     _RD6	set	70
   339  0045                     _RD5	set	69
   340  0044                     _RD4	set	68
   341  0043                     _RD3	set	67
   342  0042                     _RD2	set	66
   343  0041                     _RD1	set	65
   344  0040                     _RD0	set	64
   345  0065                     _RCIF	set	101
   346  00C4                     _CREN	set	196
   347  005E                     _PEIE	set	94
   348  00C7                     _SPEN	set	199
   349  009E                     _ADRESL	set	158
   350  009F                     _ADCON1	set	159
   351  0088                     _TRISD	set	136
   352  0087                     _TRISC	set	135
   353  0086                     _TRISB	set	134
   354  0099                     _SPBRG	set	153
   355  040E                     _INTEDG	set	1038
   356  0460                     _TMR1IE	set	1120
   357  0465                     _RCIE	set	1125
   358  043F                     _TRISC7	set	1087
   359  043E                     _TRISC6	set	1086
   360  04C4                     _SYNC	set	1220
   361  04C2                     _BRGH	set	1218
   362                           
   363                           	psect	strings
   364  0330                     __pstrings:
   365  0330                     stringtab:
   366  0330                     __stringtab:
   367                           
   368                           ;	String table - string pointers are 1 byte each
   369  0330  1BFF               	btfsc	btemp+1,7
   370  0331  2B3A               	ljmp	stringcode
   371  0332  1383               	bcf	3,7
   372  0333  187F               	btfsc	btemp+1,0
   373  0334  1783               	bsf	3,7
   374  0335  0800               	movf	0,w
   375  0336  0A84               	incf	4,f
   376  0337  1903               	skipnz
   377  0338  0AFF               	incf	btemp+1,f
   378  0339  0008               	return
   379  033A                     stringcode:
   380  033A                     stringdir:
   381  033A  3003               	movlw	high stringdir
   382  033B  008A               	movwf	10
   383  033C  0804               	movf	4,w
   384  033D  0A84               	incf	4,f
   385  033E  0782               	addwf	2,f
   386  033F                     __stringbase:
   387  033F  3400               	retlw	0
   388  0340                     __end_of__stringtab:
   389  0340                     STR_1:
   390  0340  3431               	retlw	49	;'1'
   391  0341  3431               	retlw	49	;'1'
   392  0342  3431               	retlw	49	;'1'
   393  0343  3431               	retlw	49	;'1'
   394  0344  3431               	retlw	49	;'1'
   395  0345  3431               	retlw	49	;'1'
   396  0346  3431               	retlw	49	;'1'
   397  0347  3431               	retlw	49	;'1'
   398  0348  3431               	retlw	49	;'1'
   399  0349  3431               	retlw	49	;'1'
   400  034A  3431               	retlw	49	;'1'
   401  034B  3431               	retlw	49	;'1'
   402  034C  3400               	retlw	0
   403  034D                     STR_5:
   404  034D  3457               	retlw	87	;'W'
   405  034E  3465               	retlw	101	;'e'
   406  034F  346C               	retlw	108	;'l'
   407  0350  3463               	retlw	99	;'c'
   408  0351  346F               	retlw	111	;'o'
   409  0352  346D               	retlw	109	;'m'
   410  0353  3465               	retlw	101	;'e'
   411  0354  3421               	retlw	33	;'!'
   412  0355  3400               	retlw	0
   413  0356                     STR_2:
   414  0356  344C               	retlw	76	;'L'
   415  0357  346F               	retlw	111	;'o'
   416  0358  3463               	retlw	99	;'c'
   417  0359  346B               	retlw	107	;'k'
   418  035A  3421               	retlw	33	;'!'
   419  035B  3421               	retlw	33	;'!'
   420  035C  3421               	retlw	33	;'!'
   421  035D  3400               	retlw	0
   422  035E                     STR_3:
   423  035E  344F               	retlw	79	;'O'
   424  035F  3470               	retlw	112	;'p'
   425  0360  3465               	retlw	101	;'e'
   426  0361  346E               	retlw	110	;'n'
   427  0362  3465               	retlw	101	;'e'
   428  0363  3464               	retlw	100	;'d'
   429  0364  3421               	retlw	33	;'!'
   430  0365  3400               	retlw	0
   431  0366                     STR_4:
   432  0366  3443               	retlw	67	;'C'
   433  0367  346C               	retlw	108	;'l'
   434  0368  346F               	retlw	111	;'o'
   435  0369  3473               	retlw	115	;'s'
   436  036A  3465               	retlw	101	;'e'
   437  036B  3464               	retlw	100	;'d'
   438  036C  3421               	retlw	33	;'!'
   439  036D  3400               	retlw	0
   440  036E                     STR_6:
   441  036E  3453               	retlw	83	;'S'
   442  036F  3461               	retlw	97	;'a'
   443  0370  3466               	retlw	102	;'f'
   444  0371  3465               	retlw	101	;'e'
   445  0372  3400               	retlw	0
   446  0373                     STR_7:
   447  0373  3446               	retlw	70	;'F'
   448  0374  3469               	retlw	105	;'i'
   449  0375  3472               	retlw	114	;'r'
   450  0376  3465               	retlw	101	;'e'
   451  0377  3400               	retlw	0
   452                           
   453                           	psect	cinit
   454  000F                     start_initialization:	
   455                           ; #config settings
   456                           
   457  000F                     __initialization:
   458                           
   459                           ; Initialize objects allocated to BANK0
   460  000F  120A  118A  25C2  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   461  0014  00CF               	movwf	__pdataBANK0& (0+127)
   462  0015  120A  118A  25C3  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   463  001A  00D0               	movwf	(__pdataBANK0+1)& (0+127)
   464                           
   465                           ; Clear objects allocated to BANK0
   466  001B  01C7               	clrf	__pbssBANK0& (0+127)
   467  001C  01C8               	clrf	(__pbssBANK0+1)& (0+127)
   468  001D  01C9               	clrf	(__pbssBANK0+2)& (0+127)
   469  001E  01CA               	clrf	(__pbssBANK0+3)& (0+127)
   470  001F  01CB               	clrf	(__pbssBANK0+4)& (0+127)
   471  0020  01CC               	clrf	(__pbssBANK0+5)& (0+127)
   472  0021  01CD               	clrf	(__pbssBANK0+6)& (0+127)
   473  0022  01CE               	clrf	(__pbssBANK0+7)& (0+127)
   474                           
   475                           ; Clear objects allocated to COMMON
   476  0023  01F6               	clrf	__pbssCOMMON& (0+127)
   477  0024  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   478  0025  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   479  0026  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   480  0027                     end_of_initialization:	
   481                           ;End of C runtime variable initialization code
   482                           
   483  0027                     __end_of__initialization:
   484  0027  0183               	clrf	3
   485  0028  120A  118A  282B   	ljmp	_main	;jump to C main() function
   486                           
   487                           	psect	bssCOMMON
   488  0076                     __pbssCOMMON:
   489  0076                     _numberID:
   490  0076                     	ds	2
   491  0078                     _counter:
   492  0078                     	ds	2
   493                           
   494                           	psect	bssBANK0
   495  0047                     __pbssBANK0:
   496  0047                     _isOpened:
   497  0047                     	ds	2
   498  0049                     _lock:
   499  0049                     	ds	2
   500  004B                     _parkingTime:
   501  004B                     	ds	2
   502  004D                     _val:
   503  004D                     	ds	2
   504                           
   505                           	psect	dataBANK0
   506  004F                     __pdataBANK0:
   507  004F                     _park:
   508  004F                     	ds	2
   509                           
   510                           	psect	cstackCOMMON
   511  0070                     __pcstackCOMMON:
   512  0070                     ?_Rotation90:
   513  0070                     ?_Rotation0:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_Lcd8_Port:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_Lcd8_Cmd:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_Lcd8_Init:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_Lcd8_Write_Char:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_timerInit:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_checkGateStatus:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_main:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_ISR:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?i1_Rotation90:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ??i1_Rotation90:	
   544                           ; 1 bytes @ 0x0
   545                           
   546                           
   547                           ; 1 bytes @ 0x0
   548  0070                     	ds	2
   549  0072                     i1Rotation90@i:
   550                           
   551                           ; 2 bytes @ 0x2
   552  0072                     	ds	2
   553  0074                     ??_ISR:
   554                           
   555                           ; 1 bytes @ 0x4
   556  0074                     	ds	2
   557                           
   558                           	psect	cstackBANK0
   559  0020                     __pcstackBANK0:
   560  0020                     ??_Rotation90:
   561  0020                     ??_Rotation0:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0020                     ??_Lcd8_Port:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0020                     ??_timerInit:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0020                     ?___wmul:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0020                     ?___awdiv:	
   574                           ; 2 bytes @ 0x0
   575                           
   576  0020                     ?___awmod:	
   577                           ; 2 bytes @ 0x0
   578                           
   579  0020                     ?___lwdiv:	
   580                           ; 2 bytes @ 0x0
   581                           
   582  0020                     Lcd8_Port@a:	
   583                           ; 2 bytes @ 0x0
   584                           
   585  0020                     ___wmul@multiplier:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0020                     ___awdiv@divisor:	
   589                           ; 2 bytes @ 0x0
   590                           
   591  0020                     ___awmod@divisor:	
   592                           ; 2 bytes @ 0x0
   593                           
   594  0020                     ___lwdiv@divisor:	
   595                           ; 2 bytes @ 0x0
   596                           
   597                           
   598                           ; 2 bytes @ 0x0
   599  0020                     	ds	1
   600  0021                     ??_Lcd8_Cmd:
   601  0021                     ??_Lcd8_Write_Char:	
   602                           ; 1 bytes @ 0x1
   603                           
   604                           
   605                           ; 1 bytes @ 0x1
   606  0021                     	ds	1
   607  0022                     Rotation0@i:
   608  0022                     Rotation90@i:	
   609                           ; 2 bytes @ 0x2
   610                           
   611  0022                     ___wmul@multiplicand:	
   612                           ; 2 bytes @ 0x2
   613                           
   614  0022                     ___awdiv@dividend:	
   615                           ; 2 bytes @ 0x2
   616                           
   617  0022                     ___awmod@dividend:	
   618                           ; 2 bytes @ 0x2
   619                           
   620  0022                     ___lwdiv@dividend:	
   621                           ; 2 bytes @ 0x2
   622                           
   623                           
   624                           ; 2 bytes @ 0x2
   625  0022                     	ds	1
   626  0023                     Lcd8_Cmd@a:
   627  0023                     Lcd8_Write_Char@a:	
   628                           ; 1 bytes @ 0x3
   629                           
   630                           
   631                           ; 1 bytes @ 0x3
   632  0023                     	ds	1
   633  0024                     ?_Lcd8_Set_Cursor:
   634  0024                     ??_Lcd8_Init:	
   635                           ; 1 bytes @ 0x4
   636                           
   637  0024                     ?_Lcd8_Write_String:	
   638                           ; 1 bytes @ 0x4
   639                           
   640  0024                     ??___wmul:	
   641                           ; 1 bytes @ 0x4
   642                           
   643  0024                     ??___awdiv:	
   644                           ; 1 bytes @ 0x4
   645                           
   646  0024                     ??___awmod:	
   647                           ; 1 bytes @ 0x4
   648                           
   649  0024                     ??___lwdiv:	
   650                           ; 1 bytes @ 0x4
   651                           
   652  0024                     Lcd8_Set_Cursor@b:	
   653                           ; 1 bytes @ 0x4
   654                           
   655  0024                     Lcd8_Write_String@a:	
   656                           ; 1 bytes @ 0x4
   657                           
   658  0024                     ___wmul@product:	
   659                           ; 2 bytes @ 0x4
   660                           
   661                           
   662                           ; 2 bytes @ 0x4
   663  0024                     	ds	1
   664  0025                     ??_Lcd8_Set_Cursor:
   665  0025                     Lcd8_Set_Cursor@a:	
   666                           ; 1 bytes @ 0x5
   667                           
   668  0025                     ___awdiv@counter:	
   669                           ; 1 bytes @ 0x5
   670                           
   671  0025                     ___awmod@counter:	
   672                           ; 1 bytes @ 0x5
   673                           
   674  0025                     ___lwdiv@counter:	
   675                           ; 1 bytes @ 0x5
   676                           
   677                           
   678                           ; 1 bytes @ 0x5
   679  0025                     	ds	1
   680  0026                     ??_Lcd8_Write_String:
   681  0026                     ___awdiv@sign:	
   682                           ; 1 bytes @ 0x6
   683                           
   684  0026                     ___awmod@sign:	
   685                           ; 1 bytes @ 0x6
   686                           
   687  0026                     ___lwdiv@quotient:	
   688                           ; 1 bytes @ 0x6
   689                           
   690                           
   691                           ; 2 bytes @ 0x6
   692  0026                     	ds	1
   693  0027                     ___awdiv@quotient:
   694                           
   695                           ; 2 bytes @ 0x7
   696  0027                     	ds	1
   697  0028                     ?_adc:
   698                           
   699                           ; 2 bytes @ 0x8
   700  0028                     	ds	1
   701  0029                     ?_toa:
   702  0029                     Lcd8_Write_String@i:	
   703                           ; 2 bytes @ 0x9
   704                           
   705  0029                     toa@value:	
   706                           ; 2 bytes @ 0x9
   707                           
   708                           
   709                           ; 2 bytes @ 0x9
   710  0029                     	ds	1
   711  002A                     ??_adc:
   712  002A                     adc@adcval:	
   713                           ; 1 bytes @ 0xA
   714                           
   715                           
   716                           ; 2 bytes @ 0xA
   717  002A                     	ds	1
   718  002B                     toa@ptr:
   719                           
   720                           ; 1 bytes @ 0xB
   721  002B                     	ds	1
   722  002C                     ??_toa:
   723                           
   724                           ; 1 bytes @ 0xC
   725  002C                     	ds	1
   726  002D                     toa@count:
   727                           
   728                           ; 2 bytes @ 0xD
   729  002D                     	ds	2
   730  002F                     toa@temp:
   731                           
   732                           ; 2 bytes @ 0xF
   733  002F                     	ds	2
   734  0031                     ??_checkGateStatus:
   735                           
   736                           ; 1 bytes @ 0x11
   737  0031                     	ds	1
   738  0032                     checkGateStatus@string:
   739                           
   740                           ; 20 bytes @ 0x12
   741  0032                     	ds	20
   742  0046                     ??_main:
   743                           
   744                           ; 1 bytes @ 0x26
   745  0046                     	ds	1
   746                           
   747                           	psect	maintext
   748  002B                     __pmaintext:	
   749 ;;
   750 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   751 ;;
   752 ;; *************** function _main *****************
   753 ;; Defined at:
   754 ;;		line 154 in file "parkingCar.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;  id             13    0        unsigned char [13]
   759 ;;  i               2    0        int 
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   764 ;; Tracked objects:
   765 ;;		On entry : B00/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   769 ;;      Params:         0       0       0       0       0
   770 ;;      Locals:         0       0       0       0       0
   771 ;;      Temps:          0       1       0       0       0
   772 ;;      Totals:         0       1       0       0       0
   773 ;;Total ram usage:        1 bytes
   774 ;; Hardware stack levels required when called:    6
   775 ;; This function calls:
   776 ;;		_Lcd8_Init
   777 ;;		_Lcd8_Set_Cursor
   778 ;;		_Lcd8_Write_String
   779 ;;		_Rotation0
   780 ;;		_Rotation90
   781 ;;		_adc
   782 ;;		_checkGateStatus
   783 ;;		_timerInit
   784 ;; This function is called by:
   785 ;;		Startup code after reset
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           
   790                           ;psect for function _main
   791  002B                     _main:
   792  002B                     l2174:	
   793                           ;incstack = 0
   794                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   795                           
   796                           
   797                           ;parkingCar.c: 155:                     }
   798  002B  120A  118A  25B3  120A  118A  	fcall	_timerInit
   799  0030                     l2176:
   800                           
   801                           ;parkingCar.c: 158:         if(RB5 == 1){
   802  0030  1683               	bsf	3,5	;RP0=1, select bank1
   803  0031  1303               	bcf	3,6	;RP1=0, select bank1
   804  0032  1701               	bsf	1,6	;volatile
   805  0033                     l2178:
   806                           
   807                           ;parkingCar.c: 159:             RB2 = 1;
   808  0033  160B               	bsf	11,4	;volatile
   809  0034                     l2180:
   810                           
   811                           ;parkingCar.c: 160:             Lcd8_Write_String("Safe");
   812  0034  30F9               	movlw	249
   813  0035  0086               	movwf	6	;volatile
   814  0036                     l2182:
   815                           
   816                           ;parkingCar.c: 161:         }
   817  0036  1283               	bcf	3,5	;RP0=0, select bank0
   818  0037  1303               	bcf	3,6	;RP1=0, select bank0
   819  0038  0186               	clrf	6	;volatile
   820  0039                     l2184:
   821                           
   822                           ;parkingCar.c: 162:         else{
   823  0039  30C0               	movlw	192
   824  003A  1683               	bsf	3,5	;RP0=1, select bank1
   825  003B  1303               	bcf	3,6	;RP1=0, select bank1
   826  003C  0087               	movwf	7	;volatile
   827  003D                     l2186:
   828                           
   829                           ;parkingCar.c: 163:             Lcd8_Write_String("Fire");
   830  003D  1283               	bcf	3,5	;RP0=0, select bank0
   831  003E  1303               	bcf	3,6	;RP1=0, select bank0
   832  003F  1786               	bsf	6,7	;volatile
   833  0040                     l2188:
   834                           
   835                           ;parkingCar.c: 164:             RB2 = 0;
   836  0040  1683               	bsf	3,5	;RP0=1, select bank1
   837  0041  1303               	bcf	3,6	;RP1=0, select bank1
   838  0042  1787               	bsf	7,7	;volatile
   839  0043  1B87               	btfsc	7,7	;volatile
   840  0044  2846               	goto	u2031
   841  0045  284A               	goto	u2030
   842  0046                     u2031:
   843  0046  1683               	bsf	3,5	;RP0=1, select bank1
   844  0047  1303               	bcf	3,6	;RP1=0, select bank1
   845  0048  1707               	bsf	7,6	;volatile
   846  0049  284D               	goto	u2044
   847  004A                     u2030:
   848  004A  1683               	bsf	3,5	;RP0=1, select bank1
   849  004B  1303               	bcf	3,6	;RP1=0, select bank1
   850  004C  1307               	bcf	7,6	;volatile
   851  004D                     u2044:
   852  004D                     l2190:
   853                           
   854                           ;parkingCar.c: 166: 
   855  004D  0188               	clrf	8	;volatile
   856  004E                     l2192:
   857                           
   858                           ;parkingCar.c: 168: }
   859  004E  120A  118A  22DC  120A  118A  	fcall	_Lcd8_Init
   860  0053                     l2194:
   861                           
   862                           ;parkingCar.c: 171: {;parkingCar.c: 172:     unsigned int i;;parkingCar.c: 174:     {
   863  0053  1283               	bcf	3,5	;RP0=0, select bank0
   864  0054  1303               	bcf	3,6	;RP1=0, select bank0
   865  0055  01A4               	clrf	Lcd8_Set_Cursor@b
   866  0056  3001               	movlw	1
   867  0057  120A  118A  255D  120A  118A  	fcall	_Lcd8_Set_Cursor
   868  005C                     l2196:
   869                           
   870                           ;parkingCar.c: 175:         RB1 = 1;
   871  005C  300E               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   872  005D  1283               	bcf	3,5	;RP0=0, select bank0
   873  005E  1303               	bcf	3,6	;RP1=0, select bank0
   874  005F  00A4               	movwf	Lcd8_Write_String@a
   875  0060  3080               	movlw	128
   876  0061  00A5               	movwf	Lcd8_Write_String@a+1
   877  0062  120A  118A  2378  120A  118A  	fcall	_Lcd8_Write_String
   878  0067                     l2198:
   879                           
   880                           ;parkingCar.c: 178:         _delay((unsigned long)((19100)*(16000000/4000000.0)));
   881  0067  120A  118A  24D7  120A  118A  	fcall	_adc
   882  006C  1283               	bcf	3,5	;RP0=0, select bank0
   883  006D  1303               	bcf	3,6	;RP1=0, select bank0
   884  006E  0829               	movf	?_adc+1,w
   885  006F  00CE               	movwf	_val+1
   886  0070  0828               	movf	?_adc,w
   887  0071  00CD               	movwf	_val
   888  0072                     l2200:
   889                           
   890                           ;parkingCar.c: 179:     }
   891  0072  120A  118A  221D  120A  118A  	fcall	_checkGateStatus
   892                           
   893                           ;parkingCar.c: 182: 
   894  0077  3000               	movlw	0
   895  0078  1283               	bcf	3,5	;RP0=0, select bank0
   896  0079  1303               	bcf	3,6	;RP1=0, select bank0
   897  007A  024E               	subwf	_val+1,w
   898  007B  3097               	movlw	151
   899  007C  1903               	skipnz
   900  007D  024D               	subwf	_val,w
   901  007E  1C03               	skipc
   902  007F  2881               	goto	u2051
   903  0080  2882               	goto	u2050
   904  0081                     u2051:
   905  0081  28AF               	goto	l2218
   906  0082                     u2050:
   907  0082                     l2202:
   908                           
   909                           ;parkingCar.c: 183: void Rotation90()
   910  0082  0847               	movf	_isOpened,w
   911  0083  0448               	iorwf	_isOpened+1,w
   912  0084  1D03               	btfss	3,2
   913  0085  2887               	goto	u2061
   914  0086  2888               	goto	u2060
   915  0087                     u2061:
   916  0087  2897               	goto	l2210
   917  0088                     u2060:
   918  0088                     l2204:
   919  0088  0849               	movf	_lock,w
   920  0089  044A               	iorwf	_lock+1,w
   921  008A  1D03               	btfss	3,2
   922  008B  288D               	goto	u2071
   923  008C  288E               	goto	u2070
   924  008D                     u2071:
   925  008D  2897               	goto	l2210
   926  008E                     u2070:
   927  008E                     l2206:
   928                           
   929                           ;parkingCar.c: 184: {
   930  008E  120A  118A  2440  120A  118A  	fcall	_Rotation90
   931  0093                     l2208:
   932                           
   933                           ;parkingCar.c: 185:     unsigned int i;
   934  0093  1283               	bcf	3,5	;RP0=0, select bank0
   935  0094  1303               	bcf	3,6	;RP1=0, select bank0
   936  0095  01CB               	clrf	_parkingTime
   937  0096  01CC               	clrf	_parkingTime+1
   938  0097                     l2210:
   939                           
   940                           ;parkingCar.c: 188:         RB1 = 1;
   941  0097  3000               	movlw	0
   942  0098  024C               	subwf	_parkingTime+1,w
   943  0099  3010               	movlw	16
   944  009A  1903               	skipnz
   945  009B  024B               	subwf	_parkingTime,w
   946  009C  1C03               	skipc
   947  009D  289F               	goto	u2081
   948  009E  28A0               	goto	u2080
   949  009F                     u2081:
   950  009F  28AF               	goto	l2218
   951  00A0                     u2080:
   952  00A0                     l2212:
   953  00A0  1A06               	btfsc	6,4	;volatile
   954  00A1  28A3               	goto	u2091
   955  00A2  28A4               	goto	u2090
   956  00A3                     u2091:
   957  00A3  28AF               	goto	l2218
   958  00A4                     u2090:
   959  00A4                     l2214:
   960                           
   961                           ;parkingCar.c: 190:         RB1 = 0;
   962  00A4  120A  118A  24A6  120A  118A  	fcall	_Rotation0
   963  00A9                     l2216:
   964                           
   965                           ;parkingCar.c: 191:         _delay((unsigned long)((18050)*(16000000/4000000.0)));
   966  00A9  3001               	movlw	1
   967  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   968  00AB  1303               	bcf	3,6	;RP1=0, select bank0
   969  00AC  00C9               	movwf	_lock
   970  00AD  3000               	movlw	0
   971  00AE  00CA               	movwf	_lock+1
   972  00AF                     l2218:
   973                           
   974                           ;parkingCar.c: 195: 
   975  00AF  1E06               	btfss	6,4	;volatile
   976  00B0  28B2               	goto	u2101
   977  00B1  28B3               	goto	u2100
   978  00B2                     u2101:
   979  00B2  28CF               	goto	l2228
   980  00B3                     u2100:
   981  00B3                     l2220:
   982                           
   983                           ;parkingCar.c: 196: void __attribute__((picinterrupt(("")))) ISR(void){
   984  00B3  3000               	movlw	0
   985  00B4  024E               	subwf	_val+1,w
   986  00B5  3096               	movlw	150
   987  00B6  1903               	skipnz
   988  00B7  024D               	subwf	_val,w
   989  00B8  1803               	skipnc
   990  00B9  28BB               	goto	u2111
   991  00BA  28BC               	goto	u2110
   992  00BB                     u2111:
   993  00BB  28CF               	goto	l2228
   994  00BC                     u2110:
   995  00BC                     l2222:
   996                           
   997                           ;parkingCar.c: 197:         if(INTF == 1) {
   998  00BC  0347               	decf	_isOpened,w
   999  00BD  0448               	iorwf	_isOpened+1,w
  1000  00BE  1D03               	btfss	3,2
  1001  00BF  28C1               	goto	u2121
  1002  00C0  28C2               	goto	u2120
  1003  00C1                     u2121:
  1004  00C1  28CF               	goto	l2228
  1005  00C2                     u2120:
  1006  00C2                     l2224:
  1007                           
  1008                           ;parkingCar.c: 198:             Rotation90();
  1009  00C2  120A  118A  24A6  120A  118A  	fcall	_Rotation0
  1010  00C7                     l2226:
  1011                           
  1012                           ;parkingCar.c: 199:             lock = 0;
  1013  00C7  30FF               	movlw	255
  1014  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1015  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1016  00CA  07CF               	addwf	_park,f
  1017  00CB  1803               	skipnc
  1018  00CC  0AD0               	incf	_park+1,f
  1019  00CD  30FF               	movlw	255
  1020  00CE  07D0               	addwf	_park+1,f
  1021  00CF                     l2228:
  1022                           
  1023                           ;parkingCar.c: 203:         if(TMR1IF == 1){
  1024  00CF  300B               	movlw	11
  1025  00D0  00C6               	movwf	??_main
  1026  00D1  0846               	movf	??_main,w
  1027  00D2  00A4               	movwf	Lcd8_Set_Cursor@b
  1028  00D3  3001               	movlw	1
  1029  00D4  120A  118A  255D  120A  118A  	fcall	_Lcd8_Set_Cursor
  1030  00D9                     l2230:
  1031                           
  1032                           ;parkingCar.c: 204:             counter ++;
  1033  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1034  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1035  00DB  1E86               	btfss	6,5	;volatile
  1036  00DC  28DE               	goto	u2131
  1037  00DD  28DF               	goto	u2130
  1038  00DE                     u2131:
  1039  00DE  28EA               	goto	l2236
  1040  00DF                     u2130:
  1041  00DF                     l2232:
  1042                           
  1043                           ;parkingCar.c: 205:             if(counter == 61*1){
  1044  00DF  1506               	bsf	6,2	;volatile
  1045  00E0                     l2234:
  1046                           
  1047                           ;parkingCar.c: 206:                 parkingTime ++;
  1048  00E0  302F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1049  00E1  00A4               	movwf	Lcd8_Write_String@a
  1050  00E2  3080               	movlw	128
  1051  00E3  00A5               	movwf	Lcd8_Write_String@a+1
  1052  00E4  120A  118A  2378  120A  118A  	fcall	_Lcd8_Write_String
  1053                           
  1054                           ;parkingCar.c: 207:                 counter=0;
  1055  00E9  2867               	goto	l2198
  1056  00EA                     l2236:
  1057                           
  1058                           ;parkingCar.c: 209:             TMR1IF = 0;
  1059  00EA  3034               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1060  00EB  00A4               	movwf	Lcd8_Write_String@a
  1061  00EC  3080               	movlw	128
  1062  00ED  00A5               	movwf	Lcd8_Write_String@a+1
  1063  00EE  120A  118A  2378  120A  118A  	fcall	_Lcd8_Write_String
  1064  00F3                     l2238:
  1065                           
  1066                           ;parkingCar.c: 210:         }
  1067  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1068  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1069  00F5  1106               	bcf	6,2	;volatile
  1070  00F6  2867               	goto	l2198
  1071  00F7  120A  118A  280C   	ljmp	start
  1072  00FA                     __end_of_main:
  1073                           
  1074                           	psect	text1
  1075  05B3                     __ptext1:	
  1076 ;; *************** function _timerInit *****************
  1077 ;; Defined at:
  1078 ;;		line 117 in file "parkingCar.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		status,2
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1092 ;;      Params:         0       0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0
  1095 ;;      Totals:         0       0       0       0       0
  1096 ;;Total ram usage:        0 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; Hardware stack levels required when called:    2
  1099 ;; This function calls:
  1100 ;;		Nothing
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           
  1107                           ;psect for function _timerInit
  1108  05B3                     _timerInit:
  1109  05B3                     l2104:	
  1110                           ;incstack = 0
  1111                           ; Regs used in _timerInit: [status,2]
  1112                           
  1113                           
  1114                           ;parkingCar.c: 118:     TRISC6=TRISC7=1;
  1115  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  1116  05B4  1303               	bcf	3,6	;RP1=0, select bank1
  1117  05B5  140C               	bsf	12,0	;volatile
  1118                           
  1119                           ;parkingCar.c: 119: 
  1120  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  1121  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  1122  05B8  100C               	bcf	12,0	;volatile
  1123                           
  1124                           ;parkingCar.c: 120:     TRISD = 0x00;
  1125  05B9  170B               	bsf	11,6	;volatile
  1126                           
  1127                           ;parkingCar.c: 121: 
  1128  05BA  178B               	bsf	11,7	;volatile
  1129  05BB                     l2106:
  1130                           
  1131                           ;parkingCar.c: 125:     int i;
  1132  05BB  018E               	clrf	14	;volatile
  1133  05BC  018F               	clrf	15	;volatile
  1134  05BD                     l2108:
  1135                           
  1136                           ;parkingCar.c: 127: 
  1137  05BD  1090               	bcf	16,1	;volatile
  1138  05BE                     l2110:
  1139                           
  1140                           ;parkingCar.c: 129:     Lcd8_Write_String("Welcome!");
  1141  05BE  1210               	bcf	16,4	;volatile
  1142  05BF                     l2112:
  1143                           
  1144                           ;parkingCar.c: 130: 
  1145  05BF  1290               	bcf	16,5	;volatile
  1146  05C0                     l2114:
  1147                           
  1148                           ;parkingCar.c: 132:         val = adc();
  1149  05C0  1410               	bsf	16,0	;volatile
  1150  05C1                     l249:
  1151  05C1  0008               	return
  1152  05C2                     __end_of_timerInit:
  1153                           
  1154                           	psect	text2
  1155  021D                     __ptext2:	
  1156 ;; *************** function _checkGateStatus *****************
  1157 ;; Defined at:
  1158 ;;		line 135 in file "parkingCar.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  string         20   18[BANK0 ] unsigned char [20]
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1172 ;;      Params:         0       0       0       0       0
  1173 ;;      Locals:         0      20       0       0       0
  1174 ;;      Temps:          0       1       0       0       0
  1175 ;;      Totals:         0      21       0       0       0
  1176 ;;Total ram usage:       21 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; Hardware stack levels required when called:    5
  1179 ;; This function calls:
  1180 ;;		_Lcd8_Set_Cursor
  1181 ;;		_Lcd8_Write_String
  1182 ;;		_toa
  1183 ;; This function is called by:
  1184 ;;		_main
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           
  1189                           ;psect for function _checkGateStatus
  1190  021D                     _checkGateStatus:
  1191  021D                     l2116:	
  1192                           ;incstack = 0
  1193                           ; Regs used in _checkGateStatus: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1194                           
  1195                           
  1196                           ;parkingCar.c: 136:                     if(1){
  1197  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1198  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1199  021F  0349               	decf	_lock,w
  1200  0220  044A               	iorwf	_lock+1,w
  1201  0221  1D03               	btfss	3,2
  1202  0222  2A24               	goto	u1981
  1203  0223  2A25               	goto	u1980
  1204  0224                     u1981:
  1205  0224  2A38               	goto	l2122
  1206  0225                     u1980:
  1207  0225                     l2118:
  1208                           
  1209                           ;parkingCar.c: 137:                         if (isOpened == 0 && lock == 0){
  1210  0225  01A4               	clrf	Lcd8_Set_Cursor@b
  1211  0226  3002               	movlw	2
  1212  0227  120A  118A  255D  120A  118A  	fcall	_Lcd8_Set_Cursor
  1213  022C                     l2120:
  1214                           
  1215                           ;parkingCar.c: 138:                             Rotation90();
  1216  022C  3017               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1217  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1218  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1219  022F  00A4               	movwf	Lcd8_Write_String@a
  1220  0230  3080               	movlw	128
  1221  0231  00A5               	movwf	Lcd8_Write_String@a+1
  1222  0232  120A  118A  2378  120A  118A  	fcall	_Lcd8_Write_String
  1223                           
  1224                           ;parkingCar.c: 139:                             parkingTime = 0;
  1225  0237  2A5A               	goto	l253
  1226  0238                     l2122:
  1227                           
  1228                           ;parkingCar.c: 141:                         }
  1229  0238  01A4               	clrf	Lcd8_Set_Cursor@b
  1230  0239  3002               	movlw	2
  1231  023A  120A  118A  255D  120A  118A  	fcall	_Lcd8_Set_Cursor
  1232  023F                     l2124:
  1233                           
  1234                           ;parkingCar.c: 142:                         if(parkingTime > 15 && RB4 == 0){
  1235  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0241  0347               	decf	_isOpened,w
  1238  0242  0448               	iorwf	_isOpened+1,w
  1239  0243  1D03               	btfss	3,2
  1240  0244  2A46               	goto	u1991
  1241  0245  2A47               	goto	u1990
  1242  0246                     u1991:
  1243  0246  2A51               	goto	l2128
  1244  0247                     u1990:
  1245  0247                     l2126:
  1246                           
  1247                           ;parkingCar.c: 143: 
  1248  0247  301F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1249  0248  00A4               	movwf	Lcd8_Write_String@a
  1250  0249  3080               	movlw	128
  1251  024A  00A5               	movwf	Lcd8_Write_String@a+1
  1252  024B  120A  118A  2378  120A  118A  	fcall	_Lcd8_Write_String
  1253                           
  1254                           ;parkingCar.c: 144:                                 Rotation0();
  1255  0250  2A5A               	goto	l253
  1256  0251                     l2128:
  1257                           
  1258                           ;parkingCar.c: 145:                                 lock = 1;
  1259  0251  3027               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1260  0252  00A4               	movwf	Lcd8_Write_String@a
  1261  0253  3080               	movlw	128
  1262  0254  00A5               	movwf	Lcd8_Write_String@a+1
  1263  0255  120A  118A  2378  120A  118A  	fcall	_Lcd8_Write_String
  1264  025A                     l253:	
  1265                           ;parkingCar.c: 147:                     }
  1266                           
  1267                           
  1268                           ;parkingCar.c: 148:                 };parkingCar.c: 149:                 if(RB4==1){
  1269  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1270  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1271  025C  0850               	movf	_park+1,w
  1272  025D  00AA               	movwf	toa@value+1
  1273  025E  084F               	movf	_park,w
  1274  025F  00A9               	movwf	toa@value
  1275  0260  3032               	movlw	(low (checkGateStatus@string| 0))& (0+255)
  1276  0261  00B1               	movwf	??_checkGateStatus
  1277  0262  0831               	movf	??_checkGateStatus,w
  1278  0263  00AB               	movwf	toa@ptr
  1279  0264  120A  118A  20FA  120A  118A  	fcall	_toa
  1280  0269                     l2130:
  1281                           
  1282                           ;parkingCar.c: 150:                     if (val<150){
  1283  0269  300A               	movlw	10
  1284  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1285  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1286  026C  00B1               	movwf	??_checkGateStatus
  1287  026D  0831               	movf	??_checkGateStatus,w
  1288  026E  00A4               	movwf	Lcd8_Set_Cursor@b
  1289  026F  3002               	movlw	2
  1290  0270  120A  118A  255D  120A  118A  	fcall	_Lcd8_Set_Cursor
  1291  0275                     l2132:
  1292                           
  1293                           ;parkingCar.c: 151:                         if(isOpened == 1){
  1294  0275  3032               	movlw	(low (checkGateStatus@string| 0))& (0+255)
  1295  0276  1283               	bcf	3,5	;RP0=0, select bank0
  1296  0277  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0278  00A4               	movwf	Lcd8_Write_String@a
  1298  0279  3000               	movlw	0
  1299  027A  00A5               	movwf	Lcd8_Write_String@a+1
  1300  027B  120A  118A  2378  120A  118A  	fcall	_Lcd8_Write_String
  1301  0280                     l256:
  1302  0280  0008               	return
  1303  0281                     __end_of_checkGateStatus:
  1304                           
  1305                           	psect	text3
  1306  00FA                     __ptext3:	
  1307 ;; *************** function _toa *****************
  1308 ;; Defined at:
  1309 ;;		line 56 in file "parkingCar.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;  value           2    9[BANK0 ] int 
  1312 ;;  ptr             1   11[BANK0 ] PTR unsigned char 
  1313 ;;		 -> checkGateStatus@string(20), 
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;  temp            2   15[BANK0 ] int 
  1316 ;;  count           2   13[BANK0 ] int 
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  2    9[BANK0 ] int 
  1319 ;; Registers used:
  1320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1326 ;;      Params:         0       3       0       0       0
  1327 ;;      Locals:         0       4       0       0       0
  1328 ;;      Temps:          0       1       0       0       0
  1329 ;;      Totals:         0       8       0       0       0
  1330 ;;Total ram usage:        8 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    3
  1333 ;; This function calls:
  1334 ;;		___awdiv
  1335 ;;		___awmod
  1336 ;;		___wmul
  1337 ;; This function is called by:
  1338 ;;		_checkGateStatus
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           
  1343                           ;psect for function _toa
  1344  00FA                     _toa:
  1345  00FA                     l2018:	
  1346                           ;incstack = 0
  1347                           ; Regs used in _toa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1348                           
  1349                           
  1350                           ;parkingCar.c: 56:         if (strcmp((unsigned char) eeprom_read(i), id) == 0) {;parkin
      +                          gCar.c: 57:             return 1;;parkingCar.c: 58:         }
  1351  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1352  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1353  00FC  01AD               	clrf	toa@count
  1354  00FD  01AE               	clrf	toa@count+1
  1355  00FE                     l2020:
  1356                           
  1357                           ;parkingCar.c: 59:     }
  1358  00FE  082B               	movf	toa@ptr,w
  1359  00FF  1D03               	btfss	3,2
  1360  0100  2902               	goto	u1861
  1361  0101  2903               	goto	u1860
  1362  0102                     u1861:
  1363  0102  2904               	goto	l2024
  1364  0103                     u1860:
  1365  0103  29B3               	goto	l221
  1366  0104                     l2024:
  1367                           
  1368                           ;parkingCar.c: 61: }
  1369  0104  0829               	movf	toa@value,w
  1370  0105  042A               	iorwf	toa@value+1,w
  1371  0106  1D03               	btfss	3,2
  1372  0107  2909               	goto	u1871
  1373  0108  290A               	goto	u1870
  1374  0109                     u1871:
  1375  0109  2912               	goto	l222
  1376  010A                     u1870:
  1377  010A                     l2026:
  1378                           
  1379                           ;parkingCar.c: 62: ;parkingCar.c: 63: unsigned int checkID2(unsigned char id[12], unsign
      +                          ed char availableID[12]) {
  1380  010A  3030               	movlw	48
  1381  010B  00AC               	movwf	??_toa
  1382  010C  082B               	movf	toa@ptr,w
  1383  010D  0084               	movwf	4
  1384  010E  082C               	movf	??_toa,w
  1385  010F  1383               	bcf	3,7	;select IRP bank0
  1386  0110  0080               	movwf	0
  1387  0111  29B3               	goto	l221
  1388  0112                     l222:	
  1389                           ;parkingCar.c: 65:     if (strcmp(availableID, id) == 0) {
  1390                           
  1391                           
  1392                           ;parkingCar.c: 67:     }
  1393  0112  1FAA               	btfss	toa@value+1,7
  1394  0113  2915               	goto	u1881
  1395  0114  2916               	goto	u1880
  1396  0115                     u1881:
  1397  0115  293A               	goto	l2038
  1398  0116                     u1880:
  1399  0116                     l2030:
  1400                           
  1401                           ;parkingCar.c: 68:     return 0;;parkingCar.c: 69: }
  1402  0116  30FF               	movlw	255
  1403  0117  00A0               	movwf	___wmul@multiplier
  1404  0118  30FF               	movlw	255
  1405  0119  00A1               	movwf	___wmul@multiplier+1
  1406  011A  082A               	movf	toa@value+1,w
  1407  011B  00A3               	movwf	___wmul@multiplicand+1
  1408  011C  0829               	movf	toa@value,w
  1409  011D  00A2               	movwf	___wmul@multiplicand
  1410  011E  120A  118A  2536  120A  118A  	fcall	___wmul
  1411  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1412  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1413  0125  0821               	movf	?___wmul+1,w
  1414  0126  00AA               	movwf	toa@value+1
  1415  0127  0820               	movf	?___wmul,w
  1416  0128  00A9               	movwf	toa@value
  1417  0129                     l2032:
  1418                           
  1419                           ;parkingCar.c: 70: 
  1420  0129  302D               	movlw	45
  1421  012A  00AC               	movwf	??_toa
  1422  012B  082B               	movf	toa@ptr,w
  1423  012C  0084               	movwf	4
  1424  012D  082C               	movf	??_toa,w
  1425  012E  1383               	bcf	3,7	;select IRP bank0
  1426  012F  0080               	movwf	0
  1427  0130                     l2034:
  1428  0130  3001               	movlw	1
  1429  0131  00AC               	movwf	??_toa
  1430  0132  082C               	movf	??_toa,w
  1431  0133  07AB               	addwf	toa@ptr,f
  1432  0134                     l2036:
  1433                           
  1434                           ;parkingCar.c: 71: void timerInit() {
  1435  0134  3001               	movlw	1
  1436  0135  07AD               	addwf	toa@count,f
  1437  0136  1803               	skipnc
  1438  0137  0AAE               	incf	toa@count+1,f
  1439  0138  3000               	movlw	0
  1440  0139  07AE               	addwf	toa@count+1,f
  1441  013A                     l2038:
  1442                           
  1443                           ;parkingCar.c: 73:     TMR1IF = 0;
  1444  013A  082A               	movf	toa@value+1,w
  1445  013B  00B0               	movwf	toa@temp+1
  1446  013C  0829               	movf	toa@value,w
  1447  013D  00AF               	movwf	toa@temp
  1448  013E                     l2040:
  1449  013E  0830               	movf	toa@temp+1,w
  1450  013F  3A80               	xorlw	128
  1451  0140  00FF               	movwf	btemp+1
  1452  0141  3080               	movlw	128
  1453  0142  027F               	subwf	btemp+1,w
  1454  0143  1D03               	skipz
  1455  0144  2947               	goto	u1895
  1456  0145  3001               	movlw	1
  1457  0146  022F               	subwf	toa@temp,w
  1458  0147                     u1895:
  1459  0147  1803               	skipnc
  1460  0148  294A               	goto	u1891
  1461  0149  294B               	goto	u1890
  1462  014A                     u1891:
  1463  014A  294C               	goto	l2044
  1464  014B                     u1890:
  1465  014B  2966               	goto	l2050
  1466  014C                     l2044:
  1467  014C  300A               	movlw	10
  1468  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1469  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1470  014F  00A0               	movwf	___awdiv@divisor
  1471  0150  3000               	movlw	0
  1472  0151  00A1               	movwf	___awdiv@divisor+1
  1473  0152  0830               	movf	toa@temp+1,w
  1474  0153  00A3               	movwf	___awdiv@dividend+1
  1475  0154  082F               	movf	toa@temp,w
  1476  0155  00A2               	movwf	___awdiv@dividend
  1477  0156  120A  118A  21B4  120A  118A  	fcall	___awdiv
  1478  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1479  015C  1303               	bcf	3,6	;RP1=0, select bank0
  1480  015D  0821               	movf	?___awdiv+1,w
  1481  015E  00B0               	movwf	toa@temp+1
  1482  015F  0820               	movf	?___awdiv,w
  1483  0160  00AF               	movwf	toa@temp
  1484  0161                     l2046:
  1485  0161  3001               	movlw	1
  1486  0162  00AC               	movwf	??_toa
  1487  0163  082C               	movf	??_toa,w
  1488  0164  07AB               	addwf	toa@ptr,f
  1489  0165  293E               	goto	l2040
  1490  0166                     l2050:
  1491                           
  1492                           ;parkingCar.c: 74:     PEIE = 1;
  1493  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1494  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1495  0168  082B               	movf	toa@ptr,w
  1496  0169  0084               	movwf	4
  1497  016A  1383               	bcf	3,7	;select IRP bank0
  1498  016B  0180               	clrf	0
  1499  016C                     l2052:
  1500                           
  1501                           ;parkingCar.c: 75:     GIE = 1;
  1502  016C  082A               	movf	toa@value+1,w
  1503  016D  00B0               	movwf	toa@temp+1
  1504  016E  0829               	movf	toa@value,w
  1505  016F  00AF               	movwf	toa@temp
  1506  0170                     l2054:
  1507  0170  0830               	movf	toa@temp+1,w
  1508  0171  3A80               	xorlw	128
  1509  0172  00FF               	movwf	btemp+1
  1510  0173  3080               	movlw	128
  1511  0174  027F               	subwf	btemp+1,w
  1512  0175  1D03               	skipz
  1513  0176  2979               	goto	u1905
  1514  0177  3001               	movlw	1
  1515  0178  022F               	subwf	toa@temp,w
  1516  0179                     u1905:
  1517  0179  1803               	skipnc
  1518  017A  297C               	goto	u1901
  1519  017B  297D               	goto	u1900
  1520  017C                     u1901:
  1521  017C  297E               	goto	l2058
  1522  017D                     u1900:
  1523  017D  29B3               	goto	l221
  1524  017E                     l2058:
  1525                           
  1526                           ;parkingCar.c: 76: ;parkingCar.c: 77: 
  1527  017E  300A               	movlw	10
  1528  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1529  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1530  0181  00A0               	movwf	___awmod@divisor
  1531  0182  3000               	movlw	0
  1532  0183  00A1               	movwf	___awmod@divisor+1
  1533  0184  0830               	movf	toa@temp+1,w
  1534  0185  00A3               	movwf	___awmod@dividend+1
  1535  0186  082F               	movf	toa@temp,w
  1536  0187  00A2               	movwf	___awmod@dividend
  1537  0188  120A  118A  2281  120A  118A  	fcall	___awmod
  1538  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1539  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1540  018F  0820               	movf	?___awmod,w
  1541  0190  3E30               	addlw	48
  1542  0191  00AC               	movwf	??_toa
  1543  0192  3001               	movlw	1
  1544  0193  02AB               	subwf	toa@ptr,f
  1545  0194  082B               	movf	toa@ptr,w
  1546  0195  0084               	movwf	4
  1547  0196  082C               	movf	??_toa,w
  1548  0197  1383               	bcf	3,7	;select IRP bank0
  1549  0198  0080               	movwf	0
  1550  0199                     l2060:
  1551                           
  1552                           ;parkingCar.c: 78: 
  1553  0199  3001               	movlw	1
  1554  019A  07AD               	addwf	toa@count,f
  1555  019B  1803               	skipnc
  1556  019C  0AAE               	incf	toa@count+1,f
  1557  019D  3000               	movlw	0
  1558  019E  07AE               	addwf	toa@count+1,f
  1559  019F                     l2062:
  1560                           
  1561                           ;parkingCar.c: 79:     TMR1 = 0;
  1562  019F  300A               	movlw	10
  1563  01A0  00A0               	movwf	___awdiv@divisor
  1564  01A1  3000               	movlw	0
  1565  01A2  00A1               	movwf	___awdiv@divisor+1
  1566  01A3  0830               	movf	toa@temp+1,w
  1567  01A4  00A3               	movwf	___awdiv@dividend+1
  1568  01A5  082F               	movf	toa@temp,w
  1569  01A6  00A2               	movwf	___awdiv@dividend
  1570  01A7  120A  118A  21B4  120A  118A  	fcall	___awdiv
  1571  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1572  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1573  01AE  0821               	movf	?___awdiv+1,w
  1574  01AF  00B0               	movwf	toa@temp+1
  1575  01B0  0820               	movf	?___awdiv,w
  1576  01B1  00AF               	movwf	toa@temp
  1577  01B2  2970               	goto	l2054
  1578  01B3                     l221:
  1579  01B3  0008               	return
  1580  01B4                     __end_of_toa:
  1581                           
  1582                           	psect	text4
  1583  0536                     __ptext4:	
  1584 ;; *************** function ___wmul *****************
  1585 ;; Defined at:
  1586 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1589 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  product         2    4[BANK0 ] unsigned int 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  2    0[BANK0 ] unsigned int 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, status,0
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1601 ;;      Params:         0       4       0       0       0
  1602 ;;      Locals:         0       2       0       0       0
  1603 ;;      Temps:          0       0       0       0       0
  1604 ;;      Totals:         0       6       0       0       0
  1605 ;;Total ram usage:        6 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    2
  1608 ;; This function calls:
  1609 ;;		Nothing
  1610 ;; This function is called by:
  1611 ;;		_toa
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           
  1616                           ;psect for function ___wmul
  1617  0536                     ___wmul:
  1618  0536                     l1906:	
  1619                           ;incstack = 0
  1620                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1621                           
  1622  0536  1283               	bcf	3,5	;RP0=0, select bank0
  1623  0537  1303               	bcf	3,6	;RP1=0, select bank0
  1624  0538  01A4               	clrf	___wmul@product
  1625  0539  01A5               	clrf	___wmul@product+1
  1626  053A                     l1908:
  1627  053A  1C20               	btfss	___wmul@multiplier,0
  1628  053B  2D3D               	goto	u1581
  1629  053C  2D3E               	goto	u1580
  1630  053D                     u1581:
  1631  053D  2D44               	goto	l420
  1632  053E                     u1580:
  1633  053E                     l1910:
  1634  053E  0822               	movf	___wmul@multiplicand,w
  1635  053F  07A4               	addwf	___wmul@product,f
  1636  0540  1803               	skipnc
  1637  0541  0AA5               	incf	___wmul@product+1,f
  1638  0542  0823               	movf	___wmul@multiplicand+1,w
  1639  0543  07A5               	addwf	___wmul@product+1,f
  1640  0544                     l420:
  1641  0544  3001               	movlw	1
  1642  0545                     u1595:
  1643  0545  1003               	clrc
  1644  0546  0DA2               	rlf	___wmul@multiplicand,f
  1645  0547  0DA3               	rlf	___wmul@multiplicand+1,f
  1646  0548  3EFF               	addlw	-1
  1647  0549  1D03               	skipz
  1648  054A  2D45               	goto	u1595
  1649  054B                     l1912:
  1650  054B  3001               	movlw	1
  1651  054C                     u1605:
  1652  054C  1003               	clrc
  1653  054D  0CA1               	rrf	___wmul@multiplier+1,f
  1654  054E  0CA0               	rrf	___wmul@multiplier,f
  1655  054F  3EFF               	addlw	-1
  1656  0550  1D03               	skipz
  1657  0551  2D4C               	goto	u1605
  1658  0552                     l1914:
  1659  0552  0820               	movf	___wmul@multiplier,w
  1660  0553  0421               	iorwf	___wmul@multiplier+1,w
  1661  0554  1D03               	btfss	3,2
  1662  0555  2D57               	goto	u1611
  1663  0556  2D58               	goto	u1610
  1664  0557                     u1611:
  1665  0557  2D3A               	goto	l1908
  1666  0558                     u1610:
  1667  0558                     l1916:
  1668  0558  0825               	movf	___wmul@product+1,w
  1669  0559  00A1               	movwf	?___wmul+1
  1670  055A  0824               	movf	___wmul@product,w
  1671  055B  00A0               	movwf	?___wmul
  1672  055C                     l422:
  1673  055C  0008               	return
  1674  055D                     __end_of___wmul:
  1675                           
  1676                           	psect	text5
  1677  0281                     __ptext5:	
  1678 ;; *************** function ___awmod *****************
  1679 ;; Defined at:
  1680 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awmod.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  divisor         2    0[BANK0 ] int 
  1683 ;;  dividend        2    2[BANK0 ] int 
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  sign            1    6[BANK0 ] unsigned char 
  1686 ;;  counter         1    5[BANK0 ] unsigned char 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  2    0[BANK0 ] int 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1696 ;;      Params:         0       4       0       0       0
  1697 ;;      Locals:         0       2       0       0       0
  1698 ;;      Temps:          0       1       0       0       0
  1699 ;;      Totals:         0       7       0       0       0
  1700 ;;Total ram usage:        7 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    2
  1703 ;; This function calls:
  1704 ;;		Nothing
  1705 ;; This function is called by:
  1706 ;;		_toa
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           
  1711                           ;psect for function ___awmod
  1712  0281                     ___awmod:
  1713  0281                     l1964:	
  1714                           ;incstack = 0
  1715                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1716                           
  1717  0281  1283               	bcf	3,5	;RP0=0, select bank0
  1718  0282  1303               	bcf	3,6	;RP1=0, select bank0
  1719  0283  01A6               	clrf	___awmod@sign
  1720  0284                     l1966:
  1721  0284  1FA3               	btfss	___awmod@dividend+1,7
  1722  0285  2A87               	goto	u1721
  1723  0286  2A88               	goto	u1720
  1724  0287                     u1721:
  1725  0287  2A8F               	goto	l1972
  1726  0288                     u1720:
  1727  0288                     l1968:
  1728  0288  09A2               	comf	___awmod@dividend,f
  1729  0289  09A3               	comf	___awmod@dividend+1,f
  1730  028A  0AA2               	incf	___awmod@dividend,f
  1731  028B  1903               	skipnz
  1732  028C  0AA3               	incf	___awmod@dividend+1,f
  1733  028D                     l1970:
  1734  028D  01A6               	clrf	___awmod@sign
  1735  028E  0AA6               	incf	___awmod@sign,f
  1736  028F                     l1972:
  1737  028F  1FA1               	btfss	___awmod@divisor+1,7
  1738  0290  2A92               	goto	u1731
  1739  0291  2A93               	goto	u1730
  1740  0292                     u1731:
  1741  0292  2A98               	goto	l1976
  1742  0293                     u1730:
  1743  0293                     l1974:
  1744  0293  09A0               	comf	___awmod@divisor,f
  1745  0294  09A1               	comf	___awmod@divisor+1,f
  1746  0295  0AA0               	incf	___awmod@divisor,f
  1747  0296  1903               	skipnz
  1748  0297  0AA1               	incf	___awmod@divisor+1,f
  1749  0298                     l1976:
  1750  0298  0820               	movf	___awmod@divisor,w
  1751  0299  0421               	iorwf	___awmod@divisor+1,w
  1752  029A  1903               	btfsc	3,2
  1753  029B  2A9D               	goto	u1741
  1754  029C  2A9E               	goto	u1740
  1755  029D                     u1741:
  1756  029D  2ACD               	goto	l1994
  1757  029E                     u1740:
  1758  029E                     l1978:
  1759  029E  01A5               	clrf	___awmod@counter
  1760  029F  0AA5               	incf	___awmod@counter,f
  1761  02A0  2AAC               	goto	l1984
  1762  02A1                     l1980:
  1763  02A1  3001               	movlw	1
  1764  02A2                     u1755:
  1765  02A2  1003               	clrc
  1766  02A3  0DA0               	rlf	___awmod@divisor,f
  1767  02A4  0DA1               	rlf	___awmod@divisor+1,f
  1768  02A5  3EFF               	addlw	-1
  1769  02A6  1D03               	skipz
  1770  02A7  2AA2               	goto	u1755
  1771  02A8                     l1982:
  1772  02A8  3001               	movlw	1
  1773  02A9  00A4               	movwf	??___awmod
  1774  02AA  0824               	movf	??___awmod,w
  1775  02AB  07A5               	addwf	___awmod@counter,f
  1776  02AC                     l1984:
  1777  02AC  1FA1               	btfss	___awmod@divisor+1,7
  1778  02AD  2AAF               	goto	u1761
  1779  02AE  2AB0               	goto	u1760
  1780  02AF                     u1761:
  1781  02AF  2AA1               	goto	l1980
  1782  02B0                     u1760:
  1783  02B0                     l1986:
  1784  02B0  0821               	movf	___awmod@divisor+1,w
  1785  02B1  0223               	subwf	___awmod@dividend+1,w
  1786  02B2  1D03               	skipz
  1787  02B3  2AB6               	goto	u1775
  1788  02B4  0820               	movf	___awmod@divisor,w
  1789  02B5  0222               	subwf	___awmod@dividend,w
  1790  02B6                     u1775:
  1791  02B6  1C03               	skipc
  1792  02B7  2AB9               	goto	u1771
  1793  02B8  2ABA               	goto	u1770
  1794  02B9                     u1771:
  1795  02B9  2AC0               	goto	l1990
  1796  02BA                     u1770:
  1797  02BA                     l1988:
  1798  02BA  0820               	movf	___awmod@divisor,w
  1799  02BB  02A2               	subwf	___awmod@dividend,f
  1800  02BC  0821               	movf	___awmod@divisor+1,w
  1801  02BD  1C03               	skipc
  1802  02BE  03A3               	decf	___awmod@dividend+1,f
  1803  02BF  02A3               	subwf	___awmod@dividend+1,f
  1804  02C0                     l1990:
  1805  02C0  3001               	movlw	1
  1806  02C1                     u1785:
  1807  02C1  1003               	clrc
  1808  02C2  0CA1               	rrf	___awmod@divisor+1,f
  1809  02C3  0CA0               	rrf	___awmod@divisor,f
  1810  02C4  3EFF               	addlw	-1
  1811  02C5  1D03               	skipz
  1812  02C6  2AC1               	goto	u1785
  1813  02C7                     l1992:
  1814  02C7  3001               	movlw	1
  1815  02C8  02A5               	subwf	___awmod@counter,f
  1816  02C9  1D03               	btfss	3,2
  1817  02CA  2ACC               	goto	u1791
  1818  02CB  2ACD               	goto	u1790
  1819  02CC                     u1791:
  1820  02CC  2AB0               	goto	l1986
  1821  02CD                     u1790:
  1822  02CD                     l1994:
  1823  02CD  0826               	movf	___awmod@sign,w
  1824  02CE  1903               	btfsc	3,2
  1825  02CF  2AD1               	goto	u1801
  1826  02D0  2AD2               	goto	u1800
  1827  02D1                     u1801:
  1828  02D1  2AD7               	goto	l1998
  1829  02D2                     u1800:
  1830  02D2                     l1996:
  1831  02D2  09A2               	comf	___awmod@dividend,f
  1832  02D3  09A3               	comf	___awmod@dividend+1,f
  1833  02D4  0AA2               	incf	___awmod@dividend,f
  1834  02D5  1903               	skipnz
  1835  02D6  0AA3               	incf	___awmod@dividend+1,f
  1836  02D7                     l1998:
  1837  02D7  0823               	movf	___awmod@dividend+1,w
  1838  02D8  00A1               	movwf	?___awmod+1
  1839  02D9  0822               	movf	___awmod@dividend,w
  1840  02DA  00A0               	movwf	?___awmod
  1841  02DB                     l586:
  1842  02DB  0008               	return
  1843  02DC                     __end_of___awmod:
  1844                           
  1845                           	psect	text6
  1846  01B4                     __ptext6:	
  1847 ;; *************** function ___awdiv *****************
  1848 ;; Defined at:
  1849 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awdiv.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  divisor         2    0[BANK0 ] int 
  1852 ;;  dividend        2    2[BANK0 ] int 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  quotient        2    7[BANK0 ] int 
  1855 ;;  sign            1    6[BANK0 ] unsigned char 
  1856 ;;  counter         1    5[BANK0 ] unsigned char 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  2    0[BANK0 ] int 
  1859 ;; Registers used:
  1860 ;;		wreg, status,2, status,0
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1866 ;;      Params:         0       4       0       0       0
  1867 ;;      Locals:         0       4       0       0       0
  1868 ;;      Temps:          0       1       0       0       0
  1869 ;;      Totals:         0       9       0       0       0
  1870 ;;Total ram usage:        9 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:    2
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_toa
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           
  1881                           ;psect for function ___awdiv
  1882  01B4                     ___awdiv:
  1883  01B4                     l1920:	
  1884                           ;incstack = 0
  1885                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1886                           
  1887  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1888  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1889  01B6  01A6               	clrf	___awdiv@sign
  1890  01B7                     l1922:
  1891  01B7  1FA1               	btfss	___awdiv@divisor+1,7
  1892  01B8  29BA               	goto	u1621
  1893  01B9  29BB               	goto	u1620
  1894  01BA                     u1621:
  1895  01BA  29C2               	goto	l1928
  1896  01BB                     u1620:
  1897  01BB                     l1924:
  1898  01BB  09A0               	comf	___awdiv@divisor,f
  1899  01BC  09A1               	comf	___awdiv@divisor+1,f
  1900  01BD  0AA0               	incf	___awdiv@divisor,f
  1901  01BE  1903               	skipnz
  1902  01BF  0AA1               	incf	___awdiv@divisor+1,f
  1903  01C0                     l1926:
  1904  01C0  01A6               	clrf	___awdiv@sign
  1905  01C1  0AA6               	incf	___awdiv@sign,f
  1906  01C2                     l1928:
  1907  01C2  1FA3               	btfss	___awdiv@dividend+1,7
  1908  01C3  29C5               	goto	u1631
  1909  01C4  29C6               	goto	u1630
  1910  01C5                     u1631:
  1911  01C5  29CF               	goto	l1934
  1912  01C6                     u1630:
  1913  01C6                     l1930:
  1914  01C6  09A2               	comf	___awdiv@dividend,f
  1915  01C7  09A3               	comf	___awdiv@dividend+1,f
  1916  01C8  0AA2               	incf	___awdiv@dividend,f
  1917  01C9  1903               	skipnz
  1918  01CA  0AA3               	incf	___awdiv@dividend+1,f
  1919  01CB                     l1932:
  1920  01CB  3001               	movlw	1
  1921  01CC  00A4               	movwf	??___awdiv
  1922  01CD  0824               	movf	??___awdiv,w
  1923  01CE  06A6               	xorwf	___awdiv@sign,f
  1924  01CF                     l1934:
  1925  01CF  01A7               	clrf	___awdiv@quotient
  1926  01D0  01A8               	clrf	___awdiv@quotient+1
  1927  01D1                     l1936:
  1928  01D1  0820               	movf	___awdiv@divisor,w
  1929  01D2  0421               	iorwf	___awdiv@divisor+1,w
  1930  01D3  1903               	btfsc	3,2
  1931  01D4  29D6               	goto	u1641
  1932  01D5  29D7               	goto	u1640
  1933  01D6                     u1641:
  1934  01D6  2A0E               	goto	l1956
  1935  01D7                     u1640:
  1936  01D7                     l1938:
  1937  01D7  01A5               	clrf	___awdiv@counter
  1938  01D8  0AA5               	incf	___awdiv@counter,f
  1939  01D9  29E5               	goto	l1944
  1940  01DA                     l1940:
  1941  01DA  3001               	movlw	1
  1942  01DB                     u1655:
  1943  01DB  1003               	clrc
  1944  01DC  0DA0               	rlf	___awdiv@divisor,f
  1945  01DD  0DA1               	rlf	___awdiv@divisor+1,f
  1946  01DE  3EFF               	addlw	-1
  1947  01DF  1D03               	skipz
  1948  01E0  29DB               	goto	u1655
  1949  01E1                     l1942:
  1950  01E1  3001               	movlw	1
  1951  01E2  00A4               	movwf	??___awdiv
  1952  01E3  0824               	movf	??___awdiv,w
  1953  01E4  07A5               	addwf	___awdiv@counter,f
  1954  01E5                     l1944:
  1955  01E5  1FA1               	btfss	___awdiv@divisor+1,7
  1956  01E6  29E8               	goto	u1661
  1957  01E7  29E9               	goto	u1660
  1958  01E8                     u1661:
  1959  01E8  29DA               	goto	l1940
  1960  01E9                     u1660:
  1961  01E9                     l1946:
  1962  01E9  3001               	movlw	1
  1963  01EA                     u1675:
  1964  01EA  1003               	clrc
  1965  01EB  0DA7               	rlf	___awdiv@quotient,f
  1966  01EC  0DA8               	rlf	___awdiv@quotient+1,f
  1967  01ED  3EFF               	addlw	-1
  1968  01EE  1D03               	skipz
  1969  01EF  29EA               	goto	u1675
  1970  01F0  0821               	movf	___awdiv@divisor+1,w
  1971  01F1  0223               	subwf	___awdiv@dividend+1,w
  1972  01F2  1D03               	skipz
  1973  01F3  29F6               	goto	u1685
  1974  01F4  0820               	movf	___awdiv@divisor,w
  1975  01F5  0222               	subwf	___awdiv@dividend,w
  1976  01F6                     u1685:
  1977  01F6  1C03               	skipc
  1978  01F7  29F9               	goto	u1681
  1979  01F8  29FA               	goto	u1680
  1980  01F9                     u1681:
  1981  01F9  2A01               	goto	l1952
  1982  01FA                     u1680:
  1983  01FA                     l1948:
  1984  01FA  0820               	movf	___awdiv@divisor,w
  1985  01FB  02A2               	subwf	___awdiv@dividend,f
  1986  01FC  0821               	movf	___awdiv@divisor+1,w
  1987  01FD  1C03               	skipc
  1988  01FE  03A3               	decf	___awdiv@dividend+1,f
  1989  01FF  02A3               	subwf	___awdiv@dividend+1,f
  1990  0200                     l1950:
  1991  0200  1427               	bsf	___awdiv@quotient,0
  1992  0201                     l1952:
  1993  0201  3001               	movlw	1
  1994  0202                     u1695:
  1995  0202  1003               	clrc
  1996  0203  0CA1               	rrf	___awdiv@divisor+1,f
  1997  0204  0CA0               	rrf	___awdiv@divisor,f
  1998  0205  3EFF               	addlw	-1
  1999  0206  1D03               	skipz
  2000  0207  2A02               	goto	u1695
  2001  0208                     l1954:
  2002  0208  3001               	movlw	1
  2003  0209  02A5               	subwf	___awdiv@counter,f
  2004  020A  1D03               	btfss	3,2
  2005  020B  2A0D               	goto	u1701
  2006  020C  2A0E               	goto	u1700
  2007  020D                     u1701:
  2008  020D  29E9               	goto	l1946
  2009  020E                     u1700:
  2010  020E                     l1956:
  2011  020E  0826               	movf	___awdiv@sign,w
  2012  020F  1903               	btfsc	3,2
  2013  0210  2A12               	goto	u1711
  2014  0211  2A13               	goto	u1710
  2015  0212                     u1711:
  2016  0212  2A18               	goto	l1960
  2017  0213                     u1710:
  2018  0213                     l1958:
  2019  0213  09A7               	comf	___awdiv@quotient,f
  2020  0214  09A8               	comf	___awdiv@quotient+1,f
  2021  0215  0AA7               	incf	___awdiv@quotient,f
  2022  0216  1903               	skipnz
  2023  0217  0AA8               	incf	___awdiv@quotient+1,f
  2024  0218                     l1960:
  2025  0218  0828               	movf	___awdiv@quotient+1,w
  2026  0219  00A1               	movwf	?___awdiv+1
  2027  021A  0827               	movf	___awdiv@quotient,w
  2028  021B  00A0               	movwf	?___awdiv
  2029  021C                     l573:
  2030  021C  0008               	return
  2031  021D                     __end_of___awdiv:
  2032                           
  2033                           	psect	text7
  2034  0378                     __ptext7:	
  2035 ;; *************** function _Lcd8_Write_String *****************
  2036 ;; Defined at:
  2037 ;;		line 105 in file "./lcd.h"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  a               2    4[BANK0 ] PTR unsigned char 
  2040 ;;		 -> STR_7(5), STR_6(5), STR_5(9), checkGateStatus@string(20), 
  2041 ;;		 -> STR_4(8), STR_3(8), STR_2(8), 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  i               2    9[BANK0 ] int 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      void 
  2046 ;; Registers used:
  2047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2053 ;;      Params:         0       2       0       0       0
  2054 ;;      Locals:         0       2       0       0       0
  2055 ;;      Temps:          0       3       0       0       0
  2056 ;;      Totals:         0       7       0       0       0
  2057 ;;Total ram usage:        7 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    4
  2060 ;; This function calls:
  2061 ;;		_Lcd8_Write_Char
  2062 ;; This function is called by:
  2063 ;;		_checkGateStatus
  2064 ;;		_main
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           
  2069                           ;psect for function _Lcd8_Write_String
  2070  0378                     _Lcd8_Write_String:
  2071  0378                     l2010:	
  2072                           ;incstack = 0
  2073                           ; Regs used in _Lcd8_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2074                           
  2075                           
  2076                           ;./lcd.h: 105: void Lcd8_Write_String(char *a);./lcd.h: 106: {;./lcd.h: 107:  int i;;./l
      +                          cd.h: 108:  for(i=0;a[i]!='\0';i++)
  2077  0378  1283               	bcf	3,5	;RP0=0, select bank0
  2078  0379  1303               	bcf	3,6	;RP1=0, select bank0
  2079  037A  01A9               	clrf	Lcd8_Write_String@i
  2080  037B  01AA               	clrf	Lcd8_Write_String@i+1
  2081  037C  2BA1               	goto	l2016
  2082  037D                     l2012:
  2083                           
  2084                           ;./lcd.h: 109:   Lcd8_Write_Char(a[i]);
  2085  037D  0829               	movf	Lcd8_Write_String@i,w
  2086  037E  0724               	addwf	Lcd8_Write_String@a,w
  2087  037F  00A7               	movwf	??_Lcd8_Write_String+1
  2088  0380  0825               	movf	Lcd8_Write_String@a+1,w
  2089  0381  00A6               	movwf	??_Lcd8_Write_String
  2090  0382  1803               	skipnc
  2091  0383  0AA6               	incf	??_Lcd8_Write_String,f
  2092  0384  1FA9               	btfss	Lcd8_Write_String@i,7
  2093  0385  2B87               	goto	u1830
  2094  0386  03A6               	decf	??_Lcd8_Write_String,f
  2095  0387                     u1830:
  2096  0387  1283               	bcf	3,5	;RP0=0, select bank0
  2097  0388  1303               	bcf	3,6	;RP1=0, select bank0
  2098  0389  0826               	movf	??_Lcd8_Write_String,w
  2099  038A  00A8               	movwf	??_Lcd8_Write_String+2
  2100  038B  0828               	movf	??_Lcd8_Write_String+2,w
  2101  038C  00FF               	movwf	btemp+1
  2102  038D  0827               	movf	??_Lcd8_Write_String+1,w
  2103  038E  0084               	movwf	4
  2104  038F  120A  118A  2330  120A  118A  	fcall	stringtab
  2105  0394  120A  118A  257B  120A  118A  	fcall	_Lcd8_Write_Char
  2106  0399                     l2014:
  2107  0399  3001               	movlw	1
  2108  039A  1283               	bcf	3,5	;RP0=0, select bank0
  2109  039B  1303               	bcf	3,6	;RP1=0, select bank0
  2110  039C  07A9               	addwf	Lcd8_Write_String@i,f
  2111  039D  1803               	skipnc
  2112  039E  0AAA               	incf	Lcd8_Write_String@i+1,f
  2113  039F  3000               	movlw	0
  2114  03A0  07AA               	addwf	Lcd8_Write_String@i+1,f
  2115  03A1                     l2016:
  2116  03A1  0829               	movf	Lcd8_Write_String@i,w
  2117  03A2  0724               	addwf	Lcd8_Write_String@a,w
  2118  03A3  00A7               	movwf	??_Lcd8_Write_String+1
  2119  03A4  0825               	movf	Lcd8_Write_String@a+1,w
  2120  03A5  00A6               	movwf	??_Lcd8_Write_String
  2121  03A6  1803               	skipnc
  2122  03A7  0AA6               	incf	??_Lcd8_Write_String,f
  2123  03A8  1FA9               	btfss	Lcd8_Write_String@i,7
  2124  03A9  2BAB               	goto	u1840
  2125  03AA  03A6               	decf	??_Lcd8_Write_String,f
  2126  03AB                     u1840:
  2127  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2128  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2129  03AD  0826               	movf	??_Lcd8_Write_String,w
  2130  03AE  00A8               	movwf	??_Lcd8_Write_String+2
  2131  03AF  0828               	movf	??_Lcd8_Write_String+2,w
  2132  03B0  00FF               	movwf	btemp+1
  2133  03B1  0827               	movf	??_Lcd8_Write_String+1,w
  2134  03B2  0084               	movwf	4
  2135  03B3  120A  118A  2330  120A  118A  	fcall	stringtab
  2136  03B8  3A00               	xorlw	0
  2137  03B9  1D03               	skipz
  2138  03BA  2BBC               	goto	u1851
  2139  03BB  2BBD               	goto	u1850
  2140  03BC                     u1851:
  2141  03BC  2B7D               	goto	l2012
  2142  03BD                     u1850:
  2143  03BD                     l158:
  2144  03BD  0008               	return
  2145  03BE                     __end_of_Lcd8_Write_String:
  2146                           
  2147                           	psect	text8
  2148  057B                     __ptext8:	
  2149 ;; *************** function _Lcd8_Write_Char *****************
  2150 ;; Defined at:
  2151 ;;		line 96 in file "./lcd.h"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  a               1    wreg     unsigned char 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  a               1    3[BANK0 ] unsigned char 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, status,0, pclath, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2165 ;;      Params:         0       0       0       0       0
  2166 ;;      Locals:         0       1       0       0       0
  2167 ;;      Temps:          0       2       0       0       0
  2168 ;;      Totals:         0       3       0       0       0
  2169 ;;Total ram usage:        3 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:    3
  2172 ;; This function calls:
  2173 ;;		_Lcd8_Port
  2174 ;; This function is called by:
  2175 ;;		_Lcd8_Write_String
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           
  2180                           ;psect for function _Lcd8_Write_Char
  2181  057B                     _Lcd8_Write_Char:
  2182                           
  2183                           ;incstack = 0
  2184                           ; Regs used in _Lcd8_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2185                           ;Lcd8_Write_Char@a stored from wreg
  2186  057B  1283               	bcf	3,5	;RP0=0, select bank0
  2187  057C  1303               	bcf	3,6	;RP1=0, select bank0
  2188  057D  00A3               	movwf	Lcd8_Write_Char@a
  2189  057E                     l1896:
  2190                           
  2191                           ;./lcd.h: 96: void Lcd8_Write_Char(char a);./lcd.h: 97: {;./lcd.h: 98:    RC0 = 1;
  2192  057E  1407               	bsf	7,0	;volatile
  2193  057F                     l1898:
  2194                           
  2195                           ;./lcd.h: 99:    Lcd8_Port(a);
  2196  057F  0823               	movf	Lcd8_Write_Char@a,w
  2197  0580  120A  118A  2404  120A  118A  	fcall	_Lcd8_Port
  2198  0585                     l1900:
  2199                           
  2200                           ;./lcd.h: 100:    RC2 = 1;
  2201  0585  1283               	bcf	3,5	;RP0=0, select bank0
  2202  0586  1303               	bcf	3,6	;RP1=0, select bank0
  2203  0587  1507               	bsf	7,2	;volatile
  2204  0588                     l1902:
  2205                           
  2206                           ;./lcd.h: 101:   _delay((unsigned long)((4)*(16000000/4000.0)));
  2207  0588  3015               	movlw	21
  2208  0589  1283               	bcf	3,5	;RP0=0, select bank0
  2209  058A  1303               	bcf	3,6	;RP1=0, select bank0
  2210  058B  00A2               	movwf	??_Lcd8_Write_Char+1
  2211  058C  30C5               	movlw	197
  2212  058D  00A1               	movwf	??_Lcd8_Write_Char
  2213  058E                     u2147:
  2214  058E  0BA1               	decfsz	??_Lcd8_Write_Char,f
  2215  058F  2D8E               	goto	u2147
  2216  0590  0BA2               	decfsz	??_Lcd8_Write_Char+1,f
  2217  0591  2D8E               	goto	u2147
  2218  0592  2D93               	nop2
  2219  0593                     l1904:
  2220                           
  2221                           ;./lcd.h: 102:    RC2 = 0;
  2222  0593  1283               	bcf	3,5	;RP0=0, select bank0
  2223  0594  1303               	bcf	3,6	;RP1=0, select bank0
  2224  0595  1107               	bcf	7,2	;volatile
  2225  0596                     l152:
  2226  0596  0008               	return
  2227  0597                     __end_of_Lcd8_Write_Char:
  2228                           
  2229                           	psect	text9
  2230  055D                     __ptext9:	
  2231 ;; *************** function _Lcd8_Set_Cursor *****************
  2232 ;; Defined at:
  2233 ;;		line 70 in file "./lcd.h"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  a               1    wreg     unsigned char 
  2236 ;;  b               1    4[BANK0 ] unsigned char 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  a               1    5[BANK0 ] unsigned char 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg, status,2, status,0, pclath, cstack
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2248 ;;      Params:         0       1       0       0       0
  2249 ;;      Locals:         0       1       0       0       0
  2250 ;;      Temps:          0       0       0       0       0
  2251 ;;      Totals:         0       2       0       0       0
  2252 ;;Total ram usage:        2 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; Hardware stack levels required when called:    4
  2255 ;; This function calls:
  2256 ;;		_Lcd8_Cmd
  2257 ;; This function is called by:
  2258 ;;		_checkGateStatus
  2259 ;;		_main
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           
  2264                           ;psect for function _Lcd8_Set_Cursor
  2265  055D                     _Lcd8_Set_Cursor:
  2266                           
  2267                           ;incstack = 0
  2268                           ; Regs used in _Lcd8_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2269                           ;Lcd8_Set_Cursor@a stored from wreg
  2270  055D  1283               	bcf	3,5	;RP0=0, select bank0
  2271  055E  1303               	bcf	3,6	;RP1=0, select bank0
  2272  055F  00A5               	movwf	Lcd8_Set_Cursor@a
  2273  0560                     l2002:
  2274                           
  2275                           ;./lcd.h: 70: void Lcd8_Set_Cursor(char a, char b);./lcd.h: 71: {;./lcd.h: 72:  if(a == 
      +                          1)
  2276  0560  0325               	decf	Lcd8_Set_Cursor@a,w
  2277  0561  1D03               	btfss	3,2
  2278  0562  2D64               	goto	u1811
  2279  0563  2D65               	goto	u1810
  2280  0564                     u1811:
  2281  0564  2D6D               	goto	l2006
  2282  0565                     u1810:
  2283  0565                     l2004:
  2284                           
  2285                           ;./lcd.h: 73:    Lcd8_Cmd(0x80 + b);
  2286  0565  0824               	movf	Lcd8_Set_Cursor@b,w
  2287  0566  3E80               	addlw	128
  2288  0567  120A  118A  2597  120A  118A  	fcall	_Lcd8_Cmd
  2289  056C  2D7A               	goto	l146
  2290  056D                     l2006:
  2291  056D  3002               	movlw	2
  2292  056E  0625               	xorwf	Lcd8_Set_Cursor@a,w
  2293  056F  1D03               	btfss	3,2
  2294  0570  2D72               	goto	u1821
  2295  0571  2D73               	goto	u1820
  2296  0572                     u1821:
  2297  0572  2D7A               	goto	l146
  2298  0573                     u1820:
  2299  0573                     l2008:
  2300                           
  2301                           ;./lcd.h: 75:   Lcd8_Cmd(0xC0 + b);
  2302  0573  0824               	movf	Lcd8_Set_Cursor@b,w
  2303  0574  3EC0               	addlw	192
  2304  0575  120A  118A  2597  120A  118A  	fcall	_Lcd8_Cmd
  2305  057A                     l146:
  2306  057A  0008               	return
  2307  057B                     __end_of_Lcd8_Set_Cursor:
  2308                           
  2309                           	psect	text10
  2310  04D7                     __ptext10:	
  2311 ;; *************** function _adc *****************
  2312 ;; Defined at:
  2313 ;;		line 259 in file "parkingCar.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;		None
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  adcval          2   10[BANK0 ] unsigned int 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  2    8[BANK0 ] unsigned int 
  2320 ;; Registers used:
  2321 ;;		wreg, status,2, status,0, pclath, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2327 ;;      Params:         0       2       0       0       0
  2328 ;;      Locals:         0       2       0       0       0
  2329 ;;      Temps:          0       0       0       0       0
  2330 ;;      Totals:         0       4       0       0       0
  2331 ;;Total ram usage:        4 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:    3
  2334 ;; This function calls:
  2335 ;;		___lwdiv
  2336 ;; This function is called by:
  2337 ;;		_main
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           
  2342                           ;psect for function _adc
  2343  04D7                     _adc:
  2344  04D7                     l2134:	
  2345                           ;incstack = 0
  2346                           ; Regs used in _adc: [wreg+status,2+status,0+pclath+cstack]
  2347                           
  2348  04D7  30C0               	movlw	192
  2349  04D8  1683               	bsf	3,5	;RP0=1, select bank1
  2350  04D9  1303               	bcf	3,6	;RP1=0, select bank1
  2351  04DA  009F               	movwf	31	;volatile
  2352  04DB  3085               	movlw	133
  2353  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  2354  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  2355  04DE  009F               	movwf	31	;volatile
  2356  04DF                     l294:
  2357  04DF  191F               	btfsc	31,2	;volatile
  2358  04E0  2CE2               	goto	u2001
  2359  04E1  2CE3               	goto	u2000
  2360  04E2                     u2001:
  2361  04E2  2CDF               	goto	l294
  2362  04E3                     u2000:
  2363  04E3                     l2136:
  2364  04E3  081E               	movf	30,w	;volatile
  2365  04E4  00AB               	movwf	adc@adcval+1
  2366  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  2367  04E6  1303               	bcf	3,6	;RP1=0, select bank1
  2368  04E7  081E               	movf	30,w	;volatile
  2369  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2370  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  2371  04EA  00AA               	movwf	adc@adcval
  2372  04EB                     l2138:
  2373  04EB  3003               	movlw	3
  2374  04EC  00A0               	movwf	___lwdiv@divisor
  2375  04ED  3000               	movlw	0
  2376  04EE  00A1               	movwf	___lwdiv@divisor+1
  2377  04EF  082B               	movf	adc@adcval+1,w
  2378  04F0  00A3               	movwf	___lwdiv@dividend+1
  2379  04F1  082A               	movf	adc@adcval,w
  2380  04F2  00A2               	movwf	___lwdiv@dividend
  2381  04F3  120A  118A  23BE  120A  118A  	fcall	___lwdiv
  2382  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  2383  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  2384  04FA  0820               	movf	?___lwdiv,w
  2385  04FB  3EFF               	addlw	255
  2386  04FC  00AA               	movwf	adc@adcval
  2387  04FD  0821               	movf	?___lwdiv+1,w
  2388  04FE  1803               	skipnc
  2389  04FF  3E01               	addlw	1
  2390  0500  3EFF               	addlw	255
  2391  0501  00AB               	movwf	adc@adcval+1
  2392  0502                     l2140:
  2393  0502  082B               	movf	adc@adcval+1,w
  2394  0503  00A9               	movwf	?_adc+1
  2395  0504  082A               	movf	adc@adcval,w
  2396  0505  00A8               	movwf	?_adc
  2397  0506                     l297:
  2398  0506  0008               	return
  2399  0507                     __end_of_adc:
  2400                           
  2401                           	psect	text11
  2402  03BE                     __ptext11:	
  2403 ;; *************** function ___lwdiv *****************
  2404 ;; Defined at:
  2405 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;  divisor         2    0[BANK0 ] unsigned int 
  2408 ;;  dividend        2    2[BANK0 ] unsigned int 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  quotient        2    6[BANK0 ] unsigned int 
  2411 ;;  counter         1    5[BANK0 ] unsigned char 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  2    0[BANK0 ] unsigned int 
  2414 ;; Registers used:
  2415 ;;		wreg, status,2, status,0
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2421 ;;      Params:         0       4       0       0       0
  2422 ;;      Locals:         0       3       0       0       0
  2423 ;;      Temps:          0       1       0       0       0
  2424 ;;      Totals:         0       8       0       0       0
  2425 ;;Total ram usage:        8 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; Hardware stack levels required when called:    2
  2428 ;; This function calls:
  2429 ;;		Nothing
  2430 ;; This function is called by:
  2431 ;;		_adc
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           
  2436                           ;psect for function ___lwdiv
  2437  03BE                     ___lwdiv:
  2438  03BE                     l2066:	
  2439                           ;incstack = 0
  2440                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2441                           
  2442  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2443  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2444  03C0  01A6               	clrf	___lwdiv@quotient
  2445  03C1  01A7               	clrf	___lwdiv@quotient+1
  2446  03C2                     l2068:
  2447  03C2  0820               	movf	___lwdiv@divisor,w
  2448  03C3  0421               	iorwf	___lwdiv@divisor+1,w
  2449  03C4  1903               	btfsc	3,2
  2450  03C5  2BC7               	goto	u1911
  2451  03C6  2BC8               	goto	u1910
  2452  03C7                     u1911:
  2453  03C7  2BFF               	goto	l2088
  2454  03C8                     u1910:
  2455  03C8                     l2070:
  2456  03C8  01A5               	clrf	___lwdiv@counter
  2457  03C9  0AA5               	incf	___lwdiv@counter,f
  2458  03CA  2BD6               	goto	l2076
  2459  03CB                     l2072:
  2460  03CB  3001               	movlw	1
  2461  03CC                     u1925:
  2462  03CC  1003               	clrc
  2463  03CD  0DA0               	rlf	___lwdiv@divisor,f
  2464  03CE  0DA1               	rlf	___lwdiv@divisor+1,f
  2465  03CF  3EFF               	addlw	-1
  2466  03D0  1D03               	skipz
  2467  03D1  2BCC               	goto	u1925
  2468  03D2                     l2074:
  2469  03D2  3001               	movlw	1
  2470  03D3  00A4               	movwf	??___lwdiv
  2471  03D4  0824               	movf	??___lwdiv,w
  2472  03D5  07A5               	addwf	___lwdiv@counter,f
  2473  03D6                     l2076:
  2474  03D6  1FA1               	btfss	___lwdiv@divisor+1,7
  2475  03D7  2BD9               	goto	u1931
  2476  03D8  2BDA               	goto	u1930
  2477  03D9                     u1931:
  2478  03D9  2BCB               	goto	l2072
  2479  03DA                     u1930:
  2480  03DA                     l2078:
  2481  03DA  3001               	movlw	1
  2482  03DB                     u1945:
  2483  03DB  1003               	clrc
  2484  03DC  0DA6               	rlf	___lwdiv@quotient,f
  2485  03DD  0DA7               	rlf	___lwdiv@quotient+1,f
  2486  03DE  3EFF               	addlw	-1
  2487  03DF  1D03               	skipz
  2488  03E0  2BDB               	goto	u1945
  2489  03E1  0821               	movf	___lwdiv@divisor+1,w
  2490  03E2  0223               	subwf	___lwdiv@dividend+1,w
  2491  03E3  1D03               	skipz
  2492  03E4  2BE7               	goto	u1955
  2493  03E5  0820               	movf	___lwdiv@divisor,w
  2494  03E6  0222               	subwf	___lwdiv@dividend,w
  2495  03E7                     u1955:
  2496  03E7  1C03               	skipc
  2497  03E8  2BEA               	goto	u1951
  2498  03E9  2BEB               	goto	u1950
  2499  03EA                     u1951:
  2500  03EA  2BF2               	goto	l2084
  2501  03EB                     u1950:
  2502  03EB                     l2080:
  2503  03EB  0820               	movf	___lwdiv@divisor,w
  2504  03EC  02A2               	subwf	___lwdiv@dividend,f
  2505  03ED  0821               	movf	___lwdiv@divisor+1,w
  2506  03EE  1C03               	skipc
  2507  03EF  03A3               	decf	___lwdiv@dividend+1,f
  2508  03F0  02A3               	subwf	___lwdiv@dividend+1,f
  2509  03F1                     l2082:
  2510  03F1  1426               	bsf	___lwdiv@quotient,0
  2511  03F2                     l2084:
  2512  03F2  3001               	movlw	1
  2513  03F3                     u1965:
  2514  03F3  1003               	clrc
  2515  03F4  0CA1               	rrf	___lwdiv@divisor+1,f
  2516  03F5  0CA0               	rrf	___lwdiv@divisor,f
  2517  03F6  3EFF               	addlw	-1
  2518  03F7  1D03               	skipz
  2519  03F8  2BF3               	goto	u1965
  2520  03F9                     l2086:
  2521  03F9  3001               	movlw	1
  2522  03FA  02A5               	subwf	___lwdiv@counter,f
  2523  03FB  1D03               	btfss	3,2
  2524  03FC  2BFE               	goto	u1971
  2525  03FD  2BFF               	goto	u1970
  2526  03FE                     u1971:
  2527  03FE  2BDA               	goto	l2078
  2528  03FF                     u1970:
  2529  03FF                     l2088:
  2530  03FF  0827               	movf	___lwdiv@quotient+1,w
  2531  0400  00A1               	movwf	?___lwdiv+1
  2532  0401  0826               	movf	___lwdiv@quotient,w
  2533  0402  00A0               	movwf	?___lwdiv
  2534  0403                     l692:
  2535  0403  0008               	return
  2536  0404                     __end_of___lwdiv:
  2537                           
  2538                           	psect	text12
  2539  0440                     __ptext12:	
  2540 ;; *************** function _Rotation90 *****************
  2541 ;; Defined at:
  2542 ;;		line 229 in file "parkingCar.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;		None
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  i               2    2[BANK0 ] unsigned int 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2556 ;;      Params:         0       0       0       0       0
  2557 ;;      Locals:         0       2       0       0       0
  2558 ;;      Temps:          0       2       0       0       0
  2559 ;;      Totals:         0       4       0       0       0
  2560 ;;Total ram usage:        4 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    2
  2563 ;; This function calls:
  2564 ;;		Nothing
  2565 ;; This function is called by:
  2566 ;;		_main
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           
  2571                           ;psect for function _Rotation90
  2572  0440                     _Rotation90:
  2573  0440                     l2144:	
  2574                           ;incstack = 0
  2575                           ; Regs used in _Rotation90: [wreg+status,2]
  2576                           
  2577  0440  1283               	bcf	3,5	;RP0=0, select bank0
  2578  0441  1303               	bcf	3,6	;RP1=0, select bank0
  2579  0442  01A2               	clrf	Rotation90@i
  2580  0443  01A3               	clrf	Rotation90@i+1
  2581  0444                     l281:
  2582  0444  1486               	bsf	6,1	;volatile
  2583  0445                     l2150:
  2584  0445  300B               	movlw	11
  2585  0446  1283               	bcf	3,5	;RP0=0, select bank0
  2586  0447  1303               	bcf	3,6	;RP1=0, select bank0
  2587  0448  00A1               	movwf	??_Rotation90+1
  2588  0449  301F               	movlw	31
  2589  044A  00A0               	movwf	??_Rotation90
  2590  044B                     u2157:
  2591  044B  0BA0               	decfsz	??_Rotation90,f
  2592  044C  2C4B               	goto	u2157
  2593  044D  0BA1               	decfsz	??_Rotation90+1,f
  2594  044E  2C4B               	goto	u2157
  2595  044F                     l2152:
  2596  044F  1283               	bcf	3,5	;RP0=0, select bank0
  2597  0450  1303               	bcf	3,6	;RP1=0, select bank0
  2598  0451  1086               	bcf	6,1	;volatile
  2599  0452  305E               	movlw	94
  2600  0453  1283               	bcf	3,5	;RP0=0, select bank0
  2601  0454  1303               	bcf	3,6	;RP1=0, select bank0
  2602  0455  00A1               	movwf	??_Rotation90+1
  2603  0456  30C2               	movlw	194
  2604  0457  00A0               	movwf	??_Rotation90
  2605  0458                     u2167:
  2606  0458  0BA0               	decfsz	??_Rotation90,f
  2607  0459  2C58               	goto	u2167
  2608  045A  0BA1               	decfsz	??_Rotation90+1,f
  2609  045B  2C58               	goto	u2167
  2610  045C  0000               	nop
  2611  045D  3001               	movlw	1
  2612  045E  1283               	bcf	3,5	;RP0=0, select bank0
  2613  045F  1303               	bcf	3,6	;RP1=0, select bank0
  2614  0460  07A2               	addwf	Rotation90@i,f
  2615  0461  1803               	skipnc
  2616  0462  0AA3               	incf	Rotation90@i+1,f
  2617  0463  3000               	movlw	0
  2618  0464  07A3               	addwf	Rotation90@i+1,f
  2619  0465  3000               	movlw	0
  2620  0466  0223               	subwf	Rotation90@i+1,w
  2621  0467  3032               	movlw	50
  2622  0468  1903               	skipnz
  2623  0469  0222               	subwf	Rotation90@i,w
  2624  046A  1C03               	skipc
  2625  046B  2C6D               	goto	u2011
  2626  046C  2C6E               	goto	u2010
  2627  046D                     u2011:
  2628  046D  2C44               	goto	l281
  2629  046E                     u2010:
  2630  046E                     l2154:
  2631  046E  3001               	movlw	1
  2632  046F  00C7               	movwf	_isOpened
  2633  0470  3000               	movlw	0
  2634  0471  00C8               	movwf	_isOpened+1
  2635  0472                     l283:
  2636  0472  0008               	return
  2637  0473                     __end_of_Rotation90:
  2638                           
  2639                           	psect	text13
  2640  04A6                     __ptext13:	
  2641 ;; *************** function _Rotation0 *****************
  2642 ;; Defined at:
  2643 ;;		line 216 in file "parkingCar.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;		None
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  i               2    2[BANK0 ] unsigned int 
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      void 
  2650 ;; Registers used:
  2651 ;;		wreg, status,2
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2657 ;;      Params:         0       0       0       0       0
  2658 ;;      Locals:         0       2       0       0       0
  2659 ;;      Temps:          0       2       0       0       0
  2660 ;;      Totals:         0       4       0       0       0
  2661 ;;Total ram usage:        4 bytes
  2662 ;; Hardware stack levels used:    1
  2663 ;; Hardware stack levels required when called:    2
  2664 ;; This function calls:
  2665 ;;		Nothing
  2666 ;; This function is called by:
  2667 ;;		_main
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           
  2672                           ;psect for function _Rotation0
  2673  04A6                     _Rotation0:
  2674  04A6                     l2156:	
  2675                           ;incstack = 0
  2676                           ; Regs used in _Rotation0: [wreg+status,2]
  2677                           
  2678                           
  2679                           ;parkingCar.c: 218:     ADCON0=0x85;;parkingCar.c: 219:     while(GO_nDONE);
  2680  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  2681  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  2682  04A8  01A2               	clrf	Rotation0@i
  2683  04A9  01A3               	clrf	Rotation0@i+1
  2684  04AA                     l276:
  2685                           
  2686                           ;parkingCar.c: 220:     adcval=((ADRESH<<8)|(ADRESL));;parkingCar.c: 221:     adcval=(ad
      +                          cval/3)-1;
  2687  04AA  1486               	bsf	6,1	;volatile
  2688  04AB                     l2162:
  2689                           
  2690                           ;parkingCar.c: 222: 
  2691  04AB  3005               	movlw	5
  2692  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2693  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  2694  04AE  00A1               	movwf	??_Rotation0+1
  2695  04AF  30AB               	movlw	171
  2696  04B0  00A0               	movwf	??_Rotation0
  2697  04B1                     u2177:
  2698  04B1  0BA0               	decfsz	??_Rotation0,f
  2699  04B2  2CB1               	goto	u2177
  2700  04B3  0BA1               	decfsz	??_Rotation0+1,f
  2701  04B4  2CB1               	goto	u2177
  2702  04B5                     l2164:
  2703                           
  2704                           ;parkingCar.c: 223:     return adcval;
  2705  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  2706  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  2707  04B7  1086               	bcf	6,1	;volatile
  2708                           
  2709                           ;parkingCar.c: 224: }
  2710  04B8  3064               	movlw	100
  2711  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  2712  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  2713  04BB  00A1               	movwf	??_Rotation0+1
  2714  04BC  3036               	movlw	54
  2715  04BD  00A0               	movwf	??_Rotation0
  2716  04BE                     u2187:
  2717  04BE  0BA0               	decfsz	??_Rotation0,f
  2718  04BF  2CBE               	goto	u2187
  2719  04C0  0BA1               	decfsz	??_Rotation0+1,f
  2720  04C1  2CBE               	goto	u2187
  2721  04C2  0000               	nop
  2722  04C3  3001               	movlw	1
  2723  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  2724  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  2725  04C6  07A2               	addwf	Rotation0@i,f
  2726  04C7  1803               	skipnc
  2727  04C8  0AA3               	incf	Rotation0@i+1,f
  2728  04C9  3000               	movlw	0
  2729  04CA  07A3               	addwf	Rotation0@i+1,f
  2730  04CB  3000               	movlw	0
  2731  04CC  0223               	subwf	Rotation0@i+1,w
  2732  04CD  3032               	movlw	50
  2733  04CE  1903               	skipnz
  2734  04CF  0222               	subwf	Rotation0@i,w
  2735  04D0  1C03               	skipc
  2736  04D1  2CD3               	goto	u2021
  2737  04D2  2CD4               	goto	u2020
  2738  04D3                     u2021:
  2739  04D3  2CAA               	goto	l276
  2740  04D4                     u2020:
  2741  04D4                     l2166:
  2742  04D4  01C7               	clrf	_isOpened
  2743  04D5  01C8               	clrf	_isOpened+1
  2744  04D6                     l278:
  2745  04D6  0008               	return
  2746  04D7                     __end_of_Rotation0:
  2747                           
  2748                           	psect	text14
  2749  02DC                     __ptext14:	
  2750 ;; *************** function _Lcd8_Init *****************
  2751 ;; Defined at:
  2752 ;;		line 78 in file "./lcd.h"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg, status,2, status,0, pclath, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2766 ;;      Params:         0       0       0       0       0
  2767 ;;      Locals:         0       0       0       0       0
  2768 ;;      Temps:          0       2       0       0       0
  2769 ;;      Totals:         0       2       0       0       0
  2770 ;;Total ram usage:        2 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    4
  2773 ;; This function calls:
  2774 ;;		_Lcd8_Cmd
  2775 ;;		_Lcd8_Port
  2776 ;; This function is called by:
  2777 ;;		_main
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           
  2782                           ;psect for function _Lcd8_Init
  2783  02DC                     _Lcd8_Init:
  2784  02DC                     l2092:	
  2785                           ;incstack = 0
  2786                           ; Regs used in _Lcd8_Init: [wreg+status,2+status,0+pclath+cstack]
  2787                           
  2788                           
  2789                           ;./lcd.h: 80:  Lcd8_Port(0x00);
  2790  02DC  3000               	movlw	0
  2791  02DD  120A  118A  2404  120A  118A  	fcall	_Lcd8_Port
  2792  02E2                     l2094:
  2793                           
  2794                           ;./lcd.h: 81:  RC0 = 0;
  2795  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2796  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2797  02E4  1007               	bcf	7,0	;volatile
  2798  02E5                     l2096:
  2799                           
  2800                           ;./lcd.h: 82:  _delay((unsigned long)((25)*(16000000/4000.0)));
  2801  02E5  3082               	movlw	130
  2802  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  2803  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  2804  02E8  00A5               	movwf	??_Lcd8_Init+1
  2805  02E9  30DD               	movlw	221
  2806  02EA  00A4               	movwf	??_Lcd8_Init
  2807  02EB                     u2197:
  2808  02EB  0BA4               	decfsz	??_Lcd8_Init,f
  2809  02EC  2AEB               	goto	u2197
  2810  02ED  0BA5               	decfsz	??_Lcd8_Init+1,f
  2811  02EE  2AEB               	goto	u2197
  2812  02EF                     l2098:
  2813                           
  2814                           ;./lcd.h: 84:   Lcd8_Cmd(0x30);
  2815  02EF  3030               	movlw	48
  2816  02F0  120A  118A  2597  120A  118A  	fcall	_Lcd8_Cmd
  2817                           
  2818                           ;./lcd.h: 85: _delay((unsigned long)((5)*(16000000/4000.0)));
  2819  02F5  301A               	movlw	26
  2820  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  2821  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  2822  02F8  00A5               	movwf	??_Lcd8_Init+1
  2823  02F9  30F7               	movlw	247
  2824  02FA  00A4               	movwf	??_Lcd8_Init
  2825  02FB                     u2207:
  2826  02FB  0BA4               	decfsz	??_Lcd8_Init,f
  2827  02FC  2AFB               	goto	u2207
  2828  02FD  0BA5               	decfsz	??_Lcd8_Init+1,f
  2829  02FE  2AFB               	goto	u2207
  2830  02FF  2B00               	nop2
  2831  0300                     l2100:
  2832                           
  2833                           ;./lcd.h: 86:   Lcd8_Cmd(0x30);
  2834  0300  3030               	movlw	48
  2835  0301  120A  118A  2597  120A  118A  	fcall	_Lcd8_Cmd
  2836  0306                     l2102:
  2837                           
  2838                           ;./lcd.h: 87:  _delay((unsigned long)((15)*(16000000/4000.0)));
  2839  0306  304E               	movlw	78
  2840  0307  1283               	bcf	3,5	;RP0=0, select bank0
  2841  0308  1303               	bcf	3,6	;RP1=0, select bank0
  2842  0309  00A5               	movwf	??_Lcd8_Init+1
  2843  030A  30EA               	movlw	234
  2844  030B  00A4               	movwf	??_Lcd8_Init
  2845  030C                     u2217:
  2846  030C  0BA4               	decfsz	??_Lcd8_Init,f
  2847  030D  2B0C               	goto	u2217
  2848  030E  0BA5               	decfsz	??_Lcd8_Init+1,f
  2849  030F  2B0C               	goto	u2217
  2850  0310  0000               	nop
  2851                           
  2852                           ;./lcd.h: 88:   Lcd8_Cmd(0x30);
  2853  0311  3030               	movlw	48
  2854  0312  120A  118A  2597  120A  118A  	fcall	_Lcd8_Cmd
  2855                           
  2856                           ;./lcd.h: 90:   Lcd8_Cmd(0x38);
  2857  0317  3038               	movlw	56
  2858  0318  120A  118A  2597  120A  118A  	fcall	_Lcd8_Cmd
  2859                           
  2860                           ;./lcd.h: 91:   Lcd8_Cmd(0x0C);
  2861  031D  300C               	movlw	12
  2862  031E  120A  118A  2597  120A  118A  	fcall	_Lcd8_Cmd
  2863                           
  2864                           ;./lcd.h: 92:   Lcd8_Cmd(0x01);
  2865  0323  3001               	movlw	1
  2866  0324  120A  118A  2597  120A  118A  	fcall	_Lcd8_Cmd
  2867                           
  2868                           ;./lcd.h: 93:   Lcd8_Cmd(0x06);
  2869  0329  3006               	movlw	6
  2870  032A  120A  118A  2597  120A  118A  	fcall	_Lcd8_Cmd
  2871  032F                     l149:
  2872  032F  0008               	return
  2873  0330                     __end_of_Lcd8_Init:
  2874                           
  2875                           	psect	text15
  2876  0597                     __ptext15:	
  2877 ;; *************** function _Lcd8_Cmd *****************
  2878 ;; Defined at:
  2879 ;;		line 56 in file "./lcd.h"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  a               1    wreg     unsigned char 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;  a               1    3[BANK0 ] unsigned char 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  1    wreg      void 
  2886 ;; Registers used:
  2887 ;;		wreg, status,2, status,0, pclath, cstack
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2893 ;;      Params:         0       0       0       0       0
  2894 ;;      Locals:         0       1       0       0       0
  2895 ;;      Temps:          0       2       0       0       0
  2896 ;;      Totals:         0       3       0       0       0
  2897 ;;Total ram usage:        3 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; Hardware stack levels required when called:    3
  2900 ;; This function calls:
  2901 ;;		_Lcd8_Port
  2902 ;; This function is called by:
  2903 ;;		_Lcd8_Set_Cursor
  2904 ;;		_Lcd8_Init
  2905 ;;		_Lcd8_Clear
  2906 ;;		_Lcd8_Shift_Right
  2907 ;;		_Lcd8_Shift_Left
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           
  2912                           ;psect for function _Lcd8_Cmd
  2913  0597                     _Lcd8_Cmd:
  2914                           
  2915                           ;incstack = 0
  2916                           ; Regs used in _Lcd8_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2917                           ;Lcd8_Cmd@a stored from wreg
  2918  0597  1283               	bcf	3,5	;RP0=0, select bank0
  2919  0598  1303               	bcf	3,6	;RP1=0, select bank0
  2920  0599  00A3               	movwf	Lcd8_Cmd@a
  2921  059A                     l1886:
  2922                           
  2923                           ;./lcd.h: 56: void Lcd8_Cmd(char a);./lcd.h: 57: {;./lcd.h: 58:   RC0 = 0;
  2924  059A  1007               	bcf	7,0	;volatile
  2925  059B                     l1888:
  2926                           
  2927                           ;./lcd.h: 59:   Lcd8_Port(a);
  2928  059B  0823               	movf	Lcd8_Cmd@a,w
  2929  059C  120A  118A  2404  120A  118A  	fcall	_Lcd8_Port
  2930  05A1                     l1890:
  2931                           
  2932                           ;./lcd.h: 60:   RC2 = 1;
  2933  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2934  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2935  05A3  1507               	bsf	7,2	;volatile
  2936  05A4                     l1892:
  2937                           
  2938                           ;./lcd.h: 61:   _delay((unsigned long)((5)*(16000000/4000.0)));
  2939  05A4  301A               	movlw	26
  2940  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  2941  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  2942  05A7  00A2               	movwf	??_Lcd8_Cmd+1
  2943  05A8  30F7               	movlw	247
  2944  05A9  00A1               	movwf	??_Lcd8_Cmd
  2945  05AA                     u2227:
  2946  05AA  0BA1               	decfsz	??_Lcd8_Cmd,f
  2947  05AB  2DAA               	goto	u2227
  2948  05AC  0BA2               	decfsz	??_Lcd8_Cmd+1,f
  2949  05AD  2DAA               	goto	u2227
  2950  05AE  2DAF               	nop2
  2951  05AF                     l1894:
  2952                           
  2953                           ;./lcd.h: 62:   RC2 = 0;
  2954  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  2955  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  2956  05B1  1107               	bcf	7,2	;volatile
  2957  05B2                     l137:
  2958  05B2  0008               	return
  2959  05B3                     __end_of_Lcd8_Cmd:
  2960                           
  2961                           	psect	text16
  2962  0404                     __ptext16:	
  2963 ;; *************** function _Lcd8_Port *****************
  2964 ;; Defined at:
  2965 ;;		line 14 in file "./lcd.h"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  a               1    wreg     unsigned char 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;  a               1    0[BANK0 ] unsigned char 
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2979 ;;      Params:         0       0       0       0       0
  2980 ;;      Locals:         0       1       0       0       0
  2981 ;;      Temps:          0       0       0       0       0
  2982 ;;      Totals:         0       1       0       0       0
  2983 ;;Total ram usage:        1 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; Hardware stack levels required when called:    2
  2986 ;; This function calls:
  2987 ;;		Nothing
  2988 ;; This function is called by:
  2989 ;;		_Lcd8_Cmd
  2990 ;;		_Lcd8_Init
  2991 ;;		_Lcd8_Write_Char
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           
  2996                           ;psect for function _Lcd8_Port
  2997  0404                     _Lcd8_Port:
  2998                           
  2999                           ;incstack = 0
  3000                           ; Regs used in _Lcd8_Port: [wreg]
  3001                           ;Lcd8_Port@a stored from wreg
  3002  0404  1283               	bcf	3,5	;RP0=0, select bank0
  3003  0405  1303               	bcf	3,6	;RP1=0, select bank0
  3004  0406  00A0               	movwf	Lcd8_Port@a
  3005  0407                     l1868:
  3006                           
  3007                           ;./lcd.h: 14: void Lcd8_Port(char a);./lcd.h: 15: {;./lcd.h: 16:  if(a & 1)
  3008  0407  1C20               	btfss	Lcd8_Port@a,0
  3009  0408  2C0A               	goto	u1501
  3010  0409  2C0B               	goto	u1500
  3011  040A                     u1501:
  3012  040A  2C0D               	goto	l118
  3013  040B                     u1500:
  3014  040B                     l1870:
  3015                           
  3016                           ;./lcd.h: 17:   RD0 = 1;
  3017  040B  1408               	bsf	8,0	;volatile
  3018  040C  2C0E               	goto	l119
  3019  040D                     l118:	
  3020                           ;./lcd.h: 18:  else
  3021                           
  3022                           
  3023                           ;./lcd.h: 19:   RD0 = 0;
  3024  040D  1008               	bcf	8,0	;volatile
  3025  040E                     l119:
  3026                           
  3027                           ;./lcd.h: 21:  if(a & 2)
  3028  040E  1CA0               	btfss	Lcd8_Port@a,1
  3029  040F  2C11               	goto	u1511
  3030  0410  2C12               	goto	u1510
  3031  0411                     u1511:
  3032  0411  2C14               	goto	l120
  3033  0412                     u1510:
  3034  0412                     l1872:
  3035                           
  3036                           ;./lcd.h: 22:   RD1 = 1;
  3037  0412  1488               	bsf	8,1	;volatile
  3038  0413  2C15               	goto	l121
  3039  0414                     l120:	
  3040                           ;./lcd.h: 23:  else
  3041                           
  3042                           
  3043                           ;./lcd.h: 24:   RD1 = 0;
  3044  0414  1088               	bcf	8,1	;volatile
  3045  0415                     l121:
  3046                           
  3047                           ;./lcd.h: 26:  if(a & 4)
  3048  0415  1D20               	btfss	Lcd8_Port@a,2
  3049  0416  2C18               	goto	u1521
  3050  0417  2C19               	goto	u1520
  3051  0418                     u1521:
  3052  0418  2C1B               	goto	l122
  3053  0419                     u1520:
  3054  0419                     l1874:
  3055                           
  3056                           ;./lcd.h: 27:   RD2 = 1;
  3057  0419  1508               	bsf	8,2	;volatile
  3058  041A  2C1C               	goto	l123
  3059  041B                     l122:	
  3060                           ;./lcd.h: 28:  else
  3061                           
  3062                           
  3063                           ;./lcd.h: 29:   RD2 = 0;
  3064  041B  1108               	bcf	8,2	;volatile
  3065  041C                     l123:
  3066                           
  3067                           ;./lcd.h: 31:  if(a & 8)
  3068  041C  1DA0               	btfss	Lcd8_Port@a,3
  3069  041D  2C1F               	goto	u1531
  3070  041E  2C20               	goto	u1530
  3071  041F                     u1531:
  3072  041F  2C22               	goto	l124
  3073  0420                     u1530:
  3074  0420                     l1876:
  3075                           
  3076                           ;./lcd.h: 32:   RD3 = 1;
  3077  0420  1588               	bsf	8,3	;volatile
  3078  0421  2C23               	goto	l125
  3079  0422                     l124:	
  3080                           ;./lcd.h: 33:  else
  3081                           
  3082                           
  3083                           ;./lcd.h: 34:   RD3 = 0;
  3084  0422  1188               	bcf	8,3	;volatile
  3085  0423                     l125:
  3086                           
  3087                           ;./lcd.h: 36:  if(a & 16)
  3088  0423  1E20               	btfss	Lcd8_Port@a,4
  3089  0424  2C26               	goto	u1541
  3090  0425  2C27               	goto	u1540
  3091  0426                     u1541:
  3092  0426  2C29               	goto	l126
  3093  0427                     u1540:
  3094  0427                     l1878:
  3095                           
  3096                           ;./lcd.h: 37:   RD4 = 1;
  3097  0427  1608               	bsf	8,4	;volatile
  3098  0428  2C2A               	goto	l127
  3099  0429                     l126:	
  3100                           ;./lcd.h: 38:  else
  3101                           
  3102                           
  3103                           ;./lcd.h: 39:   RD4 = 0;
  3104  0429  1208               	bcf	8,4	;volatile
  3105  042A                     l127:
  3106                           
  3107                           ;./lcd.h: 41:  if(a & 32)
  3108  042A  1EA0               	btfss	Lcd8_Port@a,5
  3109  042B  2C2D               	goto	u1551
  3110  042C  2C2E               	goto	u1550
  3111  042D                     u1551:
  3112  042D  2C30               	goto	l128
  3113  042E                     u1550:
  3114  042E                     l1880:
  3115                           
  3116                           ;./lcd.h: 42:   RD5 = 1;
  3117  042E  1688               	bsf	8,5	;volatile
  3118  042F  2C31               	goto	l129
  3119  0430                     l128:	
  3120                           ;./lcd.h: 43:  else
  3121                           
  3122                           
  3123                           ;./lcd.h: 44:   RD5 = 0;
  3124  0430  1288               	bcf	8,5	;volatile
  3125  0431                     l129:
  3126                           
  3127                           ;./lcd.h: 46:  if(a & 64)
  3128  0431  1F20               	btfss	Lcd8_Port@a,6
  3129  0432  2C34               	goto	u1561
  3130  0433  2C35               	goto	u1560
  3131  0434                     u1561:
  3132  0434  2C37               	goto	l130
  3133  0435                     u1560:
  3134  0435                     l1882:
  3135                           
  3136                           ;./lcd.h: 47:   RD6 = 1;
  3137  0435  1708               	bsf	8,6	;volatile
  3138  0436  2C38               	goto	l131
  3139  0437                     l130:	
  3140                           ;./lcd.h: 48:  else
  3141                           
  3142                           
  3143                           ;./lcd.h: 49:   RD6 = 0;
  3144  0437  1308               	bcf	8,6	;volatile
  3145  0438                     l131:
  3146                           
  3147                           ;./lcd.h: 51:  if(a & 128)
  3148  0438  1FA0               	btfss	Lcd8_Port@a,7
  3149  0439  2C3B               	goto	u1571
  3150  043A  2C3C               	goto	u1570
  3151  043B                     u1571:
  3152  043B  2C3E               	goto	l132
  3153  043C                     u1570:
  3154  043C                     l1884:
  3155                           
  3156                           ;./lcd.h: 52:   RD7 = 1;
  3157  043C  1788               	bsf	8,7	;volatile
  3158  043D  2C3F               	goto	l134
  3159  043E                     l132:	
  3160                           ;./lcd.h: 53:  else
  3161                           
  3162                           
  3163                           ;./lcd.h: 54:   RD7 = 0;
  3164  043E  1388               	bcf	8,7	;volatile
  3165  043F                     l134:
  3166  043F  0008               	return
  3167  0440                     __end_of_Lcd8_Port:
  3168                           
  3169                           	psect	text17
  3170  0473                     __ptext17:	
  3171 ;; *************** function _ISR *****************
  3172 ;; Defined at:
  3173 ;;		line 242 in file "parkingCar.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;		None
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;		None
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  1    wreg      void 
  3180 ;; Registers used:
  3181 ;;		wreg, status,2, status,0, pclath, cstack
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3187 ;;      Params:         0       0       0       0       0
  3188 ;;      Locals:         0       0       0       0       0
  3189 ;;      Temps:          2       0       0       0       0
  3190 ;;      Totals:         2       0       0       0       0
  3191 ;;Total ram usage:        2 bytes
  3192 ;; Hardware stack levels used:    1
  3193 ;; Hardware stack levels required when called:    1
  3194 ;; This function calls:
  3195 ;;		i1_Rotation90
  3196 ;; This function is called by:
  3197 ;;		Interrupt level 1
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           
  3202                           ;psect for function _ISR
  3203  0473                     _ISR:
  3204  0473                     i1l1846:
  3205  0473  1C8B               	btfss	11,1	;volatile
  3206  0474  2C76               	goto	u147_21
  3207  0475  2C77               	goto	u147_20
  3208  0476                     u147_21:
  3209  0476  2C83               	goto	i1l1856
  3210  0477                     u147_20:
  3211  0477                     i1l1848:
  3212  0477  120A  118A  2507  120A  118A  	fcall	i1_Rotation90
  3213  047C                     i1l1850:
  3214  047C  1283               	bcf	3,5	;RP0=0, select bank0
  3215  047D  1303               	bcf	3,6	;RP1=0, select bank0
  3216  047E  01C9               	clrf	_lock
  3217  047F  01CA               	clrf	_lock+1
  3218  0480                     i1l1852:
  3219  0480  01CB               	clrf	_parkingTime
  3220  0481  01CC               	clrf	_parkingTime+1
  3221  0482                     i1l1854:
  3222  0482  108B               	bcf	11,1	;volatile
  3223  0483                     i1l1856:
  3224  0483  1283               	bcf	3,5	;RP0=0, select bank0
  3225  0484  1303               	bcf	3,6	;RP1=0, select bank0
  3226  0485  1C0C               	btfss	12,0	;volatile
  3227  0486  2C88               	goto	u148_21
  3228  0487  2C89               	goto	u148_20
  3229  0488                     u148_21:
  3230  0488  2C9F               	goto	i1l291
  3231  0489                     u148_20:
  3232  0489                     i1l1858:
  3233  0489  3001               	movlw	1
  3234  048A  07F8               	addwf	_counter,f
  3235  048B  1803               	skipnc
  3236  048C  0AF9               	incf	_counter+1,f
  3237  048D  3000               	movlw	0
  3238  048E  07F9               	addwf	_counter+1,f
  3239  048F                     i1l1860:
  3240  048F  303D               	movlw	61
  3241  0490  0678               	xorwf	_counter,w
  3242  0491  0479               	iorwf	_counter+1,w
  3243  0492  1D03               	btfss	3,2
  3244  0493  2C95               	goto	u149_21
  3245  0494  2C96               	goto	u149_20
  3246  0495                     u149_21:
  3247  0495  2C9E               	goto	i1l1866
  3248  0496                     u149_20:
  3249  0496                     i1l1862:
  3250  0496  3001               	movlw	1
  3251  0497  07CB               	addwf	_parkingTime,f
  3252  0498  1803               	skipnc
  3253  0499  0ACC               	incf	_parkingTime+1,f
  3254  049A  3000               	movlw	0
  3255  049B  07CC               	addwf	_parkingTime+1,f
  3256  049C                     i1l1864:
  3257  049C  01F8               	clrf	_counter
  3258  049D  01F9               	clrf	_counter+1
  3259  049E                     i1l1866:
  3260  049E  100C               	bcf	12,0	;volatile
  3261  049F                     i1l291:
  3262  049F  0875               	movf	??_ISR+1,w
  3263  04A0  008A               	movwf	10
  3264  04A1  0E74               	swapf	??_ISR,w
  3265  04A2  0083               	movwf	3
  3266  04A3  0EFE               	swapf	btemp,f
  3267  04A4  0E7E               	swapf	btemp,w
  3268  04A5  0009               	retfie
  3269  04A6                     __end_of_ISR:
  3270                           
  3271                           	psect	intentry
  3272  0004                     __pintentry:	
  3273                           ;incstack = 0
  3274                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  3275                           
  3276  0004                     interrupt_function:
  3277  007E                     saved_w	set	btemp
  3278  0004  00FE               	movwf	btemp
  3279  0005  0E03               	swapf	3,w
  3280  0006  00F4               	movwf	??_ISR
  3281  0007  080A               	movf	10,w
  3282  0008  00F5               	movwf	??_ISR+1
  3283  0009  120A  118A  2C73   	ljmp	_ISR
  3284                           
  3285                           	psect	text18
  3286  0507                     __ptext18:	
  3287 ;; *************** function i1_Rotation90 *****************
  3288 ;; Defined at:
  3289 ;;		line 229 in file "parkingCar.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;		None
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;  i               2    2[COMMON] unsigned int 
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      void 
  3296 ;; Registers used:
  3297 ;;		wreg, status,2
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3303 ;;      Params:         0       0       0       0       0
  3304 ;;      Locals:         2       0       0       0       0
  3305 ;;      Temps:          2       0       0       0       0
  3306 ;;      Totals:         4       0       0       0       0
  3307 ;;Total ram usage:        4 bytes
  3308 ;; Hardware stack levels used:    1
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_ISR
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           
  3317                           ;psect for function i1_Rotation90
  3318  0507                     i1_Rotation90:
  3319  0507                     i1l1762:	
  3320                           ;incstack = 0
  3321                           ; Regs used in i1_Rotation90: [wreg+status,2]
  3322                           
  3323  0507  01F2               	clrf	i1Rotation90@i
  3324  0508  01F3               	clrf	i1Rotation90@i+1
  3325  0509                     i1l281:
  3326  0509  1283               	bcf	3,5	;RP0=0, select bank0
  3327  050A  1303               	bcf	3,6	;RP1=0, select bank0
  3328  050B  1486               	bsf	6,1	;volatile
  3329  050C                     i1l1768:
  3330  050C  300B               	movlw	11
  3331  050D  00F1               	movwf	??i1_Rotation90+1
  3332  050E  301F               	movlw	31
  3333  050F  00F0               	movwf	??i1_Rotation90
  3334  0510                     u223_27:
  3335  0510  0BF0               	decfsz	??i1_Rotation90,f
  3336  0511  2D10               	goto	u223_27
  3337  0512  0BF1               	decfsz	??i1_Rotation90+1,f
  3338  0513  2D10               	goto	u223_27
  3339  0514  2D15               	nop2
  3340  0515                     i1l1770:
  3341  0515  1283               	bcf	3,5	;RP0=0, select bank0
  3342  0516  1303               	bcf	3,6	;RP1=0, select bank0
  3343  0517  1086               	bcf	6,1	;volatile
  3344  0518  305E               	movlw	94
  3345  0519  00F1               	movwf	??i1_Rotation90+1
  3346  051A  30C3               	movlw	195
  3347  051B  00F0               	movwf	??i1_Rotation90
  3348  051C                     u224_27:
  3349  051C  0BF0               	decfsz	??i1_Rotation90,f
  3350  051D  2D1C               	goto	u224_27
  3351  051E  0BF1               	decfsz	??i1_Rotation90+1,f
  3352  051F  2D1C               	goto	u224_27
  3353  0520  3001               	movlw	1
  3354  0521  07F2               	addwf	i1Rotation90@i,f
  3355  0522  1803               	skipnc
  3356  0523  0AF3               	incf	i1Rotation90@i+1,f
  3357  0524  3000               	movlw	0
  3358  0525  07F3               	addwf	i1Rotation90@i+1,f
  3359  0526  3000               	movlw	0
  3360  0527  0273               	subwf	i1Rotation90@i+1,w
  3361  0528  3032               	movlw	50
  3362  0529  1903               	skipnz
  3363  052A  0272               	subwf	i1Rotation90@i,w
  3364  052B  1C03               	skipc
  3365  052C  2D2E               	goto	u135_21
  3366  052D  2D2F               	goto	u135_20
  3367  052E                     u135_21:
  3368  052E  2D09               	goto	i1l281
  3369  052F                     u135_20:
  3370  052F                     i1l1772:
  3371  052F  3001               	movlw	1
  3372  0530  1283               	bcf	3,5	;RP0=0, select bank0
  3373  0531  1303               	bcf	3,6	;RP1=0, select bank0
  3374  0532  00C7               	movwf	_isOpened
  3375  0533  3000               	movlw	0
  3376  0534  00C8               	movwf	_isOpened+1
  3377  0535                     i1l283:
  3378  0535  0008               	return
  3379  0536                     __end_ofi1_Rotation90:
  3380  007E                     btemp	set	126	;btemp
  3381  007E                     wtemp0	set	126
  3382                           
  3383                           	psect	config
  3384                           
  3385                           ;Config register CONFIG @ 0x2007
  3386                           ;	Oscillator Selection bits
  3387                           ;	FOSC = HS, HS oscillator
  3388                           ;	Watchdog Timer Enable bit
  3389                           ;	WDTE = OFF, WDT disabled
  3390                           ;	Power-up Timer Enable bit
  3391                           ;	PWRTE = ON, PWRT enabled
  3392                           ;	Brown-out Reset Enable bit
  3393                           ;	BOREN = ON, BOR enabled
  3394                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3395                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3396                           ;	Data EEPROM Memory Code Protection bit
  3397                           ;	CPD = OFF, Data EEPROM code protection off
  3398                           ;	Flash Program Memory Write Enable bits
  3399                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3400                           ;	In-Circuit Debugger Mode bit
  3401                           ;	DEBUG = 0x1, unprogrammed default
  3402                           ;	Flash Program Memory Code Protection bit
  3403                           ;	CP = OFF, Code protection off
  3404  2007                     	org	8199
  3405  2007  3F72               	dw	16242

Data Sizes:
    Strings     56
    Constant    0
    Data        2
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     39      49
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    toa@ptr	PTR unsigned char  size(1) Largest target is 20
		 -> checkGateStatus@string(BANK0[20]), 

    Lcd8_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[9]), checkGateStatus@string(BANK0[20]), 
		 -> STR_4(CODE[8]), STR_3(CODE[8]), STR_2(CODE[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_Rotation90

Critical Paths under _main in BANK0

    _main->_checkGateStatus
    _checkGateStatus->_toa
    _toa->___awdiv
    _Lcd8_Write_String->_Lcd8_Write_Char
    _Lcd8_Write_Char->_Lcd8_Port
    _Lcd8_Set_Cursor->_Lcd8_Cmd
    _adc->___lwdiv
    _Lcd8_Init->_Lcd8_Cmd
    _Lcd8_Cmd->_Lcd8_Port

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    7506
                                             38 BANK0      1     1      0
                          _Lcd8_Init
                    _Lcd8_Set_Cursor
                  _Lcd8_Write_String
                          _Rotation0
                         _Rotation90
                                _adc
                    _checkGateStatus
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkGateStatus                                     21    21      0    4462
                                             17 BANK0     21    21      0
                    _Lcd8_Set_Cursor
                  _Lcd8_Write_String
                                _toa
 ---------------------------------------------------------------------------------
 (2) _toa                                                  8     5      3    2478
                                              9 BANK0      8     5      3
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _Lcd8_Write_String                                    7     5      2    1039
                                              4 BANK0      7     5      2
                    _Lcd8_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd8_Write_Char                                      3     3      0     279
                                              1 BANK0      3     3      0
                          _Lcd8_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd8_Set_Cursor                                      2     1      1     853
                                              4 BANK0      2     1      1
                           _Lcd8_Cmd
 ---------------------------------------------------------------------------------
 (1) _adc                                                  4     2      2     489
                                              8 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Rotation90                                           4     4      0      68
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Rotation0                                            4     4      0      68
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Init                                            2     2      0     527
                                              4 BANK0      2     2      0
                           _Lcd8_Cmd
                          _Lcd8_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd8_Cmd                                             3     3      0     279
                                              1 BANK0      3     3      0
                          _Lcd8_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd8_Port                                            1     1      0     248
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0      46
                                              4 COMMON     2     2      0
                       i1_Rotation90
 ---------------------------------------------------------------------------------
 (6) i1_Rotation90                                         4     4      0      46
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd8_Init
     _Lcd8_Cmd
       _Lcd8_Port
     _Lcd8_Port
   _Lcd8_Set_Cursor
     _Lcd8_Cmd
       _Lcd8_Port
   _Lcd8_Write_String
     _Lcd8_Write_Char
       _Lcd8_Port
   _Rotation0
   _Rotation90
   _adc
     ___lwdiv
   _checkGateStatus
     _Lcd8_Set_Cursor
       _Lcd8_Cmd
         _Lcd8_Port
     _Lcd8_Write_String
       _Lcd8_Write_Char
         _Lcd8_Port
     _toa
       ___awdiv
       ___awmod
       ___wmul
   _timerInit

 _ISR (ROOT)
   i1_Rotation90

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     27      31       5       61.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3B      12        0.0%
ABS                  0      0      3B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu Jun 10 14:50:43 2021

              i1_Rotation90 0507                           pc 0002                ___awdiv@sign 0026  
                        fsr 0004         ___wmul@multiplicand 0022                         l120 0414  
                       l121 0415                         l130 0437                         l122 041B  
                       l131 0438                         l123 041C                         l132 043E  
                       l124 0422                         l125 0423                         l221 01B3  
                       l134 043F                         l126 0429                         l118 040D  
                       l222 0112                         l127 042A                         l119 040E  
                       l128 0430                         l152 0596                         l129 0431  
                       l137 05B2                         l146 057A                         l420 0544  
                       l149 032F                         l253 025A                         l158 03BD  
                       l422 055C                         l256 0280                         l281 0444  
                       l249 05C1                         l283 0472                         l276 04AA  
                       l278 04D6                         l294 04DF                         l297 0506  
                       l573 021C                         l586 02DB                         l692 0403  
                       _GIE 005F                         _RB1 0031                         _RC0 0038  
                       _RB2 0032                         _RD0 0040                         _RC2 003A  
                       _RB4 0034                         _RD1 0041                         _RB5 0035  
                       _RD2 0042                         _RD3 0043                         _RB7 0037  
                       _RD4 0044                         _RD5 0045                         _RD6 0046  
                       _RD7 0047                         _ISR 0473                         _adc 04D7  
                       _val 004D                         _toa 00FA                         fsr0 0004  
                       indf 0000                ___awmod@sign 0026                        ?_ISR 0070  
                      ?_adc 0028                        l2002 0560                        l2010 0378  
                      l2100 0300                        l2004 0565                        l2012 037D  
                      l2020 00FE                        l2102 0306                        l2006 056D  
                      l2014 0399                        l2030 0116                        l2110 05BE  
                      l2008 0573                        l2016 03A1                        l2040 013E  
                      l2032 0129                        l2024 0104                        l2120 022C  
                      l2112 05BF                        l2104 05B3                        l2200 0072  
                      l2050 0166                        l2034 0130                        l2026 010A  
                      l2018 00FA                        l2130 0269                        l2122 0238  
                      l2114 05C0                        l2106 05BB                        l2210 0097  
                      l2202 0082                        l2140 0502                        l2060 0199  
                      l2052 016C                        l2044 014C                        l2036 0134  
                      l2132 0275                        l2124 023F                        l2116 021D  
                      l2108 05BD                        l2220 00B3                        l2212 00A0  
                      l2204 0088                        l2150 0445                        l2070 03C8  
                      l2134 04D7                        l2062 019F                        l2054 0170  
                      l2046 0161                        l2038 013A                        l2126 0247  
                      l2118 0225                        l2230 00D9                        l2222 00BC  
                      l2214 00A4                        l2206 008E                        l2152 044F  
                      l2144 0440                        l2080 03EB                        l2072 03CB  
                      l2136 04E3                        l2128 0251                        l2232 00DF  
                      l2224 00C2                        l2216 00A9                        l2208 0093  
                      l2162 04AB                        l2154 046E                        l2082 03F1  
                      l2074 03D2                        l2066 03BE                        l2138 04EB  
                      l2058 017E                        l2234 00E0                        l2226 00C7  
                      l2218 00AF                        l2092 02DC                        l2164 04B5  
                      l2156 04A6                        l2084 03F2                        l2076 03D6  
                      l2068 03C2                        l2236 00EA                        l2228 00CF  
                      l2180 0034                        l2094 02E2                        l2166 04D4  
                      l2086 03F9                        l2078 03DA                        l2238 00F3  
                      l2190 004D                        l2182 0036                        l2174 002B  
                      l2096 02E5                        l2088 03FF                        l2192 004E  
                      l2184 0039                        l2176 0030                        l2098 02EF  
                      l2194 0053                        l2186 003D                        l2178 0033  
                      l1900 0585                        l2196 005C                        l2188 0040  
                      l1902 0588                        l1910 053E                        l2198 0067  
                      l1904 0593                        l1920 01B4                        l1912 054B  
                      l1930 01C6                        l1922 01B7                        l1914 0552  
                      l1906 0536                        l1940 01DA                        l1932 01CB  
                      l1924 01BB                        l1916 0558                        l1908 053A  
                      l1870 040B                        l1950 0200                        l1942 01E1  
                      l1934 01CF                        l1926 01C0                        l1880 042E  
                      l1872 0412                        l1960 0218                        l1952 0201  
                      l1944 01E5                        l1936 01D1                        l1928 01C2  
                      l1882 0435                        l1874 0419                        l1890 05A1  
                      l1954 0208                        l1946 01E9                        l1938 01D7  
                      l1970 028D                        l1884 043C                        l1876 0420  
                      l1868 0407                        l1892 05A4                        l1948 01FA  
                      l1956 020E                        l1980 02A1                        l1972 028F  
                      l1964 0281                        l1878 0427                        l1894 05AF  
                      l1886 059A                        l1958 0213                        l1990 02C0  
                      l1982 02A8                        l1974 0293                        l1966 0284  
                      l1888 059B                        l1896 057E                        l1992 02C7  
                      l1984 02AC                        l1976 0298                        l1968 0288  
                      l1898 057F                        l1986 02B0                        l1978 029E  
                      l1994 02CD                        l1996 02D2                        l1988 02BA  
                      l1998 02D7                        ?_toa 0029                        STR_1 0340  
                      STR_2 0356                        STR_3 035E                        STR_4 0366  
                      STR_5 034D                        STR_6 036E                        STR_7 0373  
                      _BRGH 04C2                        _CREN 00C4                        u2000 04E3  
                      u2001 04E2                        u2010 046E                        u2011 046D  
                      u2020 04D4                        u2100 00B3                        u2021 04D3  
                      u2101 00B2                        u2110 00BC                        u2030 004A  
                      u2111 00BB                        u2031 0046                        u2120 00C2  
                      u2121 00C1               i1Rotation90@i 0072                        u2130 00DF  
                      u2050 0082                        u2131 00DE                        u2051 0081  
                      u1500 040B                        u2060 0088                        u2044 004D  
                      u1501 040A                        u2061 0087                        u1510 0412  
                      u2070 008E                        u1511 0411                        u2207 02FB  
                      u2071 008D                        u1520 0419                        u2080 00A0  
                      u1521 0418                        u2217 030C                        u2081 009F  
                      u1530 0420                        u1610 0558                        u2090 00A4  
                      u1531 041F                        u2227 05AA                        u2147 058E  
                      u1611 0557                        u2091 00A3                        u1540 0427  
                      u1700 020E                        u1620 01BB                        u1541 0426  
                      u2157 044B                        u1701 020D                        u1621 01BA  
                      u1605 054C                        u1550 042E                        u1710 0213  
                      u1630 01C6                        u1551 042D                        u2167 0458  
                      u1711 0212                        u1631 01C5                        u1560 0435  
                      u1640 01D7                        u1800 02D2                        u1720 0288  
                      u1561 0434                        u2177 04B1                        u1641 01D6  
                      u1801 02D1                        u1721 0287                        u1570 043C  
                      u1810 0565                        u1730 0293                        u1571 043B  
                      u2187 04BE                        u1811 0564                        u1731 0292  
                      u1820 0573                        u1660 01E9                        u1740 029E  
                      u1580 053E                        u1900 017D                        u2197 02EB  
                      u1821 0572                        u1661 01E8                        u1741 029D  
                      u1581 053D                        u1901 017C                        u1910 03C8  
                      u1830 0387                        u1911 03C7                        u1655 01DB  
                      u1840 03AB                        u1680 01FA                        u1760 02B0  
                      u1681 01F9                        u1761 02AF                        u1905 0179  
                      u1930 03DA                        u1850 03BD                        u1770 02BA  
                      u1931 03D9                        u1851 03BC                        u1675 01EA  
                      u1771 02B9                        u1755 02A2                        u1595 0545  
                      u1860 0103                        u1925 03CC                        u1685 01F6  
                      u1861 0102                        u1950 03EB                        u1790 02CD  
                      u1870 010A                        u1951 03EA                        u1695 0202  
                      u1791 02CC                        u1775 02B6                        u1871 0109  
                      u1880 0116                        u1945 03DB                        u1785 02C1  
                      u1881 0115                        u1970 03FF                        u1890 014B  
                      u1971 03FE                        u1955 03E7                        u1891 014A  
                      _PEIE 005E                        u1980 0225                        u1965 03F3  
                      u1981 0224                        _INTE 005C                        u1990 0247  
                      _INTF 0059                        u1895 0147                        u1991 0246  
                      _RCIE 0465                        _RCIF 0065                        _TMR1 000E  
                      _SPEN 00C7                        _SYNC 04C4                        _main 002B  
                      _lock 0049                        _park 004F           ??_Lcd8_Set_Cursor 0025  
                      btemp 007E                        start 000C                       ??_ISR 0074  
                     ??_adc 002A            ?_checkGateStatus 0070                       ??_toa 002C  
                     ?_main 0070             __end_of___awdiv 021D             __end_of___awmod 02DC  
           ___awdiv@divisor 0020             __end_of___lwdiv 0404                       i1l281 0509  
                     i1l283 0535                       i1l291 049F             ___awdiv@counter 0025  
                     _RCREG 001A                       _SPBRG 0099                       _PORTB 0006  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     pclath 000A                       status 0003            __end_of_Lcd8_Cmd 05B3  
                     wtemp0 007E             __initialization 000F                __end_of_main 00FA  
        __size_of_Lcd8_Init 0054          __size_of_Lcd8_Port 003C           ??_Lcd8_Write_Char 0021  
                    ??_main 0046                      _ADCON0 001F                      _ADCON1 009F  
                    _ADRESH 001E                      _ADRESL 009E            ___awdiv@dividend 0022  
                    i1l1770 0515                      i1l1762 0507                      i1l1850 047C  
                    i1l1772 052F                      i1l1860 048F                      i1l1852 0480  
                    i1l1862 0496                      i1l1854 0482                      i1l1846 0473  
                    i1l1768 050C                      i1l1864 049C                      i1l1848 0477  
                    i1l1856 0483                      i1l1866 049E                      i1l1858 0489  
                    _INTEDG 040E                      u135_20 052F                      u135_21 052E  
                    u223_27 0510                      u224_27 051C                      u147_20 0477  
                    u147_21 0476                      u148_20 0489                      u148_21 0488  
                    u149_20 0496                      u149_21 0495                      _TMR1IE 0460  
                    _TMR1IF 0060                      _TMR1CS 0081                      _TMR1ON 0080  
                    _TRISC6 043E                      _TRISC7 043F                      ___wmul 0536  
                 ??___awdiv 0024                   ??___awmod 0024                   ??___lwdiv 0024  
          ___awdiv@quotient 0027             ___awmod@divisor 0020             ___awmod@counter 0025  
                    toa@ptr 002B                      saved_w 007E                  _Rotation90 0440  
        __size_of_Rotation0 0031           __end_of_Lcd8_Init 0330           __end_of_Lcd8_Port 0440  
   __end_of__initialization 0027                  Rotation0@i 0022              __pcstackCOMMON 0070  
              __pidataBANK0 05C2                   ?_Lcd8_Cmd 0070             _Lcd8_Set_Cursor 055D  
                __pbssBANK0 0047                  __pmaintext 002B           __end_of_Rotation0 04D7  
                   ?___wmul 0020                  __pintentry 0004            Lcd8_Set_Cursor@a 0025  
          Lcd8_Set_Cursor@b 0024                     _T1CKPS0 0084                     _T1CKPS1 0085  
        __size_of_timerInit 000F                  ??_Lcd8_Cmd 0021                 ?_Rotation90 0070  
                __stringtab 0330             _Lcd8_Write_Char 057B                     ___awdiv 01B4  
                   ___awmod 0281             __size_of___wmul 0027                     ___lwdiv 03BE  
   __end_of_Lcd8_Set_Cursor 057B                     __ptext1 05B3                     __ptext2 021D  
                   __ptext3 00FA                     __ptext4 0536                     __ptext5 0281  
                   __ptext6 01B4                     __ptext7 0378                     __ptext8 057B  
                   __ptext9 055D                __size_of_ISR 0033                     _counter 0078  
              __size_of_adc 0030                   Lcd8_Cmd@a 0023                __size_of_toa 00BA  
          ___awmod@dividend 0022    __size_of_checkGateStatus 0064        end_of_initialization 0027  
                   toa@temp 002F           __end_of_timerInit 05C2         __size_of_Rotation90 0033  
   __end_of_Lcd8_Write_Char 0597                 Rotation90@i 0022                   _Lcd8_Init 02DC  
                 _Lcd8_Port 0404               ?i1_Rotation90 0070              __end_of___wmul 055D  
          ?_Lcd8_Set_Cursor 0024         start_initialization 000F                 __end_of_ISR 04A6  
               __end_of_adc 0507           __size_of_Lcd8_Cmd 001C                 __end_of_toa 01B4  
         _Lcd8_Write_String 0378           ??_checkGateStatus 0031          ?_Lcd8_Write_String 0024  
                ?_Lcd8_Init 0070                  ?_Lcd8_Port 0070         ??_Lcd8_Write_String 0026  
            ??i1_Rotation90 0070                    ??___wmul 0024                 __pdataBANK0 004F  
                 _Rotation0 04A6                   adc@adcval 002A                 __pbssCOMMON 0076  
                 ___latbits 0002               __pcstackBANK0 0020   __end_of_Lcd8_Write_String 03BE  
              ??_Rotation90 0020            ?_Lcd8_Write_Char 0070            ___lwdiv@dividend 0022  
                  ?___awdiv 0020                    ?___awmod 0020                    ?___lwdiv 0020  
        __end_of_Rotation90 0473                   __pstrings 0330                  ?_Rotation0 0070  
     checkGateStatus@string 0032            ___lwdiv@quotient 0026           interrupt_function 0004  
               ??_Lcd8_Init 0024              ___wmul@product 0024            Lcd8_Write_Char@a 0023  
               ??_Lcd8_Port 0020                    _GO_nDONE 00FA                   _timerInit 05B3  
               __stringbase 033F           ___wmul@multiplier 0020                    _Lcd8_Cmd 0597  
__size_of_Lcd8_Write_String 0046        __end_ofi1_Rotation90 0536                  ?_timerInit 0070  
          __size_of___awdiv 0069            __size_of___awmod 005B            __size_of___lwdiv 0046  
               ??_Rotation0 0020          __end_of__stringtab 0340             _checkGateStatus 021D  
           ___lwdiv@divisor 0020             ___lwdiv@counter 0025                    __ptext10 04D7  
                  __ptext11 03BE                    __ptext12 0440                    __ptext13 04A6  
                  __ptext14 02DC                    __ptext15 0597                    __ptext16 0404  
                  __ptext17 0473                    __ptext18 0507                    _isOpened 0047  
             __size_of_main 00CF                 _parkingTime 004B                  Lcd8_Port@a 0020  
                  _numberID 0076    __size_of_Lcd8_Set_Cursor 001E                    intlevel1 0000  
                  toa@count 002D                    toa@value 0029                   stringcode 033A  
        Lcd8_Write_String@a 0024          Lcd8_Write_String@i 0029                 ??_timerInit 0020  
   __end_of_checkGateStatus 0281       __size_ofi1_Rotation90 002F                    stringdir 033A  
                  stringtab 0330    __size_of_Lcd8_Write_Char 001C  
