

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Jun 07 10:27:53 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F877A Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  010C                     	;# 
   187  010D                     	;# 
   188  010E                     	;# 
   189  010F                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192  0000                     	;# 
   193  0001                     	;# 
   194  0002                     	;# 
   195  0003                     	;# 
   196  0004                     	;# 
   197  0005                     	;# 
   198  0006                     	;# 
   199  0007                     	;# 
   200  0008                     	;# 
   201  0009                     	;# 
   202  000A                     	;# 
   203  000B                     	;# 
   204  000C                     	;# 
   205  000D                     	;# 
   206  000E                     	;# 
   207  000E                     	;# 
   208  000F                     	;# 
   209  0010                     	;# 
   210  0011                     	;# 
   211  0012                     	;# 
   212  0013                     	;# 
   213  0014                     	;# 
   214  0015                     	;# 
   215  0015                     	;# 
   216  0016                     	;# 
   217  0017                     	;# 
   218  0018                     	;# 
   219  0019                     	;# 
   220  001A                     	;# 
   221  001B                     	;# 
   222  001B                     	;# 
   223  001C                     	;# 
   224  001D                     	;# 
   225  001E                     	;# 
   226  001F                     	;# 
   227  0081                     	;# 
   228  0085                     	;# 
   229  0086                     	;# 
   230  0087                     	;# 
   231  0088                     	;# 
   232  0089                     	;# 
   233  008C                     	;# 
   234  008D                     	;# 
   235  008E                     	;# 
   236  0091                     	;# 
   237  0092                     	;# 
   238  0093                     	;# 
   239  0094                     	;# 
   240  0098                     	;# 
   241  0099                     	;# 
   242  009C                     	;# 
   243  009D                     	;# 
   244  009E                     	;# 
   245  009F                     	;# 
   246  010C                     	;# 
   247  010D                     	;# 
   248  010E                     	;# 
   249  010F                     	;# 
   250  018C                     	;# 
   251  018D                     	;# 
   252  0000                     	;# 
   253  0001                     	;# 
   254  0002                     	;# 
   255  0003                     	;# 
   256  0004                     	;# 
   257  0005                     	;# 
   258  0006                     	;# 
   259  0007                     	;# 
   260  0008                     	;# 
   261  0009                     	;# 
   262  000A                     	;# 
   263  000B                     	;# 
   264  000C                     	;# 
   265  000D                     	;# 
   266  000E                     	;# 
   267  000E                     	;# 
   268  000F                     	;# 
   269  0010                     	;# 
   270  0011                     	;# 
   271  0012                     	;# 
   272  0013                     	;# 
   273  0014                     	;# 
   274  0015                     	;# 
   275  0015                     	;# 
   276  0016                     	;# 
   277  0017                     	;# 
   278  0018                     	;# 
   279  0019                     	;# 
   280  001A                     	;# 
   281  001B                     	;# 
   282  001B                     	;# 
   283  001C                     	;# 
   284  001D                     	;# 
   285  001E                     	;# 
   286  001F                     	;# 
   287  0081                     	;# 
   288  0085                     	;# 
   289  0086                     	;# 
   290  0087                     	;# 
   291  0088                     	;# 
   292  0089                     	;# 
   293  008C                     	;# 
   294  008D                     	;# 
   295  008E                     	;# 
   296  0091                     	;# 
   297  0092                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009C                     	;# 
   303  009D                     	;# 
   304  009E                     	;# 
   305  009F                     	;# 
   306  010C                     	;# 
   307  010D                     	;# 
   308  010E                     	;# 
   309  010F                     	;# 
   310  018C                     	;# 
   311  018D                     	;# 
   312                           
   313                           	psect	idataBANK0
   314  0583                     __pidataBANK0:
   315                           
   316                           ;initializer for _park
   317  0583  3464               	retlw	100
   318  0584  3400               	retlw	0
   319  000E                     _TMR1	set	14
   320  000B                     _INTCONbits	set	11
   321  0003                     _STATUSbits	set	3
   322  0006                     _PORTB	set	6
   323  001A                     _RCREG	set	26
   324  0059                     _INTF	set	89
   325  0035                     _RB5	set	53
   326  0036                     _RB6	set	54
   327  003D                     _RC5	set	61
   328  0037                     _RB7	set	55
   329  005C                     _INTE	set	92
   330  0080                     _TMR1ON	set	128
   331  0085                     _T1CKPS1	set	133
   332  0084                     _T1CKPS0	set	132
   333  0081                     _TMR1CS	set	129
   334  005F                     _GIE	set	95
   335  0060                     _TMR1IF	set	96
   336  003A                     _RC2	set	58
   337  0038                     _RC0	set	56
   338  0047                     _RD7	set	71
   339  0046                     _RD6	set	70
   340  0045                     _RD5	set	69
   341  0044                     _RD4	set	68
   342  0033                     _RB3	set	51
   343  0032                     _RB2	set	50
   344  0031                     _RB1	set	49
   345  0030                     _RB0	set	48
   346  0065                     _RCIF	set	101
   347  00C4                     _CREN	set	196
   348  005E                     _PEIE	set	94
   349  00C7                     _SPEN	set	199
   350  0088                     _TRISD	set	136
   351  0087                     _TRISC	set	135
   352  0086                     _TRISB	set	134
   353  0099                     _SPBRG	set	153
   354  0429                     _TRISA1	set	1065
   355  0428                     _TRISA0	set	1064
   356  040E                     _INTEDG	set	1038
   357  0460                     _TMR1IE	set	1120
   358  0465                     _RCIE	set	1125
   359  043F                     _TRISC7	set	1087
   360  043E                     _TRISC6	set	1086
   361  04C4                     _SYNC	set	1220
   362  04C2                     _BRGH	set	1218
   363  010C                     _EEDATA	set	268
   364  010D                     _EEADR	set	269
   365  018D                     _EECON2	set	397
   366  018C                     _EECON1	set	396
   367  018C                     _EECON1bits	set	396
   368                           
   369                           	psect	strings
   370  032F                     __pstrings:
   371  032F                     stringtab:
   372  032F                     __stringtab:
   373                           
   374                           ;	String table - string pointers are 1 byte each
   375  032F  1BFF               	btfsc	btemp+1,7
   376  0330  2B39               	ljmp	stringcode
   377  0331  1383               	bcf	3,7
   378  0332  187F               	btfsc	btemp+1,0
   379  0333  1783               	bsf	3,7
   380  0334  0800               	movf	0,w
   381  0335  0A84               	incf	4,f
   382  0336  1903               	skipnz
   383  0337  0AFF               	incf	btemp+1,f
   384  0338  0008               	return
   385  0339                     stringcode:
   386  0339                     stringdir:
   387  0339  3003               	movlw	high stringdir
   388  033A  008A               	movwf	10
   389  033B  0804               	movf	4,w
   390  033C  0A84               	incf	4,f
   391  033D  0782               	addwf	2,f
   392  033E                     __stringbase:
   393  033E  3400               	retlw	0
   394  033F                     __end_of__stringtab:
   395  033F                     STR_1:
   396  033F  3431               	retlw	49	;'1'
   397  0340  3431               	retlw	49	;'1'
   398  0341  3431               	retlw	49	;'1'
   399  0342  3431               	retlw	49	;'1'
   400  0343  3431               	retlw	49	;'1'
   401  0344  3431               	retlw	49	;'1'
   402  0345  3431               	retlw	49	;'1'
   403  0346  3431               	retlw	49	;'1'
   404  0347  3431               	retlw	49	;'1'
   405  0348  3431               	retlw	49	;'1'
   406  0349  3431               	retlw	49	;'1'
   407  034A  3431               	retlw	49	;'1'
   408  034B  3400               	retlw	0
   409  034C                     STR_5:
   410  034C  3457               	retlw	87	;'W'
   411  034D  3465               	retlw	101	;'e'
   412  034E  346C               	retlw	108	;'l'
   413  034F  346C               	retlw	108	;'l'
   414  0350  3463               	retlw	99	;'c'
   415  0351  346F               	retlw	111	;'o'
   416  0352  346D               	retlw	109	;'m'
   417  0353  3465               	retlw	101	;'e'
   418  0354  3421               	retlw	33	;'!'
   419  0355  3400               	retlw	0
   420  0356                     STR_4:
   421  0356  344C               	retlw	76	;'L'
   422  0357  346F               	retlw	111	;'o'
   423  0358  3463               	retlw	99	;'c'
   424  0359  346B               	retlw	107	;'k'
   425  035A  3421               	retlw	33	;'!'
   426  035B  3421               	retlw	33	;'!'
   427  035C  3421               	retlw	33	;'!'
   428  035D  3400               	retlw	0
   429  035E                     STR_2:
   430  035E  344F               	retlw	79	;'O'
   431  035F  3470               	retlw	112	;'p'
   432  0360  3465               	retlw	101	;'e'
   433  0361  346E               	retlw	110	;'n'
   434  0362  3465               	retlw	101	;'e'
   435  0363  3464               	retlw	100	;'d'
   436  0364  3400               	retlw	0
   437  0365                     STR_3:
   438  0365  3443               	retlw	67	;'C'
   439  0366  346C               	retlw	108	;'l'
   440  0367  346F               	retlw	111	;'o'
   441  0368  3473               	retlw	115	;'s'
   442  0369  3465               	retlw	101	;'e'
   443  036A  3464               	retlw	100	;'d'
   444  036B  3400               	retlw	0
   445                           
   446                           	psect	cinit
   447  000F                     start_initialization:	
   448                           ; #config settings
   449                           
   450  000F                     __initialization:
   451                           
   452                           ; Initialize objects allocated to BANK0
   453  000F  120A  118A  2583  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   454  0014  00E5               	movwf	__pdataBANK0& (0+127)
   455  0015  120A  118A  2584  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   456  001A  00E6               	movwf	(__pdataBANK0+1)& (0+127)
   457                           
   458                           ; Clear objects allocated to BANK0
   459  001B  01DF               	clrf	__pbssBANK0& (0+127)
   460  001C  01E0               	clrf	(__pbssBANK0+1)& (0+127)
   461  001D  01E1               	clrf	(__pbssBANK0+2)& (0+127)
   462  001E  01E2               	clrf	(__pbssBANK0+3)& (0+127)
   463  001F  01E3               	clrf	(__pbssBANK0+4)& (0+127)
   464  0020  01E4               	clrf	(__pbssBANK0+5)& (0+127)
   465                           
   466                           ; Clear objects allocated to COMMON
   467  0021  01F6               	clrf	__pbssCOMMON& (0+127)
   468  0022  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   469  0023  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   470  0024  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   471  0025                     end_of_initialization:	
   472                           ;End of C runtime variable initialization code
   473                           
   474  0025                     __end_of__initialization:
   475  0025  0183               	clrf	3
   476  0026  120A  118A  2829   	ljmp	_main	;jump to C main() function
   477                           
   478                           	psect	bssCOMMON
   479  0076                     __pbssCOMMON:
   480  0076                     _numberID:
   481  0076                     	ds	2
   482  0078                     _counter:
   483  0078                     	ds	2
   484                           
   485                           	psect	bssBANK0
   486  005F                     __pbssBANK0:
   487  005F                     _isOpened:
   488  005F                     	ds	2
   489  0061                     _lock:
   490  0061                     	ds	2
   491  0063                     _parkingTime:
   492  0063                     	ds	2
   493                           
   494                           	psect	dataBANK0
   495  0065                     __pdataBANK0:
   496  0065                     _park:
   497  0065                     	ds	2
   498                           
   499                           	psect	cstackCOMMON
   500  0070                     __pcstackCOMMON:
   501  0070                     ?_Rotation90:
   502  0070                     ?_Rotation0:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_UART_Receive:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_Lcd4_Port:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_Lcd4_Cmd:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_Lcd4_Init:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_Lcd4_Write_Char:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?_addNewID:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_RFID_init:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_timerInit:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ?_checkGateStatus:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_main:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ?_ISR:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?i1_Rotation90:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ??i1_Rotation90:	
   542                           ; 1 bytes @ 0x0
   543                           
   544                           
   545                           ; 1 bytes @ 0x0
   546  0070                     	ds	2
   547  0072                     i1Rotation90@i:
   548                           
   549                           ; 2 bytes @ 0x2
   550  0072                     	ds	2
   551  0074                     ??_ISR:
   552                           
   553                           ; 1 bytes @ 0x4
   554  0074                     	ds	2
   555                           
   556                           	psect	cstackBANK0
   557  0020                     __pcstackBANK0:
   558  0020                     ?_eeprom_write:
   559  0020                     ??_Rotation90:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0020                     ??_Rotation0:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0020                     ?_UART_Init:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0020                     ??_UART_Receive:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0020                     ??_Lcd4_Port:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0020                     ??_timerInit:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0020                     ?___lwdiv:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0020                     ?___lwmod:	
   581                           ; 2 bytes @ 0x0
   582                           
   583  0020                     Lcd4_Port@a:	
   584                           ; 2 bytes @ 0x0
   585                           
   586  0020                     eeprom_write@value:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0020                     ___lwdiv@divisor:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0020                     ___lwmod@divisor:	
   593                           ; 2 bytes @ 0x0
   594                           
   595                           
   596                           ; 2 bytes @ 0x0
   597  0020                     	ds	1
   598  0021                     ??_eeprom_write:
   599  0021                     ??_Lcd4_Cmd:	
   600                           ; 1 bytes @ 0x1
   601                           
   602  0021                     ??_Lcd4_Write_Char:	
   603                           ; 1 bytes @ 0x1
   604                           
   605                           
   606                           ; 1 bytes @ 0x1
   607  0021                     	ds	1
   608  0022                     ??_UART_Init:
   609  0022                     eeprom_write@addr:	
   610                           ; 1 bytes @ 0x2
   611                           
   612  0022                     Rotation0@i:	
   613                           ; 1 bytes @ 0x2
   614                           
   615  0022                     Rotation90@i:	
   616                           ; 2 bytes @ 0x2
   617                           
   618  0022                     ___lwdiv@dividend:	
   619                           ; 2 bytes @ 0x2
   620                           
   621  0022                     ___lwmod@dividend:	
   622                           ; 2 bytes @ 0x2
   623                           
   624                           
   625                           ; 2 bytes @ 0x2
   626  0022                     	ds	1
   627  0023                     ??_addNewID:
   628  0023                     Lcd4_Cmd@a:	
   629                           ; 1 bytes @ 0x3
   630                           
   631  0023                     Lcd4_Write_Char@temp:	
   632                           ; 1 bytes @ 0x3
   633                           
   634                           
   635                           ; 1 bytes @ 0x3
   636  0023                     	ds	1
   637  0024                     ?_Lcd4_Set_Cursor:
   638  0024                     ??_Lcd4_Init:	
   639                           ; 1 bytes @ 0x4
   640                           
   641  0024                     ??___lwdiv:	
   642                           ; 1 bytes @ 0x4
   643                           
   644  0024                     ??___lwmod:	
   645                           ; 1 bytes @ 0x4
   646                           
   647  0024                     Lcd4_Set_Cursor@b:	
   648                           ; 1 bytes @ 0x4
   649                           
   650  0024                     Lcd4_Write_Char@y:	
   651                           ; 1 bytes @ 0x4
   652                           
   653  0024                     addNewID@newID:	
   654                           ; 1 bytes @ 0x4
   655                           
   656                           
   657                           ; 1 bytes @ 0x4
   658  0024                     	ds	1
   659  0025                     ??_Lcd4_Set_Cursor:
   660  0025                     ??_RFID_init:	
   661                           ; 1 bytes @ 0x5
   662                           
   663  0025                     Lcd4_Write_Char@a:	
   664                           ; 1 bytes @ 0x5
   665                           
   666  0025                     ___lwdiv@counter:	
   667                           ; 1 bytes @ 0x5
   668                           
   669  0025                     ___lwmod@counter:	
   670                           ; 1 bytes @ 0x5
   671                           
   672                           
   673                           ; 1 bytes @ 0x5
   674  0025                     	ds	1
   675  0026                     ?_Lcd4_Write_String:
   676  0026                     Lcd4_Write_String@a:	
   677                           ; 1 bytes @ 0x6
   678                           
   679  0026                     ___lwdiv@quotient:	
   680                           ; 2 bytes @ 0x6
   681                           
   682                           
   683                           ; 2 bytes @ 0x6
   684  0026                     	ds	1
   685  0027                     Lcd4_Set_Cursor@a:
   686                           
   687                           ; 1 bytes @ 0x7
   688  0027                     	ds	1
   689  0028                     ??_Lcd4_Write_String:
   690  0028                     ?_utoa:	
   691                           ; 1 bytes @ 0x8
   692                           
   693  0028                     Lcd4_Set_Cursor@temp:	
   694                           ; 2 bytes @ 0x8
   695                           
   696  0028                     Lcd4_Write_String@i:	
   697                           ; 1 bytes @ 0x8
   698                           
   699  0028                     utoa@buf:	
   700                           ; 2 bytes @ 0x8
   701                           
   702                           
   703                           ; 2 bytes @ 0x8
   704  0028                     	ds	1
   705  0029                     Lcd4_Set_Cursor@z:
   706                           
   707                           ; 1 bytes @ 0x9
   708  0029                     	ds	1
   709  002A                     Lcd4_Set_Cursor@y:
   710  002A                     utoa@val:	
   711                           ; 1 bytes @ 0xA
   712                           
   713                           
   714                           ; 2 bytes @ 0xA
   715  002A                     	ds	2
   716  002C                     utoa@base:
   717                           
   718                           ; 2 bytes @ 0xC
   719  002C                     	ds	2
   720  002E                     ??_utoa:
   721                           
   722                           ; 1 bytes @ 0xE
   723  002E                     	ds	1
   724  002F                     utoa@v:
   725                           
   726                           ; 2 bytes @ 0xF
   727  002F                     	ds	2
   728  0031                     utoa@c:
   729                           
   730                           ; 1 bytes @ 0x11
   731  0031                     	ds	1
   732  0032                     ?_itoa:
   733  0032                     itoa@buf:	
   734                           ; 2 bytes @ 0x12
   735                           
   736                           
   737                           ; 2 bytes @ 0x12
   738  0032                     	ds	2
   739  0034                     itoa@val:
   740                           
   741                           ; 2 bytes @ 0x14
   742  0034                     	ds	2
   743  0036                     itoa@base:
   744                           
   745                           ; 2 bytes @ 0x16
   746  0036                     	ds	2
   747  0038                     ??_itoa:
   748                           
   749                           ; 1 bytes @ 0x18
   750  0038                     	ds	3
   751  003B                     ??_checkGateStatus:
   752                           
   753                           ; 1 bytes @ 0x1B
   754  003B                     	ds	1
   755  003C                     checkGateStatus@string:
   756                           
   757                           ; 20 bytes @ 0x1C
   758  003C                     	ds	20
   759  0050                     ??_main:
   760                           
   761                           ; 1 bytes @ 0x30
   762  0050                     	ds	1
   763  0051                     main@id:
   764                           
   765                           ; 12 bytes @ 0x31
   766  0051                     	ds	12
   767  005D                     main@i:
   768                           
   769                           ; 2 bytes @ 0x3D
   770  005D                     	ds	2
   771                           
   772                           	psect	maintext
   773  0029                     __pmaintext:	
   774 ;;
   775 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   776 ;;
   777 ;; *************** function _main *****************
   778 ;; Defined at:
   779 ;;		line 127 in file "parkingCar.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;  id             12   49[BANK0 ] unsigned char [12]
   784 ;;  i               2   61[BANK0 ] int 
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   789 ;; Tracked objects:
   790 ;;		On entry : B00/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   794 ;;      Params:         0       0       0       0       0
   795 ;;      Locals:         0      14       0       0       0
   796 ;;      Temps:          0       1       0       0       0
   797 ;;      Totals:         0      15       0       0       0
   798 ;;Total ram usage:       15 bytes
   799 ;; Hardware stack levels required when called:    6
   800 ;; This function calls:
   801 ;;		_Lcd4_Init
   802 ;;		_Lcd4_Set_Cursor
   803 ;;		_Lcd4_Write_String
   804 ;;		_RFID_init
   805 ;;		_Rotation0
   806 ;;		_Rotation90
   807 ;;		_UART_Init
   808 ;;		_UART_Receive
   809 ;;		_checkGateStatus
   810 ;;		_timerInit
   811 ;; This function is called by:
   812 ;;		Startup code after reset
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           
   817                           ;psect for function _main
   818  0029                     _main:
   819  0029                     l2059:	
   820                           ;incstack = 0
   821                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   822                           
   823                           
   824                           ;parkingCar.c: 128:                                 lock = 1;
   825  0029  120A  118A  2564  120A  118A  	fcall	_timerInit
   826  002E                     l2061:
   827                           
   828                           ;parkingCar.c: 129:                             }
   829  002E  120A  118A  257C  120A  118A  	fcall	_RFID_init
   830  0033                     l2063:
   831                           
   832                           ;parkingCar.c: 130:                     }
   833  0033  3080               	movlw	128
   834  0034  1283               	bcf	3,5	;RP0=0, select bank0
   835  0035  1303               	bcf	3,6	;RP1=0, select bank0
   836  0036  00A0               	movwf	?_UART_Init
   837  0037  3025               	movlw	37
   838  0038  00A1               	movwf	?_UART_Init+1
   839  0039  120A  118A  2551  120A  118A  	fcall	_UART_Init
   840  003E                     l2065:
   841                           
   842                           ;parkingCar.c: 131:                 }
   843  003E  1683               	bsf	3,5	;RP0=1, select bank1
   844  003F  1303               	bcf	3,6	;RP1=0, select bank1
   845  0040  1701               	bsf	1,6	;volatile
   846  0041                     l2067:
   847                           
   848                           ;parkingCar.c: 132: 
   849  0041  160B               	bsf	11,4	;volatile
   850  0042                     l2069:
   851                           
   852                           ;parkingCar.c: 133:                 if(RB5==1){
   853  0042  30F1               	movlw	241
   854  0043  0086               	movwf	6	;volatile
   855  0044                     l2071:
   856                           
   857                           ;parkingCar.c: 134: 
   858  0044  1283               	bcf	3,5	;RP0=0, select bank0
   859  0045  1303               	bcf	3,6	;RP1=0, select bank0
   860  0046  0186               	clrf	6	;volatile
   861  0047                     l2073:
   862                           
   863                           ;parkingCar.c: 135:                     if (RB6==0){
   864  0047  30C0               	movlw	192
   865  0048  1683               	bsf	3,5	;RP0=1, select bank1
   866  0049  1303               	bcf	3,6	;RP1=0, select bank1
   867  004A  0087               	movwf	7	;volatile
   868  004B                     l2075:
   869                           
   870                           ;parkingCar.c: 136: 
   871  004B  1283               	bcf	3,5	;RP0=0, select bank0
   872  004C  1303               	bcf	3,6	;RP1=0, select bank0
   873  004D  1786               	bsf	6,7	;volatile
   874  004E                     l2077:
   875                           
   876                           ;parkingCar.c: 137:                         if(isOpened == 1){
   877  004E  1683               	bsf	3,5	;RP0=1, select bank1
   878  004F  1303               	bcf	3,6	;RP1=0, select bank1
   879  0050  1787               	bsf	7,7	;volatile
   880  0051  1B87               	btfsc	7,7	;volatile
   881  0052  2854               	goto	u1491
   882  0053  2858               	goto	u1490
   883  0054                     u1491:
   884  0054  1683               	bsf	3,5	;RP0=1, select bank1
   885  0055  1303               	bcf	3,6	;RP1=0, select bank1
   886  0056  1707               	bsf	7,6	;volatile
   887  0057  285B               	goto	u1504
   888  0058                     u1490:
   889  0058  1683               	bsf	3,5	;RP0=1, select bank1
   890  0059  1303               	bcf	3,6	;RP1=0, select bank1
   891  005A  1307               	bcf	7,6	;volatile
   892  005B                     u1504:
   893  005B                     l2079:
   894                           
   895                           ;parkingCar.c: 139:                             park--;
   896  005B  0188               	clrf	8	;volatile
   897  005C                     l2081:
   898                           
   899                           ;parkingCar.c: 140:                         }
   900  005C  1405               	bsf	5,0	;volatile
   901  005D                     l2083:
   902                           
   903                           ;parkingCar.c: 141:                     }
   904  005D  1485               	bsf	5,1	;volatile
   905  005E                     l2085:
   906                           
   907                           ;parkingCar.c: 142:                 }
   908  005E  120A  118A  21E6  120A  118A  	fcall	_Lcd4_Init
   909  0063                     l2087:
   910                           
   911                           ;parkingCar.c: 143:     }
   912  0063  1283               	bcf	3,5	;RP0=0, select bank0
   913  0064  1303               	bcf	3,6	;RP1=0, select bank0
   914  0065  1287               	bcf	7,5	;volatile
   915  0066                     l2089:
   916                           
   917                           ;parkingCar.c: 145: ;parkingCar.c: 146: ;parkingCar.c: 149:     unsigned int i;
   918  0066  01A4               	clrf	Lcd4_Set_Cursor@b
   919  0067  3001               	movlw	1
   920  0068  120A  118A  224A  120A  118A  	fcall	_Lcd4_Set_Cursor
   921  006D                     l2091:
   922                           
   923                           ;parkingCar.c: 150:     for(i=0;i<50;i++)
   924  006D  300E               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   925  006E  1283               	bcf	3,5	;RP0=0, select bank0
   926  006F  1303               	bcf	3,6	;RP1=0, select bank0
   927  0070  00A6               	movwf	Lcd4_Write_String@a
   928  0071  3080               	movlw	128
   929  0072  00A7               	movwf	Lcd4_Write_String@a+1
   930  0073  120A  118A  2412  120A  118A  	fcall	_Lcd4_Write_String
   931  0078                     l2093:
   932                           
   933                           ;parkingCar.c: 154:         RB1 = 0;
   934  0078  120A  118A  217D  120A  118A  	fcall	_checkGateStatus
   935  007D                     l2095:
   936                           
   937                           ;parkingCar.c: 155:         _delay((unsigned long)((19100)*(16000000/4000000.0)));
   938  007D  1283               	bcf	3,5	;RP0=0, select bank0
   939  007E  1303               	bcf	3,6	;RP1=0, select bank0
   940  007F  1F06               	btfss	6,6	;volatile
   941  0080  2882               	goto	u1511
   942  0081  2883               	goto	u1510
   943  0082                     u1511:
   944  0082  28DC               	goto	l2127
   945  0083                     u1510:
   946  0083                     l2097:
   947                           
   948                           ;parkingCar.c: 156:     }
   949  0083  01DD               	clrf	main@i
   950  0084  01DE               	clrf	main@i+1
   951  0085                     l2103:
   952                           
   953                           ;parkingCar.c: 157:     isOpened = 0;
   954  0085  1283               	bcf	3,5	;RP0=0, select bank0
   955  0086  1303               	bcf	3,6	;RP1=0, select bank0
   956  0087  085D               	movf	main@i,w
   957  0088  3E51               	addlw	(low (main@id| 0))& (0+255)
   958  0089  0084               	movwf	4
   959  008A  1383               	bcf	3,7	;select IRP bank0
   960  008B  0180               	clrf	0
   961  008C                     l2105:
   962                           
   963                           ;parkingCar.c: 158: }
   964  008C  120A  118A  2573  120A  118A  	fcall	_UART_Receive
   965  0091  1283               	bcf	3,5	;RP0=0, select bank0
   966  0092  1303               	bcf	3,6	;RP1=0, select bank0
   967  0093  00D0               	movwf	??_main
   968  0094  085D               	movf	main@i,w
   969  0095  3E51               	addlw	(low (main@id| 0))& (0+255)
   970  0096  0084               	movwf	4
   971  0097  0850               	movf	??_main,w
   972  0098  1383               	bcf	3,7	;select IRP bank0
   973  0099  0080               	movwf	0
   974  009A                     l2107:
   975                           
   976                           ;parkingCar.c: 159: 
   977  009A  3001               	movlw	1
   978  009B  07DD               	addwf	main@i,f
   979  009C  1803               	skipnc
   980  009D  0ADE               	incf	main@i+1,f
   981  009E  3000               	movlw	0
   982  009F  07DE               	addwf	main@i+1,f
   983  00A0                     l2109:
   984  00A0  085E               	movf	main@i+1,w
   985  00A1  3A80               	xorlw	128
   986  00A2  00FF               	movwf	btemp+1
   987  00A3  3080               	movlw	128
   988  00A4  027F               	subwf	btemp+1,w
   989  00A5  1D03               	skipz
   990  00A6  28A9               	goto	u1525
   991  00A7  300C               	movlw	12
   992  00A8  025D               	subwf	main@i,w
   993  00A9                     u1525:
   994  00A9  1C03               	skipc
   995  00AA  28AC               	goto	u1521
   996  00AB  28AD               	goto	u1520
   997  00AC                     u1521:
   998  00AC  2885               	goto	l2103
   999  00AD                     u1520:
  1000  00AD                     l2111:
  1001                           
  1002                           ;parkingCar.c: 162:     unsigned int i;
  1003  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1004  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1005  00AF  085F               	movf	_isOpened,w
  1006  00B0  0460               	iorwf	_isOpened+1,w
  1007  00B1  1D03               	btfss	3,2
  1008  00B2  28B4               	goto	u1531
  1009  00B3  28B5               	goto	u1530
  1010  00B4                     u1531:
  1011  00B4  28C4               	goto	l2119
  1012  00B5                     u1530:
  1013  00B5                     l2113:
  1014  00B5  0861               	movf	_lock,w
  1015  00B6  0462               	iorwf	_lock+1,w
  1016  00B7  1D03               	btfss	3,2
  1017  00B8  28BA               	goto	u1541
  1018  00B9  28BB               	goto	u1540
  1019  00BA                     u1541:
  1020  00BA  28C4               	goto	l2119
  1021  00BB                     u1540:
  1022  00BB                     l2115:
  1023                           
  1024                           ;parkingCar.c: 163:     for(i=0;i<50;i++)
  1025  00BB  120A  118A  23DF  120A  118A  	fcall	_Rotation90
  1026  00C0                     l2117:
  1027                           
  1028                           ;parkingCar.c: 164:     {
  1029  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1030  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1031  00C2  01E3               	clrf	_parkingTime
  1032  00C3  01E4               	clrf	_parkingTime+1
  1033  00C4                     l2119:
  1034                           
  1035                           ;parkingCar.c: 167:         RB1 = 0;
  1036  00C4  3000               	movlw	0
  1037  00C5  0264               	subwf	_parkingTime+1,w
  1038  00C6  3015               	movlw	21
  1039  00C7  1903               	skipnz
  1040  00C8  0263               	subwf	_parkingTime,w
  1041  00C9  1C03               	skipc
  1042  00CA  28CC               	goto	u1551
  1043  00CB  28CD               	goto	u1550
  1044  00CC                     u1551:
  1045  00CC  28DC               	goto	l2127
  1046  00CD                     u1550:
  1047  00CD                     l2121:
  1048  00CD  1A86               	btfsc	6,5	;volatile
  1049  00CE  28D0               	goto	u1561
  1050  00CF  28D1               	goto	u1560
  1051  00D0                     u1561:
  1052  00D0  28DC               	goto	l2127
  1053  00D1                     u1560:
  1054  00D1                     l2123:
  1055                           
  1056                           ;parkingCar.c: 169:     }
  1057  00D1  120A  118A  2444  120A  118A  	fcall	_Rotation0
  1058  00D6                     l2125:
  1059                           
  1060                           ;parkingCar.c: 170:     isOpened = 1;
  1061  00D6  3001               	movlw	1
  1062  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1063  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1064  00D9  00E1               	movwf	_lock
  1065  00DA  3000               	movlw	0
  1066  00DB  00E2               	movwf	_lock+1
  1067  00DC                     l2127:
  1068                           
  1069                           ;parkingCar.c: 175:             Rotation90();
  1070  00DC  1E86               	btfss	6,5	;volatile
  1071  00DD  28DF               	goto	u1571
  1072  00DE  28E0               	goto	u1570
  1073  00DF                     u1571:
  1074  00DF  2878               	goto	l2093
  1075  00E0                     u1570:
  1076  00E0                     l2129:
  1077                           
  1078                           ;parkingCar.c: 177:             INTF = 0;
  1079  00E0  1B06               	btfsc	6,6	;volatile
  1080  00E1  28E3               	goto	u1581
  1081  00E2  28E4               	goto	u1580
  1082  00E3                     u1581:
  1083  00E3  2878               	goto	l2093
  1084  00E4                     u1580:
  1085  00E4                     l2131:
  1086                           
  1087                           ;parkingCar.c: 179:         if(TMR1IF == 1){
  1088  00E4  035F               	decf	_isOpened,w
  1089  00E5  0460               	iorwf	_isOpened+1,w
  1090  00E6  1D03               	btfss	3,2
  1091  00E7  28E9               	goto	u1591
  1092  00E8  28EA               	goto	u1590
  1093  00E9                     u1591:
  1094  00E9  28F8               	goto	l247
  1095  00EA                     u1590:
  1096  00EA                     l2133:
  1097                           
  1098                           ;parkingCar.c: 180:             counter ++;
  1099  00EA  120A  118A  2444  120A  118A  	fcall	_Rotation0
  1100  00EF                     l2135:
  1101                           
  1102                           ;parkingCar.c: 181:             if(counter == 75*1){
  1103  00EF  3001               	movlw	1
  1104  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1105  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1106  00F2  02E5               	subwf	_park,f
  1107  00F3  3000               	movlw	0
  1108  00F4  1C03               	skipc
  1109  00F5  03E6               	decf	_park+1,f
  1110  00F6  02E6               	subwf	_park+1,f
  1111  00F7  2878               	goto	l2093
  1112  00F8                     l247:	
  1113                           ;parkingCar.c: 184:             }
  1114                           
  1115  00F8  2878               	goto	l2093
  1116  00F9  120A  118A  280C   	ljmp	start
  1117  00FC                     __end_of_main:
  1118                           
  1119                           	psect	text1
  1120  0564                     __ptext1:	
  1121 ;; *************** function _timerInit *****************
  1122 ;; Defined at:
  1123 ;;		line 91 in file "parkingCar.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		status,2
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1137 ;;      Params:         0       0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0
  1140 ;;      Totals:         0       0       0       0       0
  1141 ;;Total ram usage:        0 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; Hardware stack levels required when called:    2
  1144 ;; This function calls:
  1145 ;;		Nothing
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           
  1152                           ;psect for function _timerInit
  1153  0564                     _timerInit:
  1154  0564                     l1997:	
  1155                           ;incstack = 0
  1156                           ; Regs used in _timerInit: [status,2]
  1157                           
  1158                           
  1159                           ;parkingCar.c: 92:     PORTB = 0x00;
  1160  0564  1683               	bsf	3,5	;RP0=1, select bank1
  1161  0565  1303               	bcf	3,6	;RP1=0, select bank1
  1162  0566  140C               	bsf	12,0	;volatile
  1163                           
  1164                           ;parkingCar.c: 93:     TRISC = 0b11000000;
  1165  0567  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0568  1303               	bcf	3,6	;RP1=0, select bank0
  1167  0569  100C               	bcf	12,0	;volatile
  1168                           
  1169                           ;parkingCar.c: 94:     RB7 = 1;
  1170  056A  170B               	bsf	11,6	;volatile
  1171                           
  1172                           ;parkingCar.c: 95:     TRISC6=TRISC7=1;
  1173  056B  178B               	bsf	11,7	;volatile
  1174  056C                     l1999:
  1175                           
  1176                           ;parkingCar.c: 99:     TRISA1 = 1;
  1177  056C  018E               	clrf	14	;volatile
  1178  056D  018F               	clrf	15	;volatile
  1179  056E                     l2001:
  1180                           
  1181                           ;parkingCar.c: 101:     RC5 = 0;
  1182  056E  1490               	bsf	16,1	;volatile
  1183  056F                     l2003:
  1184                           
  1185                           ;parkingCar.c: 103:     int i;
  1186  056F  1210               	bcf	16,4	;volatile
  1187  0570                     l2005:
  1188                           
  1189                           ;parkingCar.c: 104:     unsigned char id[12];
  1190  0570  1290               	bcf	16,5	;volatile
  1191  0571                     l2007:
  1192                           
  1193                           ;parkingCar.c: 106: 
  1194  0571  1410               	bsf	16,0	;volatile
  1195  0572                     l229:
  1196  0572  0008               	return
  1197  0573                     __end_of_timerInit:
  1198                           
  1199                           	psect	text2
  1200  017D                     __ptext2:	
  1201 ;; *************** function _checkGateStatus *****************
  1202 ;; Defined at:
  1203 ;;		line 110 in file "parkingCar.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;		None
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;  string         20   28[BANK0 ] unsigned char [20]
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1217 ;;      Params:         0       0       0       0       0
  1218 ;;      Locals:         0      20       0       0       0
  1219 ;;      Temps:          0       1       0       0       0
  1220 ;;      Totals:         0      21       0       0       0
  1221 ;;Total ram usage:       21 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; Hardware stack levels required when called:    5
  1224 ;; This function calls:
  1225 ;;		_Lcd4_Set_Cursor
  1226 ;;		_Lcd4_Write_String
  1227 ;;		_itoa
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           
  1234                           ;psect for function _checkGateStatus
  1235  017D                     _checkGateStatus:
  1236  017D                     l2009:	
  1237                           ;incstack = 0
  1238                           ; Regs used in _checkGateStatus: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1239                           
  1240                           
  1241                           ;parkingCar.c: 111: 
  1242  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1243  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1244  017F  01A4               	clrf	Lcd4_Set_Cursor@b
  1245  0180  3002               	movlw	2
  1246  0181  120A  118A  224A  120A  118A  	fcall	_Lcd4_Set_Cursor
  1247  0186                     l2011:
  1248                           
  1249                           ;parkingCar.c: 112:        checkGateStatus();
  1250  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1252  0188  035F               	decf	_isOpened,w
  1253  0189  0460               	iorwf	_isOpened+1,w
  1254  018A  1D03               	btfss	3,2
  1255  018B  298D               	goto	u1451
  1256  018C  298E               	goto	u1450
  1257  018D                     u1451:
  1258  018D  2998               	goto	l2015
  1259  018E                     u1450:
  1260  018E                     l2013:
  1261                           
  1262                           ;parkingCar.c: 113:                 if(RB6==1){
  1263  018E  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1264  018F  00A6               	movwf	Lcd4_Write_String@a
  1265  0190  3080               	movlw	128
  1266  0191  00A7               	movwf	Lcd4_Write_String@a+1
  1267  0192  120A  118A  2412  120A  118A  	fcall	_Lcd4_Write_String
  1268                           
  1269                           ;parkingCar.c: 114:                     for(i=0; i<12; i++) {
  1270  0197  29A1               	goto	l2017
  1271  0198                     l2015:
  1272                           
  1273                           ;parkingCar.c: 115:                         id[i]=0;
  1274  0198  3027               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1275  0199  00A6               	movwf	Lcd4_Write_String@a
  1276  019A  3080               	movlw	128
  1277  019B  00A7               	movwf	Lcd4_Write_String@a+1
  1278  019C  120A  118A  2412  120A  118A  	fcall	_Lcd4_Write_String
  1279  01A1                     l2017:
  1280                           
  1281                           ;parkingCar.c: 117:                     }
  1282  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1283  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1284  01A3  0361               	decf	_lock,w
  1285  01A4  0462               	iorwf	_lock+1,w
  1286  01A5  1D03               	btfss	3,2
  1287  01A6  29A8               	goto	u1461
  1288  01A7  29A9               	goto	u1460
  1289  01A8                     u1461:
  1290  01A8  29BB               	goto	l2023
  1291  01A9                     u1460:
  1292  01A9                     l2019:
  1293                           
  1294                           ;parkingCar.c: 118: 
  1295  01A9  01A4               	clrf	Lcd4_Set_Cursor@b
  1296  01AA  3002               	movlw	2
  1297  01AB  120A  118A  224A  120A  118A  	fcall	_Lcd4_Set_Cursor
  1298  01B0                     l2021:
  1299                           
  1300                           ;parkingCar.c: 119:                     if(1){
  1301  01B0  3018               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1302  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1303  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1304  01B3  00A6               	movwf	Lcd4_Write_String@a
  1305  01B4  3080               	movlw	128
  1306  01B5  00A7               	movwf	Lcd4_Write_String@a+1
  1307  01B6  120A  118A  2412  120A  118A  	fcall	_Lcd4_Write_String
  1308  01BB                     l2023:
  1309                           
  1310                           ;parkingCar.c: 121:                             Rotation90();;parkingCar.c: 122:        
      +                                               parkingTime = 0;
  1311  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1312  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1313  01BD  0865               	movf	_park,w
  1314  01BE  00B2               	movwf	itoa@buf
  1315  01BF  0866               	movf	_park+1,w
  1316  01C0  00B3               	movwf	itoa@buf+1
  1317  01C1  303C               	movlw	low (checkGateStatus@string| 0)
  1318  01C2  00B4               	movwf	itoa@val
  1319  01C3  3000               	movlw	high (checkGateStatus@string| 0)
  1320  01C4  00B5               	movwf	itoa@val+1
  1321  01C5  300A               	movlw	10
  1322  01C6  00B6               	movwf	itoa@base
  1323  01C7  3000               	movlw	0
  1324  01C8  00B7               	movwf	itoa@base+1
  1325  01C9  120A  118A  24D5  120A  118A  	fcall	_itoa
  1326  01CE                     l2025:
  1327                           
  1328                           ;parkingCar.c: 123: 
  1329  01CE  300A               	movlw	10
  1330  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1331  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1332  01D1  00BB               	movwf	??_checkGateStatus
  1333  01D2  083B               	movf	??_checkGateStatus,w
  1334  01D3  00A4               	movwf	Lcd4_Set_Cursor@b
  1335  01D4  3002               	movlw	2
  1336  01D5  120A  118A  224A  120A  118A  	fcall	_Lcd4_Set_Cursor
  1337  01DA                     l2027:
  1338                           
  1339                           ;parkingCar.c: 124:                         }
  1340  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1341  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1342  01DC  0865               	movf	_park,w
  1343  01DD  00A6               	movwf	Lcd4_Write_String@a
  1344  01DE  0866               	movf	_park+1,w
  1345  01DF  00A7               	movwf	Lcd4_Write_String@a+1
  1346  01E0  120A  118A  2412  120A  118A  	fcall	_Lcd4_Write_String
  1347  01E5                     l235:
  1348  01E5  0008               	return
  1349  01E6                     __end_of_checkGateStatus:
  1350                           
  1351                           	psect	text3
  1352  04D5                     __ptext3:	
  1353 ;; *************** function _itoa *****************
  1354 ;; Defined at:
  1355 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\itoa.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  1358 ;;		 -> RAM(512), 
  1359 ;;  val             2   20[BANK0 ] int 
  1360 ;;  base            2   22[BANK0 ] int 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  cp              2    0        PTR unsigned char 
  1363 ;;		 -> RAM(512), 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  2   18[BANK0 ] PTR unsigned char 
  1366 ;; Registers used:
  1367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1373 ;;      Params:         0       6       0       0       0
  1374 ;;      Locals:         0       2       0       0       0
  1375 ;;      Temps:          0       1       0       0       0
  1376 ;;      Totals:         0       9       0       0       0
  1377 ;;Total ram usage:        9 bytes
  1378 ;; Hardware stack levels used:    1
  1379 ;; Hardware stack levels required when called:    4
  1380 ;; This function calls:
  1381 ;;		_utoa
  1382 ;; This function is called by:
  1383 ;;		_checkGateStatus
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           
  1388                           ;psect for function _itoa
  1389  04D5                     _itoa:
  1390  04D5                     l1947:	
  1391                           ;incstack = 0
  1392                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1393                           
  1394  04D5                     l1949:
  1395  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  1396  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  1397  04D7  1FB5               	btfss	itoa@val+1,7
  1398  04D8  2CDA               	goto	u1431
  1399  04D9  2CDB               	goto	u1430
  1400  04DA                     u1431:
  1401  04DA  2CEF               	goto	l1957
  1402  04DB                     u1430:
  1403  04DB                     l1951:
  1404  04DB  302D               	movlw	45
  1405  04DC  00B8               	movwf	??_itoa
  1406  04DD  0832               	movf	itoa@buf,w
  1407  04DE  0084               	movwf	4
  1408  04DF  1783               	bsf	3,7
  1409  04E0  1C33               	btfss	itoa@buf+1,0
  1410  04E1  1383               	bcf	3,7
  1411  04E2  0838               	movf	??_itoa,w
  1412  04E3  0080               	movwf	0
  1413  04E4                     l1953:
  1414  04E4  3001               	movlw	1
  1415  04E5  07B2               	addwf	itoa@buf,f
  1416  04E6  1803               	skipnc
  1417  04E7  0AB3               	incf	itoa@buf+1,f
  1418  04E8  3000               	movlw	0
  1419  04E9  07B3               	addwf	itoa@buf+1,f
  1420  04EA                     l1955:
  1421  04EA  09B4               	comf	itoa@val,f
  1422  04EB  09B5               	comf	itoa@val+1,f
  1423  04EC  0AB4               	incf	itoa@val,f
  1424  04ED  1903               	skipnz
  1425  04EE  0AB5               	incf	itoa@val+1,f
  1426  04EF                     l1957:
  1427  04EF  0832               	movf	itoa@buf,w
  1428  04F0  00A8               	movwf	utoa@buf
  1429  04F1  0833               	movf	itoa@buf+1,w
  1430  04F2  00A9               	movwf	utoa@buf+1
  1431  04F3  0835               	movf	itoa@val+1,w
  1432  04F4  00AB               	movwf	utoa@val+1
  1433  04F5  0834               	movf	itoa@val,w
  1434  04F6  00AA               	movwf	utoa@val
  1435  04F7  0837               	movf	itoa@base+1,w
  1436  04F8  00AD               	movwf	utoa@base+1
  1437  04F9  0836               	movf	itoa@base,w
  1438  04FA  00AC               	movwf	utoa@base
  1439  04FB  120A  118A  20FC  120A  118A  	fcall	_utoa
  1440  0500                     l847:
  1441  0500  0008               	return
  1442  0501                     __end_of_itoa:
  1443                           
  1444                           	psect	text4
  1445  00FC                     __ptext4:	
  1446 ;; *************** function _utoa *****************
  1447 ;; Defined at:
  1448 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\itoa.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;  buf             2    8[BANK0 ] PTR unsigned char 
  1451 ;;		 -> RAM(512), 
  1452 ;;  val             2   10[BANK0 ] unsigned int 
  1453 ;;  base            2   12[BANK0 ] int 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  v               2   15[BANK0 ] unsigned int 
  1456 ;;  c               1   17[BANK0 ] unsigned char 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  2    8[BANK0 ] PTR unsigned char 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1466 ;;      Params:         0       6       0       0       0
  1467 ;;      Locals:         0       3       0       0       0
  1468 ;;      Temps:          0       1       0       0       0
  1469 ;;      Totals:         0      10       0       0       0
  1470 ;;Total ram usage:       10 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    3
  1473 ;; This function calls:
  1474 ;;		___lwdiv
  1475 ;;		___lwmod
  1476 ;; This function is called by:
  1477 ;;		_itoa
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           
  1482                           ;psect for function _utoa
  1483  00FC                     _utoa:
  1484  00FC                     l1889:	
  1485                           ;incstack = 0
  1486                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1487                           
  1488  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1489  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1490  00FE  082B               	movf	utoa@val+1,w
  1491  00FF  00B0               	movwf	utoa@v+1
  1492  0100  082A               	movf	utoa@val,w
  1493  0101  00AF               	movwf	utoa@v
  1494  0102                     l1891:
  1495  0102  082D               	movf	utoa@base+1,w
  1496  0103  00A1               	movwf	___lwdiv@divisor+1
  1497  0104  082C               	movf	utoa@base,w
  1498  0105  00A0               	movwf	___lwdiv@divisor
  1499  0106  0830               	movf	utoa@v+1,w
  1500  0107  00A3               	movwf	___lwdiv@dividend+1
  1501  0108  082F               	movf	utoa@v,w
  1502  0109  00A2               	movwf	___lwdiv@dividend
  1503  010A  120A  118A  22A4  120A  118A  	fcall	___lwdiv
  1504  010F  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0110  1303               	bcf	3,6	;RP1=0, select bank0
  1506  0111  0821               	movf	?___lwdiv+1,w
  1507  0112  00B0               	movwf	utoa@v+1
  1508  0113  0820               	movf	?___lwdiv,w
  1509  0114  00AF               	movwf	utoa@v
  1510  0115                     l1893:
  1511  0115  3001               	movlw	1
  1512  0116  07A8               	addwf	utoa@buf,f
  1513  0117  1803               	skipnc
  1514  0118  0AA9               	incf	utoa@buf+1,f
  1515  0119  3000               	movlw	0
  1516  011A  07A9               	addwf	utoa@buf+1,f
  1517  011B                     l1895:
  1518  011B  082F               	movf	utoa@v,w
  1519  011C  0430               	iorwf	utoa@v+1,w
  1520  011D  1D03               	btfss	3,2
  1521  011E  2920               	goto	u1351
  1522  011F  2921               	goto	u1350
  1523  0120                     u1351:
  1524  0120  2902               	goto	l1891
  1525  0121                     u1350:
  1526  0121                     l1897:
  1527  0121  0828               	movf	utoa@buf,w
  1528  0122  0084               	movwf	4
  1529  0123  1783               	bsf	3,7
  1530  0124  1C29               	btfss	utoa@buf+1,0
  1531  0125  1383               	bcf	3,7
  1532  0126  0180               	clrf	0
  1533  0127                     l1899:
  1534  0127  3001               	movlw	1
  1535  0128  02A8               	subwf	utoa@buf,f
  1536  0129  3000               	movlw	0
  1537  012A  1C03               	skipc
  1538  012B  03A9               	decf	utoa@buf+1,f
  1539  012C  02A9               	subwf	utoa@buf+1,f
  1540  012D                     l1901:
  1541  012D  082D               	movf	utoa@base+1,w
  1542  012E  00A1               	movwf	___lwmod@divisor+1
  1543  012F  082C               	movf	utoa@base,w
  1544  0130  00A0               	movwf	___lwmod@divisor
  1545  0131  082B               	movf	utoa@val+1,w
  1546  0132  00A3               	movwf	___lwmod@dividend+1
  1547  0133  082A               	movf	utoa@val,w
  1548  0134  00A2               	movwf	___lwmod@dividend
  1549  0135  120A  118A  236C  120A  118A  	fcall	___lwmod
  1550  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1551  013B  1303               	bcf	3,6	;RP1=0, select bank0
  1552  013C  0820               	movf	?___lwmod,w
  1553  013D  00AE               	movwf	??_utoa
  1554  013E  082E               	movf	??_utoa,w
  1555  013F  00B1               	movwf	utoa@c
  1556  0140                     l1903:
  1557  0140  082D               	movf	utoa@base+1,w
  1558  0141  00A1               	movwf	___lwdiv@divisor+1
  1559  0142  082C               	movf	utoa@base,w
  1560  0143  00A0               	movwf	___lwdiv@divisor
  1561  0144  082B               	movf	utoa@val+1,w
  1562  0145  00A3               	movwf	___lwdiv@dividend+1
  1563  0146  082A               	movf	utoa@val,w
  1564  0147  00A2               	movwf	___lwdiv@dividend
  1565  0148  120A  118A  22A4  120A  118A  	fcall	___lwdiv
  1566  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1567  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1568  014F  0821               	movf	?___lwdiv+1,w
  1569  0150  00AB               	movwf	utoa@val+1
  1570  0151  0820               	movf	?___lwdiv,w
  1571  0152  00AA               	movwf	utoa@val
  1572  0153                     l1905:
  1573  0153  300A               	movlw	10
  1574  0154  0231               	subwf	utoa@c,w
  1575  0155  1C03               	skipc
  1576  0156  2958               	goto	u1361
  1577  0157  2959               	goto	u1360
  1578  0158                     u1361:
  1579  0158  295D               	goto	l853
  1580  0159                     u1360:
  1581  0159                     l1907:
  1582  0159  3007               	movlw	7
  1583  015A  00AE               	movwf	??_utoa
  1584  015B  082E               	movf	??_utoa,w
  1585  015C  07B1               	addwf	utoa@c,f
  1586  015D                     l853:
  1587  015D  3030               	movlw	48
  1588  015E  00AE               	movwf	??_utoa
  1589  015F  082E               	movf	??_utoa,w
  1590  0160  07B1               	addwf	utoa@c,f
  1591  0161                     l1909:
  1592  0161  0831               	movf	utoa@c,w
  1593  0162  00AE               	movwf	??_utoa
  1594  0163  0828               	movf	utoa@buf,w
  1595  0164  0084               	movwf	4
  1596  0165  1783               	bsf	3,7
  1597  0166  1C29               	btfss	utoa@buf+1,0
  1598  0167  1383               	bcf	3,7
  1599  0168  082E               	movf	??_utoa,w
  1600  0169  0080               	movwf	0
  1601  016A                     l1911:
  1602  016A  3001               	movlw	1
  1603  016B  02A8               	subwf	utoa@buf,f
  1604  016C  3000               	movlw	0
  1605  016D  1C03               	skipc
  1606  016E  03A9               	decf	utoa@buf+1,f
  1607  016F  02A9               	subwf	utoa@buf+1,f
  1608  0170                     l1913:
  1609  0170  082A               	movf	utoa@val,w
  1610  0171  042B               	iorwf	utoa@val+1,w
  1611  0172  1D03               	btfss	3,2
  1612  0173  2975               	goto	u1371
  1613  0174  2976               	goto	u1370
  1614  0175                     u1371:
  1615  0175  292D               	goto	l1901
  1616  0176                     u1370:
  1617  0176                     l1915:
  1618                           
  1619                           ;	Return value of _utoa is never used
  1620  0176  3001               	movlw	1
  1621  0177  07A8               	addwf	utoa@buf,f
  1622  0178  1803               	skipnc
  1623  0179  0AA9               	incf	utoa@buf+1,f
  1624  017A  3000               	movlw	0
  1625  017B  07A9               	addwf	utoa@buf+1,f
  1626  017C                     l855:
  1627  017C  0008               	return
  1628  017D                     __end_of_utoa:
  1629                           
  1630                           	psect	text5
  1631  036C                     __ptext5:	
  1632 ;; *************** function ___lwmod *****************
  1633 ;; Defined at:
  1634 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  divisor         2    0[BANK0 ] unsigned int 
  1637 ;;  dividend        2    2[BANK0 ] unsigned int 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  counter         1    5[BANK0 ] unsigned char 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  2    0[BANK0 ] unsigned int 
  1642 ;; Registers used:
  1643 ;;		wreg, status,2, status,0
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1649 ;;      Params:         0       4       0       0       0
  1650 ;;      Locals:         0       1       0       0       0
  1651 ;;      Temps:          0       1       0       0       0
  1652 ;;      Totals:         0       6       0       0       0
  1653 ;;Total ram usage:        6 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    2
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_utoa
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           
  1664                           ;psect for function ___lwmod
  1665  036C                     ___lwmod:
  1666  036C                     l1817:	
  1667                           ;incstack = 0
  1668                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1669                           
  1670  036C  1283               	bcf	3,5	;RP0=0, select bank0
  1671  036D  1303               	bcf	3,6	;RP1=0, select bank0
  1672  036E  0820               	movf	___lwmod@divisor,w
  1673  036F  0421               	iorwf	___lwmod@divisor+1,w
  1674  0370  1903               	btfsc	3,2
  1675  0371  2B73               	goto	u1251
  1676  0372  2B74               	goto	u1250
  1677  0373                     u1251:
  1678  0373  2BA3               	goto	l1835
  1679  0374                     u1250:
  1680  0374                     l1819:
  1681  0374  01A5               	clrf	___lwmod@counter
  1682  0375  0AA5               	incf	___lwmod@counter,f
  1683  0376  2B82               	goto	l1825
  1684  0377                     l1821:
  1685  0377  3001               	movlw	1
  1686  0378                     u1265:
  1687  0378  1003               	clrc
  1688  0379  0DA0               	rlf	___lwmod@divisor,f
  1689  037A  0DA1               	rlf	___lwmod@divisor+1,f
  1690  037B  3EFF               	addlw	-1
  1691  037C  1D03               	skipz
  1692  037D  2B78               	goto	u1265
  1693  037E                     l1823:
  1694  037E  3001               	movlw	1
  1695  037F  00A4               	movwf	??___lwmod
  1696  0380  0824               	movf	??___lwmod,w
  1697  0381  07A5               	addwf	___lwmod@counter,f
  1698  0382                     l1825:
  1699  0382  1FA1               	btfss	___lwmod@divisor+1,7
  1700  0383  2B85               	goto	u1271
  1701  0384  2B86               	goto	u1270
  1702  0385                     u1271:
  1703  0385  2B77               	goto	l1821
  1704  0386                     u1270:
  1705  0386                     l1827:
  1706  0386  0821               	movf	___lwmod@divisor+1,w
  1707  0387  0223               	subwf	___lwmod@dividend+1,w
  1708  0388  1D03               	skipz
  1709  0389  2B8C               	goto	u1285
  1710  038A  0820               	movf	___lwmod@divisor,w
  1711  038B  0222               	subwf	___lwmod@dividend,w
  1712  038C                     u1285:
  1713  038C  1C03               	skipc
  1714  038D  2B8F               	goto	u1281
  1715  038E  2B90               	goto	u1280
  1716  038F                     u1281:
  1717  038F  2B96               	goto	l1831
  1718  0390                     u1280:
  1719  0390                     l1829:
  1720  0390  0820               	movf	___lwmod@divisor,w
  1721  0391  02A2               	subwf	___lwmod@dividend,f
  1722  0392  0821               	movf	___lwmod@divisor+1,w
  1723  0393  1C03               	skipc
  1724  0394  03A3               	decf	___lwmod@dividend+1,f
  1725  0395  02A3               	subwf	___lwmod@dividend+1,f
  1726  0396                     l1831:
  1727  0396  3001               	movlw	1
  1728  0397                     u1295:
  1729  0397  1003               	clrc
  1730  0398  0CA1               	rrf	___lwmod@divisor+1,f
  1731  0399  0CA0               	rrf	___lwmod@divisor,f
  1732  039A  3EFF               	addlw	-1
  1733  039B  1D03               	skipz
  1734  039C  2B97               	goto	u1295
  1735  039D                     l1833:
  1736  039D  3001               	movlw	1
  1737  039E  02A5               	subwf	___lwmod@counter,f
  1738  039F  1D03               	btfss	3,2
  1739  03A0  2BA2               	goto	u1301
  1740  03A1  2BA3               	goto	u1300
  1741  03A2                     u1301:
  1742  03A2  2B86               	goto	l1827
  1743  03A3                     u1300:
  1744  03A3                     l1835:
  1745  03A3  0823               	movf	___lwmod@dividend+1,w
  1746  03A4  00A1               	movwf	?___lwmod+1
  1747  03A5  0822               	movf	___lwmod@dividend,w
  1748  03A6  00A0               	movwf	?___lwmod
  1749  03A7                     l675:
  1750  03A7  0008               	return
  1751  03A8                     __end_of___lwmod:
  1752                           
  1753                           	psect	text6
  1754  02A4                     __ptext6:	
  1755 ;; *************** function ___lwdiv *****************
  1756 ;; Defined at:
  1757 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  divisor         2    0[BANK0 ] unsigned int 
  1760 ;;  dividend        2    2[BANK0 ] unsigned int 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  quotient        2    6[BANK0 ] unsigned int 
  1763 ;;  counter         1    5[BANK0 ] unsigned char 
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  2    0[BANK0 ] unsigned int 
  1766 ;; Registers used:
  1767 ;;		wreg, status,2, status,0
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1773 ;;      Params:         0       4       0       0       0
  1774 ;;      Locals:         0       3       0       0       0
  1775 ;;      Temps:          0       1       0       0       0
  1776 ;;      Totals:         0       8       0       0       0
  1777 ;;Total ram usage:        8 bytes
  1778 ;; Hardware stack levels used:    1
  1779 ;; Hardware stack levels required when called:    2
  1780 ;; This function calls:
  1781 ;;		Nothing
  1782 ;; This function is called by:
  1783 ;;		_utoa
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           
  1788                           ;psect for function ___lwdiv
  1789  02A4                     ___lwdiv:
  1790  02A4                     l1791:	
  1791                           ;incstack = 0
  1792                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1793                           
  1794  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  1795  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  1796  02A6  01A6               	clrf	___lwdiv@quotient
  1797  02A7  01A7               	clrf	___lwdiv@quotient+1
  1798  02A8                     l1793:
  1799  02A8  0820               	movf	___lwdiv@divisor,w
  1800  02A9  0421               	iorwf	___lwdiv@divisor+1,w
  1801  02AA  1903               	btfsc	3,2
  1802  02AB  2AAD               	goto	u1181
  1803  02AC  2AAE               	goto	u1180
  1804  02AD                     u1181:
  1805  02AD  2AE5               	goto	l1813
  1806  02AE                     u1180:
  1807  02AE                     l1795:
  1808  02AE  01A5               	clrf	___lwdiv@counter
  1809  02AF  0AA5               	incf	___lwdiv@counter,f
  1810  02B0  2ABC               	goto	l1801
  1811  02B1                     l1797:
  1812  02B1  3001               	movlw	1
  1813  02B2                     u1195:
  1814  02B2  1003               	clrc
  1815  02B3  0DA0               	rlf	___lwdiv@divisor,f
  1816  02B4  0DA1               	rlf	___lwdiv@divisor+1,f
  1817  02B5  3EFF               	addlw	-1
  1818  02B6  1D03               	skipz
  1819  02B7  2AB2               	goto	u1195
  1820  02B8                     l1799:
  1821  02B8  3001               	movlw	1
  1822  02B9  00A4               	movwf	??___lwdiv
  1823  02BA  0824               	movf	??___lwdiv,w
  1824  02BB  07A5               	addwf	___lwdiv@counter,f
  1825  02BC                     l1801:
  1826  02BC  1FA1               	btfss	___lwdiv@divisor+1,7
  1827  02BD  2ABF               	goto	u1201
  1828  02BE  2AC0               	goto	u1200
  1829  02BF                     u1201:
  1830  02BF  2AB1               	goto	l1797
  1831  02C0                     u1200:
  1832  02C0                     l1803:
  1833  02C0  3001               	movlw	1
  1834  02C1                     u1215:
  1835  02C1  1003               	clrc
  1836  02C2  0DA6               	rlf	___lwdiv@quotient,f
  1837  02C3  0DA7               	rlf	___lwdiv@quotient+1,f
  1838  02C4  3EFF               	addlw	-1
  1839  02C5  1D03               	skipz
  1840  02C6  2AC1               	goto	u1215
  1841  02C7  0821               	movf	___lwdiv@divisor+1,w
  1842  02C8  0223               	subwf	___lwdiv@dividend+1,w
  1843  02C9  1D03               	skipz
  1844  02CA  2ACD               	goto	u1225
  1845  02CB  0820               	movf	___lwdiv@divisor,w
  1846  02CC  0222               	subwf	___lwdiv@dividend,w
  1847  02CD                     u1225:
  1848  02CD  1C03               	skipc
  1849  02CE  2AD0               	goto	u1221
  1850  02CF  2AD1               	goto	u1220
  1851  02D0                     u1221:
  1852  02D0  2AD8               	goto	l1809
  1853  02D1                     u1220:
  1854  02D1                     l1805:
  1855  02D1  0820               	movf	___lwdiv@divisor,w
  1856  02D2  02A2               	subwf	___lwdiv@dividend,f
  1857  02D3  0821               	movf	___lwdiv@divisor+1,w
  1858  02D4  1C03               	skipc
  1859  02D5  03A3               	decf	___lwdiv@dividend+1,f
  1860  02D6  02A3               	subwf	___lwdiv@dividend+1,f
  1861  02D7                     l1807:
  1862  02D7  1426               	bsf	___lwdiv@quotient,0
  1863  02D8                     l1809:
  1864  02D8  3001               	movlw	1
  1865  02D9                     u1235:
  1866  02D9  1003               	clrc
  1867  02DA  0CA1               	rrf	___lwdiv@divisor+1,f
  1868  02DB  0CA0               	rrf	___lwdiv@divisor,f
  1869  02DC  3EFF               	addlw	-1
  1870  02DD  1D03               	skipz
  1871  02DE  2AD9               	goto	u1235
  1872  02DF                     l1811:
  1873  02DF  3001               	movlw	1
  1874  02E0  02A5               	subwf	___lwdiv@counter,f
  1875  02E1  1D03               	btfss	3,2
  1876  02E2  2AE4               	goto	u1241
  1877  02E3  2AE5               	goto	u1240
  1878  02E4                     u1241:
  1879  02E4  2AC0               	goto	l1803
  1880  02E5                     u1240:
  1881  02E5                     l1813:
  1882  02E5  0827               	movf	___lwdiv@quotient+1,w
  1883  02E6  00A1               	movwf	?___lwdiv+1
  1884  02E7  0826               	movf	___lwdiv@quotient,w
  1885  02E8  00A0               	movwf	?___lwdiv
  1886  02E9                     l665:
  1887  02E9  0008               	return
  1888  02EA                     __end_of___lwdiv:
  1889                           
  1890                           	psect	text7
  1891  0412                     __ptext7:	
  1892 ;; *************** function _Lcd4_Write_String *****************
  1893 ;; Defined at:
  1894 ;;		line 218 in file "./lcd.h"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  a               2    6[BANK0 ] PTR unsigned char 
  1897 ;;		 -> STR_5(10), RAM(512), STR_4(8), STR_3(7), 
  1898 ;;		 -> STR_2(7), 
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  i               2    8[BANK0 ] int 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1910 ;;      Params:         0       2       0       0       0
  1911 ;;      Locals:         0       2       0       0       0
  1912 ;;      Temps:          0       0       0       0       0
  1913 ;;      Totals:         0       4       0       0       0
  1914 ;;Total ram usage:        4 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    4
  1917 ;; This function calls:
  1918 ;;		_Lcd4_Write_Char
  1919 ;; This function is called by:
  1920 ;;		_checkGateStatus
  1921 ;;		_main
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           
  1926                           ;psect for function _Lcd4_Write_String
  1927  0412                     _Lcd4_Write_String:
  1928  0412                     l1935:	
  1929                           ;incstack = 0
  1930                           ; Regs used in _Lcd4_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1931                           
  1932                           
  1933                           ;./lcd.h: 218: void Lcd4_Write_String(char *a);./lcd.h: 219: {;./lcd.h: 220:  int i;;./l
      +                          cd.h: 221:  for(i=0;a[i]!='\0';i++)
  1934  0412  1283               	bcf	3,5	;RP0=0, select bank0
  1935  0413  1303               	bcf	3,6	;RP1=0, select bank0
  1936  0414  01A8               	clrf	Lcd4_Write_String@i
  1937  0415  01A9               	clrf	Lcd4_Write_String@i+1
  1938  0416  2C31               	goto	l1941
  1939  0417                     l1937:
  1940                           
  1941                           ;./lcd.h: 222:   Lcd4_Write_Char(a[i]);
  1942  0417  0828               	movf	Lcd4_Write_String@i,w
  1943  0418  0726               	addwf	Lcd4_Write_String@a,w
  1944  0419  0084               	movwf	4
  1945  041A  0829               	movf	Lcd4_Write_String@i+1,w
  1946  041B  1803               	skipnc
  1947  041C  0A29               	incf	Lcd4_Write_String@i+1,w
  1948  041D  0727               	addwf	Lcd4_Write_String@a+1,w
  1949  041E  00FF               	movwf	btemp+1
  1950  041F  120A  118A  232F  120A  118A  	fcall	stringtab
  1951  0424  120A  118A  22EA  120A  118A  	fcall	_Lcd4_Write_Char
  1952  0429                     l1939:
  1953  0429  3001               	movlw	1
  1954  042A  1283               	bcf	3,5	;RP0=0, select bank0
  1955  042B  1303               	bcf	3,6	;RP1=0, select bank0
  1956  042C  07A8               	addwf	Lcd4_Write_String@i,f
  1957  042D  1803               	skipnc
  1958  042E  0AA9               	incf	Lcd4_Write_String@i+1,f
  1959  042F  3000               	movlw	0
  1960  0430  07A9               	addwf	Lcd4_Write_String@i+1,f
  1961  0431                     l1941:
  1962  0431  0828               	movf	Lcd4_Write_String@i,w
  1963  0432  0726               	addwf	Lcd4_Write_String@a,w
  1964  0433  0084               	movwf	4
  1965  0434  0829               	movf	Lcd4_Write_String@i+1,w
  1966  0435  1803               	skipnc
  1967  0436  0A29               	incf	Lcd4_Write_String@i+1,w
  1968  0437  0727               	addwf	Lcd4_Write_String@a+1,w
  1969  0438  00FF               	movwf	btemp+1
  1970  0439  120A  118A  232F  120A  118A  	fcall	stringtab
  1971  043E  3A00               	xorlw	0
  1972  043F  1D03               	skipz
  1973  0440  2C42               	goto	u1421
  1974  0441  2C43               	goto	u1420
  1975  0442                     u1421:
  1976  0442  2C17               	goto	l1937
  1977  0443                     u1420:
  1978  0443                     l191:
  1979  0443  0008               	return
  1980  0444                     __end_of_Lcd4_Write_String:
  1981                           
  1982                           	psect	text8
  1983  02EA                     __ptext8:	
  1984 ;; *************** function _Lcd4_Write_Char *****************
  1985 ;; Defined at:
  1986 ;;		line 202 in file "./lcd.h"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  a               1    wreg     unsigned char 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  a               1    5[BANK0 ] unsigned char 
  1991 ;;  y               1    4[BANK0 ] unsigned char 
  1992 ;;  temp            1    3[BANK0 ] unsigned char 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      void 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0, pclath, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2002 ;;      Params:         0       0       0       0       0
  2003 ;;      Locals:         0       3       0       0       0
  2004 ;;      Temps:          0       2       0       0       0
  2005 ;;      Totals:         0       5       0       0       0
  2006 ;;Total ram usage:        5 bytes
  2007 ;; Hardware stack levels used:    1
  2008 ;; Hardware stack levels required when called:    3
  2009 ;; This function calls:
  2010 ;;		_Lcd4_Port
  2011 ;; This function is called by:
  2012 ;;		_Lcd4_Write_String
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           
  2017                           ;psect for function _Lcd4_Write_Char
  2018  02EA                     _Lcd4_Write_Char:
  2019                           
  2020                           ;incstack = 0
  2021                           ; Regs used in _Lcd4_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2022                           ;Lcd4_Write_Char@a stored from wreg
  2023  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2024  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2025  02EC  00A5               	movwf	Lcd4_Write_Char@a
  2026  02ED                     l1849:
  2027                           
  2028                           ;./lcd.h: 202: void Lcd4_Write_Char(char a);./lcd.h: 203: {;./lcd.h: 204:    char temp,y
      +                          ;;./lcd.h: 205:    temp = a&0x0F;
  2029  02ED  0825               	movf	Lcd4_Write_Char@a,w
  2030  02EE  390F               	andlw	15
  2031  02EF  00A1               	movwf	??_Lcd4_Write_Char
  2032  02F0  0821               	movf	??_Lcd4_Write_Char,w
  2033  02F1  00A3               	movwf	Lcd4_Write_Char@temp
  2034                           
  2035                           ;./lcd.h: 206:    y = a&0xF0;
  2036  02F2  0825               	movf	Lcd4_Write_Char@a,w
  2037  02F3  39F0               	andlw	240
  2038  02F4  00A1               	movwf	??_Lcd4_Write_Char
  2039  02F5  0821               	movf	??_Lcd4_Write_Char,w
  2040  02F6  00A4               	movwf	Lcd4_Write_Char@y
  2041  02F7                     l1851:
  2042                           
  2043                           ;./lcd.h: 207:   RC0 = 1;
  2044  02F7  1407               	bsf	7,0	;volatile
  2045  02F8                     l1853:
  2046                           
  2047                           ;./lcd.h: 208:    Lcd4_Port(y>>4);
  2048  02F8  0824               	movf	Lcd4_Write_Char@y,w
  2049  02F9  00A1               	movwf	??_Lcd4_Write_Char
  2050  02FA  3004               	movlw	4
  2051  02FB                     u1315:
  2052  02FB  1003               	clrc
  2053  02FC  0CA1               	rrf	??_Lcd4_Write_Char,f
  2054  02FD  3EFF               	addlw	-1
  2055  02FE  1D03               	skipz
  2056  02FF  2AFB               	goto	u1315
  2057  0300  0821               	movf	??_Lcd4_Write_Char,w
  2058  0301  120A  118A  2501  120A  118A  	fcall	_Lcd4_Port
  2059  0306                     l1855:
  2060                           
  2061                           ;./lcd.h: 209:   RC2 = 1;
  2062  0306  1283               	bcf	3,5	;RP0=0, select bank0
  2063  0307  1303               	bcf	3,6	;RP1=0, select bank0
  2064  0308  1507               	bsf	7,2	;volatile
  2065  0309                     l1857:
  2066                           
  2067                           ;./lcd.h: 210:   _delay((unsigned long)((5)*(16000000/4000.0)));
  2068  0309  301A               	movlw	26
  2069  030A  1283               	bcf	3,5	;RP0=0, select bank0
  2070  030B  1303               	bcf	3,6	;RP1=0, select bank0
  2071  030C  00A2               	movwf	??_Lcd4_Write_Char+1
  2072  030D  30F7               	movlw	247
  2073  030E  00A1               	movwf	??_Lcd4_Write_Char
  2074  030F                     u1607:
  2075  030F  0BA1               	decfsz	??_Lcd4_Write_Char,f
  2076  0310  2B0F               	goto	u1607
  2077  0311  0BA2               	decfsz	??_Lcd4_Write_Char+1,f
  2078  0312  2B0F               	goto	u1607
  2079  0313  2B14               	nop2
  2080  0314                     l1859:
  2081                           
  2082                           ;./lcd.h: 211:   RC2 = 0;
  2083  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2084  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2085  0316  1107               	bcf	7,2	;volatile
  2086  0317                     l1861:
  2087                           
  2088                           ;./lcd.h: 212:   Lcd4_Port(temp);
  2089  0317  0823               	movf	Lcd4_Write_Char@temp,w
  2090  0318  120A  118A  2501  120A  118A  	fcall	_Lcd4_Port
  2091  031D                     l1863:
  2092                           
  2093                           ;./lcd.h: 213:   RC2 = 1;
  2094  031D  1283               	bcf	3,5	;RP0=0, select bank0
  2095  031E  1303               	bcf	3,6	;RP1=0, select bank0
  2096  031F  1507               	bsf	7,2	;volatile
  2097  0320                     l1865:
  2098                           
  2099                           ;./lcd.h: 214:   _delay((unsigned long)((5)*(16000000/4000.0)));
  2100  0320  301A               	movlw	26
  2101  0321  1283               	bcf	3,5	;RP0=0, select bank0
  2102  0322  1303               	bcf	3,6	;RP1=0, select bank0
  2103  0323  00A2               	movwf	??_Lcd4_Write_Char+1
  2104  0324  30F7               	movlw	247
  2105  0325  00A1               	movwf	??_Lcd4_Write_Char
  2106  0326                     u1617:
  2107  0326  0BA1               	decfsz	??_Lcd4_Write_Char,f
  2108  0327  2B26               	goto	u1617
  2109  0328  0BA2               	decfsz	??_Lcd4_Write_Char+1,f
  2110  0329  2B26               	goto	u1617
  2111  032A  2B2B               	nop2
  2112  032B                     l1867:
  2113                           
  2114                           ;./lcd.h: 215:   RC2 = 0;
  2115  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2116  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2117  032D  1107               	bcf	7,2	;volatile
  2118  032E                     l185:
  2119  032E  0008               	return
  2120  032F                     __end_of_Lcd4_Write_Char:
  2121                           
  2122                           	psect	text9
  2123  024A                     __ptext9:	
  2124 ;; *************** function _Lcd4_Set_Cursor *****************
  2125 ;; Defined at:
  2126 ;;		line 162 in file "./lcd.h"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  a               1    wreg     unsigned char 
  2129 ;;  b               1    4[BANK0 ] unsigned char 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  a               1    7[BANK0 ] unsigned char 
  2132 ;;  y               1   10[BANK0 ] unsigned char 
  2133 ;;  z               1    9[BANK0 ] unsigned char 
  2134 ;;  temp            1    8[BANK0 ] unsigned char 
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg, status,2, status,0, pclath, cstack
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2144 ;;      Params:         0       1       0       0       0
  2145 ;;      Locals:         0       4       0       0       0
  2146 ;;      Temps:          0       2       0       0       0
  2147 ;;      Totals:         0       7       0       0       0
  2148 ;;Total ram usage:        7 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; Hardware stack levels required when called:    4
  2151 ;; This function calls:
  2152 ;;		_Lcd4_Cmd
  2153 ;; This function is called by:
  2154 ;;		_checkGateStatus
  2155 ;;		_main
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           
  2160                           ;psect for function _Lcd4_Set_Cursor
  2161  024A                     _Lcd4_Set_Cursor:
  2162                           
  2163                           ;incstack = 0
  2164                           ; Regs used in _Lcd4_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2165                           ;Lcd4_Set_Cursor@a stored from wreg
  2166  024A  1283               	bcf	3,5	;RP0=0, select bank0
  2167  024B  1303               	bcf	3,6	;RP1=0, select bank0
  2168  024C  00A7               	movwf	Lcd4_Set_Cursor@a
  2169  024D                     l1919:
  2170                           
  2171                           ;./lcd.h: 162: void Lcd4_Set_Cursor(char a, char b);./lcd.h: 163: {;./lcd.h: 164:  char 
      +                          temp,z,y;;./lcd.h: 165:  if(a == 1)
  2172  024D  0327               	decf	Lcd4_Set_Cursor@a,w
  2173  024E  1D03               	btfss	3,2
  2174  024F  2A51               	goto	u1381
  2175  0250  2A52               	goto	u1380
  2176  0251                     u1381:
  2177  0251  2A78               	goto	l1927
  2178  0252                     u1380:
  2179  0252                     l1921:
  2180                           
  2181                           ;./lcd.h: 166:  {;./lcd.h: 167:    temp = 0x80 + b;
  2182  0252  0824               	movf	Lcd4_Set_Cursor@b,w
  2183  0253  3E80               	addlw	128
  2184  0254  00A5               	movwf	??_Lcd4_Set_Cursor
  2185  0255  0825               	movf	??_Lcd4_Set_Cursor,w
  2186  0256  00A8               	movwf	Lcd4_Set_Cursor@temp
  2187                           
  2188                           ;./lcd.h: 168:   z = temp>>4;
  2189  0257  0828               	movf	Lcd4_Set_Cursor@temp,w
  2190  0258  00A5               	movwf	??_Lcd4_Set_Cursor
  2191  0259  3004               	movlw	4
  2192  025A                     u1395:
  2193  025A  1003               	clrc
  2194  025B  0CA5               	rrf	??_Lcd4_Set_Cursor,f
  2195  025C  3EFF               	addlw	-1
  2196  025D  1D03               	skipz
  2197  025E  2A5A               	goto	u1395
  2198  025F  0825               	movf	??_Lcd4_Set_Cursor,w
  2199  0260  00A6               	movwf	??_Lcd4_Set_Cursor+1
  2200  0261  0826               	movf	??_Lcd4_Set_Cursor+1,w
  2201  0262  00A9               	movwf	Lcd4_Set_Cursor@z
  2202                           
  2203                           ;./lcd.h: 169:   y = (0x80+b) & 0x0F;
  2204  0263  0824               	movf	Lcd4_Set_Cursor@b,w
  2205  0264  3E80               	addlw	128
  2206  0265  390F               	andlw	15
  2207  0266  00A5               	movwf	??_Lcd4_Set_Cursor
  2208  0267  0825               	movf	??_Lcd4_Set_Cursor,w
  2209  0268  00AA               	movwf	Lcd4_Set_Cursor@y
  2210  0269                     l1923:
  2211                           
  2212                           ;./lcd.h: 170:   Lcd4_Cmd(z);
  2213  0269  0829               	movf	Lcd4_Set_Cursor@z,w
  2214  026A  120A  118A  2521  120A  118A  	fcall	_Lcd4_Cmd
  2215  026F                     l1925:
  2216                           
  2217                           ;./lcd.h: 171:   Lcd4_Cmd(y);
  2218  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2219  0270  1303               	bcf	3,6	;RP1=0, select bank0
  2220  0271  082A               	movf	Lcd4_Set_Cursor@y,w
  2221  0272  120A  118A  2521  120A  118A  	fcall	_Lcd4_Cmd
  2222                           
  2223                           ;./lcd.h: 172:  }
  2224  0277  2AA3               	goto	l179
  2225  0278                     l1927:
  2226  0278  3002               	movlw	2
  2227  0279  0627               	xorwf	Lcd4_Set_Cursor@a,w
  2228  027A  1D03               	btfss	3,2
  2229  027B  2A7D               	goto	u1401
  2230  027C  2A7E               	goto	u1400
  2231  027D                     u1401:
  2232  027D  2AA3               	goto	l179
  2233  027E                     u1400:
  2234  027E                     l1929:
  2235                           
  2236                           ;./lcd.h: 174:  {;./lcd.h: 175:   temp = 0xC0 + b;
  2237  027E  0824               	movf	Lcd4_Set_Cursor@b,w
  2238  027F  3EC0               	addlw	192
  2239  0280  00A5               	movwf	??_Lcd4_Set_Cursor
  2240  0281  0825               	movf	??_Lcd4_Set_Cursor,w
  2241  0282  00A8               	movwf	Lcd4_Set_Cursor@temp
  2242                           
  2243                           ;./lcd.h: 176:   z = temp>>4;
  2244  0283  0828               	movf	Lcd4_Set_Cursor@temp,w
  2245  0284  00A5               	movwf	??_Lcd4_Set_Cursor
  2246  0285  3004               	movlw	4
  2247  0286                     u1415:
  2248  0286  1003               	clrc
  2249  0287  0CA5               	rrf	??_Lcd4_Set_Cursor,f
  2250  0288  3EFF               	addlw	-1
  2251  0289  1D03               	skipz
  2252  028A  2A86               	goto	u1415
  2253  028B  0825               	movf	??_Lcd4_Set_Cursor,w
  2254  028C  00A6               	movwf	??_Lcd4_Set_Cursor+1
  2255  028D  0826               	movf	??_Lcd4_Set_Cursor+1,w
  2256  028E  00A9               	movwf	Lcd4_Set_Cursor@z
  2257                           
  2258                           ;./lcd.h: 177:   y = (0xC0+b) & 0x0F;
  2259  028F  0824               	movf	Lcd4_Set_Cursor@b,w
  2260  0290  3EC0               	addlw	192
  2261  0291  390F               	andlw	15
  2262  0292  00A5               	movwf	??_Lcd4_Set_Cursor
  2263  0293  0825               	movf	??_Lcd4_Set_Cursor,w
  2264  0294  00AA               	movwf	Lcd4_Set_Cursor@y
  2265  0295                     l1931:
  2266                           
  2267                           ;./lcd.h: 178:   Lcd4_Cmd(z);
  2268  0295  0829               	movf	Lcd4_Set_Cursor@z,w
  2269  0296  120A  118A  2521  120A  118A  	fcall	_Lcd4_Cmd
  2270  029B                     l1933:
  2271                           
  2272                           ;./lcd.h: 179:   Lcd4_Cmd(y);
  2273  029B  1283               	bcf	3,5	;RP0=0, select bank0
  2274  029C  1303               	bcf	3,6	;RP1=0, select bank0
  2275  029D  082A               	movf	Lcd4_Set_Cursor@y,w
  2276  029E  120A  118A  2521  120A  118A  	fcall	_Lcd4_Cmd
  2277  02A3                     l179:
  2278  02A3  0008               	return
  2279  02A4                     __end_of_Lcd4_Set_Cursor:
  2280                           
  2281                           	psect	text10
  2282  0573                     __ptext10:	
  2283 ;; *************** function _UART_Receive *****************
  2284 ;; Defined at:
  2285 ;;		line 19 in file "./uart.h"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;		None
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;		None
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      unsigned char 
  2292 ;; Registers used:
  2293 ;;		wreg
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2299 ;;      Params:         0       0       0       0       0
  2300 ;;      Locals:         0       0       0       0       0
  2301 ;;      Temps:          0       0       0       0       0
  2302 ;;      Totals:         0       0       0       0       0
  2303 ;;Total ram usage:        0 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; Hardware stack levels required when called:    2
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		_main
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           
  2314                           ;psect for function _UART_Receive
  2315  0573                     _UART_Receive:
  2316  0573                     l1979:	
  2317                           ;incstack = 0
  2318                           ; Regs used in _UART_Receive: [wreg]
  2319                           
  2320  0573                     l104:	
  2321                           ;./uart.h: 20:     while(RCIF==0);
  2322                           
  2323  0573  1283               	bcf	3,5	;RP0=0, select bank0
  2324  0574  1303               	bcf	3,6	;RP1=0, select bank0
  2325  0575  1E8C               	btfss	12,5	;volatile
  2326  0576  2D78               	goto	u1441
  2327  0577  2D79               	goto	u1440
  2328  0578                     u1441:
  2329  0578  2D73               	goto	l104
  2330  0579                     u1440:
  2331  0579                     l106:
  2332                           
  2333                           ;./uart.h: 21:     RCIF=0;
  2334  0579  128C               	bcf	12,5	;volatile
  2335  057A                     l1981:
  2336                           
  2337                           ;./uart.h: 22:     return(RCREG);
  2338  057A  081A               	movf	26,w	;volatile
  2339  057B                     l107:
  2340  057B  0008               	return
  2341  057C                     __end_of_UART_Receive:
  2342                           
  2343                           	psect	text11
  2344  0551                     __ptext11:	
  2345 ;; *************** function _UART_Init *****************
  2346 ;; Defined at:
  2347 ;;		line 1 in file "./uart.h"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;		None
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;		None
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      void 
  2354 ;; Registers used:
  2355 ;;		wreg
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2361 ;;      Params:         0       2       0       0       0
  2362 ;;      Locals:         0       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0
  2364 ;;      Totals:         0       2       0       0       0
  2365 ;;Total ram usage:        2 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:    2
  2368 ;; This function calls:
  2369 ;;		Nothing
  2370 ;; This function is called by:
  2371 ;;		_main
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           
  2376                           ;psect for function _UART_Init
  2377  0551                     _UART_Init:
  2378  0551                     l1961:	
  2379                           ;incstack = 0
  2380                           ; Regs used in _UART_Init: [wreg]
  2381                           
  2382                           
  2383                           ;./uart.h: 3:     BRGH = 1;
  2384  0551  1683               	bsf	3,5	;RP0=1, select bank1
  2385  0552  1303               	bcf	3,6	;RP1=0, select bank1
  2386  0553  1518               	bsf	24,2	;volatile
  2387  0554                     l1963:
  2388                           
  2389                           ;./uart.h: 4:     SPBRG = 25;
  2390  0554  3019               	movlw	25
  2391  0555  0099               	movwf	25	;volatile
  2392  0556                     l1965:
  2393                           
  2394                           ;./uart.h: 6:     SYNC = 0;
  2395  0556  1218               	bcf	24,4	;volatile
  2396  0557                     l1967:
  2397                           
  2398                           ;./uart.h: 7:     SPEN = 1;
  2399  0557  1283               	bcf	3,5	;RP0=0, select bank0
  2400  0558  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0559  1798               	bsf	24,7	;volatile
  2402  055A                     l1969:
  2403                           
  2404                           ;./uart.h: 9:     TRISC6 = 1;
  2405  055A  1683               	bsf	3,5	;RP0=1, select bank1
  2406  055B  1303               	bcf	3,6	;RP1=0, select bank1
  2407  055C  1707               	bsf	7,6	;volatile
  2408  055D                     l1971:
  2409                           
  2410                           ;./uart.h: 10:     TRISC7 = 1;
  2411  055D  1787               	bsf	7,7	;volatile
  2412  055E                     l1973:
  2413                           
  2414                           ;./uart.h: 12:     RCIE = 1;
  2415  055E  168C               	bsf	12,5	;volatile
  2416  055F                     l1975:
  2417                           
  2418                           ;./uart.h: 13:     PEIE = 1;
  2419  055F  170B               	bsf	11,6	;volatile
  2420  0560                     l1977:
  2421                           
  2422                           ;./uart.h: 15:     CREN = 1;
  2423  0560  1283               	bcf	3,5	;RP0=0, select bank0
  2424  0561  1303               	bcf	3,6	;RP1=0, select bank0
  2425  0562  1618               	bsf	24,4	;volatile
  2426  0563                     l101:
  2427  0563  0008               	return
  2428  0564                     __end_of_UART_Init:
  2429                           
  2430                           	psect	text12
  2431  03DF                     __ptext12:	
  2432 ;; *************** function _Rotation90 *****************
  2433 ;; Defined at:
  2434 ;;		line 202 in file "parkingCar.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;		None
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  i               2    2[BANK0 ] unsigned int 
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg, status,2
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2448 ;;      Params:         0       0       0       0       0
  2449 ;;      Locals:         0       2       0       0       0
  2450 ;;      Temps:          0       2       0       0       0
  2451 ;;      Totals:         0       4       0       0       0
  2452 ;;Total ram usage:        4 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:    2
  2455 ;; This function calls:
  2456 ;;		Nothing
  2457 ;; This function is called by:
  2458 ;;		_main
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           
  2463                           ;psect for function _Rotation90
  2464  03DF                     _Rotation90:
  2465  03DF                     l2029:	
  2466                           ;incstack = 0
  2467                           ; Regs used in _Rotation90: [wreg+status,2]
  2468                           
  2469  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2470  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  2471  03E1  01A2               	clrf	Rotation90@i
  2472  03E2  01A3               	clrf	Rotation90@i+1
  2473  03E3                     l260:
  2474  03E3  1486               	bsf	6,1	;volatile
  2475  03E4                     l2035:
  2476  03E4  300B               	movlw	11
  2477  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2478  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2479  03E7  00A1               	movwf	??_Rotation90+1
  2480  03E8  301F               	movlw	31
  2481  03E9  00A0               	movwf	??_Rotation90
  2482  03EA                     u1627:
  2483  03EA  0BA0               	decfsz	??_Rotation90,f
  2484  03EB  2BEA               	goto	u1627
  2485  03EC  0BA1               	decfsz	??_Rotation90+1,f
  2486  03ED  2BEA               	goto	u1627
  2487  03EE                     l2037:
  2488  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2489  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2490  03F0  1086               	bcf	6,1	;volatile
  2491  03F1  305E               	movlw	94
  2492  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2493  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2494  03F4  00A1               	movwf	??_Rotation90+1
  2495  03F5  30C2               	movlw	194
  2496  03F6  00A0               	movwf	??_Rotation90
  2497  03F7                     u1637:
  2498  03F7  0BA0               	decfsz	??_Rotation90,f
  2499  03F8  2BF7               	goto	u1637
  2500  03F9  0BA1               	decfsz	??_Rotation90+1,f
  2501  03FA  2BF7               	goto	u1637
  2502  03FB  0000               	nop
  2503  03FC  3001               	movlw	1
  2504  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2505  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  2506  03FF  07A2               	addwf	Rotation90@i,f
  2507  0400  1803               	skipnc
  2508  0401  0AA3               	incf	Rotation90@i+1,f
  2509  0402  3000               	movlw	0
  2510  0403  07A3               	addwf	Rotation90@i+1,f
  2511  0404  3000               	movlw	0
  2512  0405  0223               	subwf	Rotation90@i+1,w
  2513  0406  3032               	movlw	50
  2514  0407  1903               	skipnz
  2515  0408  0222               	subwf	Rotation90@i,w
  2516  0409  1C03               	skipc
  2517  040A  2C0C               	goto	u1471
  2518  040B  2C0D               	goto	u1470
  2519  040C                     u1471:
  2520  040C  2BE3               	goto	l260
  2521  040D                     u1470:
  2522  040D                     l2039:
  2523  040D  3001               	movlw	1
  2524  040E  00DF               	movwf	_isOpened
  2525  040F  3000               	movlw	0
  2526  0410  00E0               	movwf	_isOpened+1
  2527  0411                     l262:
  2528  0411  0008               	return
  2529  0412                     __end_of_Rotation90:
  2530                           
  2531                           	psect	text13
  2532  0444                     __ptext13:	
  2533 ;; *************** function _Rotation0 *****************
  2534 ;; Defined at:
  2535 ;;		line 189 in file "parkingCar.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;		None
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;  i               2    2[BANK0 ] unsigned int 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      void 
  2542 ;; Registers used:
  2543 ;;		wreg, status,2
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2549 ;;      Params:         0       0       0       0       0
  2550 ;;      Locals:         0       2       0       0       0
  2551 ;;      Temps:          0       2       0       0       0
  2552 ;;      Totals:         0       4       0       0       0
  2553 ;;Total ram usage:        4 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; Hardware stack levels required when called:    2
  2556 ;; This function calls:
  2557 ;;		Nothing
  2558 ;; This function is called by:
  2559 ;;		_main
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           
  2564                           ;psect for function _Rotation0
  2565  0444                     _Rotation0:
  2566  0444                     l2041:	
  2567                           ;incstack = 0
  2568                           ; Regs used in _Rotation0: [wreg+status,2]
  2569                           
  2570  0444  1283               	bcf	3,5	;RP0=0, select bank0
  2571  0445  1303               	bcf	3,6	;RP1=0, select bank0
  2572  0446  01A2               	clrf	Rotation0@i
  2573  0447  01A3               	clrf	Rotation0@i+1
  2574  0448                     l255:
  2575  0448  1486               	bsf	6,1	;volatile
  2576  0449                     l2047:
  2577  0449  3005               	movlw	5
  2578  044A  1283               	bcf	3,5	;RP0=0, select bank0
  2579  044B  1303               	bcf	3,6	;RP1=0, select bank0
  2580  044C  00A1               	movwf	??_Rotation0+1
  2581  044D  30AB               	movlw	171
  2582  044E  00A0               	movwf	??_Rotation0
  2583  044F                     u1647:
  2584  044F  0BA0               	decfsz	??_Rotation0,f
  2585  0450  2C4F               	goto	u1647
  2586  0451  0BA1               	decfsz	??_Rotation0+1,f
  2587  0452  2C4F               	goto	u1647
  2588  0453                     l2049:
  2589  0453  1283               	bcf	3,5	;RP0=0, select bank0
  2590  0454  1303               	bcf	3,6	;RP1=0, select bank0
  2591  0455  1086               	bcf	6,1	;volatile
  2592  0456  3064               	movlw	100
  2593  0457  1283               	bcf	3,5	;RP0=0, select bank0
  2594  0458  1303               	bcf	3,6	;RP1=0, select bank0
  2595  0459  00A1               	movwf	??_Rotation0+1
  2596  045A  3036               	movlw	54
  2597  045B  00A0               	movwf	??_Rotation0
  2598  045C                     u1657:
  2599  045C  0BA0               	decfsz	??_Rotation0,f
  2600  045D  2C5C               	goto	u1657
  2601  045E  0BA1               	decfsz	??_Rotation0+1,f
  2602  045F  2C5C               	goto	u1657
  2603  0460  0000               	nop
  2604  0461  3001               	movlw	1
  2605  0462  1283               	bcf	3,5	;RP0=0, select bank0
  2606  0463  1303               	bcf	3,6	;RP1=0, select bank0
  2607  0464  07A2               	addwf	Rotation0@i,f
  2608  0465  1803               	skipnc
  2609  0466  0AA3               	incf	Rotation0@i+1,f
  2610  0467  3000               	movlw	0
  2611  0468  07A3               	addwf	Rotation0@i+1,f
  2612  0469  3000               	movlw	0
  2613  046A  0223               	subwf	Rotation0@i+1,w
  2614  046B  3032               	movlw	50
  2615  046C  1903               	skipnz
  2616  046D  0222               	subwf	Rotation0@i,w
  2617  046E  1C03               	skipc
  2618  046F  2C71               	goto	u1481
  2619  0470  2C72               	goto	u1480
  2620  0471                     u1481:
  2621  0471  2C48               	goto	l255
  2622  0472                     u1480:
  2623  0472                     l2051:
  2624  0472  01DF               	clrf	_isOpened
  2625  0473  01E0               	clrf	_isOpened+1
  2626  0474                     l257:
  2627  0474  0008               	return
  2628  0475                     __end_of_Rotation0:
  2629                           
  2630                           	psect	text14
  2631  057C                     __ptext14:	
  2632 ;; *************** function _RFID_init *****************
  2633 ;; Defined at:
  2634 ;;		line 64 in file "parkingCar.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, status,2, status,0, pclath, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2648 ;;      Params:         0       0       0       0       0
  2649 ;;      Locals:         0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0
  2651 ;;      Totals:         0       0       0       0       0
  2652 ;;Total ram usage:        0 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    4
  2655 ;; This function calls:
  2656 ;;		_addNewID
  2657 ;; This function is called by:
  2658 ;;		_main
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           
  2663                           ;psect for function _RFID_init
  2664  057C                     _RFID_init:
  2665  057C                     l1995:	
  2666                           ;incstack = 0
  2667                           ; Regs used in _RFID_init: [wreg+status,2+status,0+pclath+cstack]
  2668                           
  2669                           
  2670                           ;parkingCar.c: 65: }
  2671  057C  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2672  057D  120A  118A  253D  120A  118A  	fcall	_addNewID
  2673  0582                     l215:
  2674  0582  0008               	return
  2675  0583                     __end_of_RFID_init:
  2676                           
  2677                           	psect	text15
  2678  053D                     __ptext15:	
  2679 ;; *************** function _addNewID *****************
  2680 ;; Defined at:
  2681 ;;		line 59 in file "parkingCar.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  newID           1    wreg     PTR unsigned char 
  2684 ;;		 -> STR_1(13), 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;  newID           1    4[BANK0 ] PTR unsigned char 
  2687 ;;		 -> STR_1(13), 
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  1    wreg      void 
  2690 ;; Registers used:
  2691 ;;		wreg, status,2, status,0, pclath, cstack
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2697 ;;      Params:         0       0       0       0       0
  2698 ;;      Locals:         0       1       0       0       0
  2699 ;;      Temps:          0       1       0       0       0
  2700 ;;      Totals:         0       2       0       0       0
  2701 ;;Total ram usage:        2 bytes
  2702 ;; Hardware stack levels used:    1
  2703 ;; Hardware stack levels required when called:    3
  2704 ;; This function calls:
  2705 ;;		_eeprom_write
  2706 ;; This function is called by:
  2707 ;;		_RFID_init
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           
  2712                           ;psect for function _addNewID
  2713  053D                     _addNewID:
  2714                           
  2715                           ;incstack = 0
  2716                           ; Regs used in _addNewID: [wreg+status,2+status,0+pclath+cstack]
  2717                           ;addNewID@newID stored from wreg
  2718  053D  1283               	bcf	3,5	;RP0=0, select bank0
  2719  053E  1303               	bcf	3,6	;RP1=0, select bank0
  2720  053F  00A4               	movwf	addNewID@newID
  2721  0540                     l1943:
  2722                           
  2723                           ;parkingCar.c: 60: 
  2724  0540  0824               	movf	addNewID@newID,w
  2725  0541  00A3               	movwf	??_addNewID
  2726  0542  0823               	movf	??_addNewID,w
  2727  0543  00A0               	movwf	eeprom_write@value
  2728  0544  0876               	movf	_numberID,w
  2729  0545  120A  118A  23A8  120A  118A  	fcall	_eeprom_write
  2730  054A                     l1945:
  2731                           
  2732                           ;parkingCar.c: 61:     T1CKPS0 = 0;
  2733  054A  3001               	movlw	1
  2734  054B  07F6               	addwf	_numberID,f
  2735  054C  1803               	skipnc
  2736  054D  0AF7               	incf	_numberID+1,f
  2737  054E  3000               	movlw	0
  2738  054F  07F7               	addwf	_numberID+1,f
  2739  0550                     l212:
  2740  0550  0008               	return
  2741  0551                     __end_of_addNewID:
  2742                           
  2743                           	psect	text16
  2744  03A8                     __ptext16:	
  2745 ;; *************** function _eeprom_write *****************
  2746 ;; Defined at:
  2747 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\pic\__eewrite.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;  addr            1    wreg     unsigned char 
  2750 ;;  value           1    0[BANK0 ] unsigned char 
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;  addr            1    2[BANK0 ] unsigned char 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, status,2, status,0
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2762 ;;      Params:         0       1       0       0       0
  2763 ;;      Locals:         0       1       0       0       0
  2764 ;;      Temps:          0       1       0       0       0
  2765 ;;      Totals:         0       3       0       0       0
  2766 ;;Total ram usage:        3 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    2
  2769 ;; This function calls:
  2770 ;;		Nothing
  2771 ;; This function is called by:
  2772 ;;		_addNewID
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           
  2777                           ;psect for function _eeprom_write
  2778  03A8                     _eeprom_write:
  2779                           
  2780                           ;incstack = 0
  2781                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2782                           ;eeprom_write@addr stored from wreg
  2783  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2784  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2785  03AA  00A2               	movwf	eeprom_write@addr
  2786  03AB                     l382:	
  2787                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\pic\__eewrite.c: 6: eeprom_write(u
      +                          nsigned char addr, unsigned char value);C:\Program Files\Microchip\xc8\v2.30\pic\sources
      +                          \c90\pic\__eewrite.c: 7: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\pic\__ee
      +                          write.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); E
      +                          ECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCO
      +                          Nbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EEC
      +                          ON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  2788                           
  2789  03AB                     l383:
  2790  03AB  1683               	bsf	3,5	;RP0=1, select bank3
  2791  03AC  1703               	bsf	3,6	;RP1=1, select bank3
  2792  03AD  188C               	btfsc	12,1	;volsfr
  2793  03AE  2BB0               	goto	u1321
  2794  03AF  2BB1               	goto	u1320
  2795  03B0                     u1321:
  2796  03B0  2BAB               	goto	l383
  2797  03B1                     u1320:
  2798  03B1                     l1869:
  2799  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2800  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2801  03B3  0822               	movf	eeprom_write@addr,w
  2802  03B4  1283               	bcf	3,5	;RP0=0, select bank2
  2803  03B5  1703               	bsf	3,6	;RP1=1, select bank2
  2804  03B6  008D               	movwf	13	;volatile
  2805  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2806  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2807  03B9  0820               	movf	eeprom_write@value,w
  2808  03BA  1283               	bcf	3,5	;RP0=0, select bank2
  2809  03BB  1703               	bsf	3,6	;RP1=1, select bank2
  2810  03BC  008C               	movwf	12	;volatile
  2811  03BD                     l1871:
  2812  03BD  303F               	movlw	63
  2813  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2814  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2815  03C0  00A1               	movwf	??_eeprom_write
  2816  03C1  0821               	movf	??_eeprom_write,w
  2817  03C2  1683               	bsf	3,5	;RP0=1, select bank3
  2818  03C3  1703               	bsf	3,6	;RP1=1, select bank3
  2819  03C4  058C               	andwf	12,f	;volsfr
  2820  03C5                     l1873:
  2821  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  2822  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  2823  03C7  1003               	bcf	3,0	;volatile
  2824  03C8                     l1875:
  2825  03C8  1F8B               	btfss	11,7	;volatile
  2826  03C9  2BCB               	goto	u1331
  2827  03CA  2BCC               	goto	u1330
  2828  03CB                     u1331:
  2829  03CB  2BCD               	goto	l386
  2830  03CC                     u1330:
  2831  03CC                     l1877:
  2832  03CC  1403               	bsf	3,0	;volatile
  2833  03CD                     l386:
  2834  03CD  138B               	bcf	11,7	;volatile
  2835  03CE  1683               	bsf	3,5	;RP0=1, select bank3
  2836  03CF  1703               	bsf	3,6	;RP1=1, select bank3
  2837  03D0  150C               	bsf	12,2	;volsfr
  2838  03D1                     l1879:
  2839  03D1  3055               	movlw	85
  2840  03D2  008D               	movwf	13	;volsfr
  2841  03D3  30AA               	movlw	170
  2842  03D4  008D               	movwf	13	;volsfr
  2843  03D5                     l1881:
  2844  03D5  148C               	bsf	12,1	;volsfr
  2845  03D6                     l1883:
  2846  03D6  110C               	bcf	12,2	;volsfr
  2847  03D7                     l1885:
  2848  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2849  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  2850  03D9  1C03               	btfss	3,0	;volatile
  2851  03DA  2BDC               	goto	u1341
  2852  03DB  2BDD               	goto	u1340
  2853  03DC                     u1341:
  2854  03DC  2BDE               	goto	l389
  2855  03DD                     u1340:
  2856  03DD                     l1887:
  2857  03DD  178B               	bsf	11,7	;volatile
  2858  03DE                     l389:
  2859  03DE  0008               	return
  2860  03DF                     __end_of_eeprom_write:
  2861                           
  2862                           	psect	text17
  2863  01E6                     __ptext17:	
  2864 ;; *************** function _Lcd4_Init *****************
  2865 ;; Defined at:
  2866 ;;		line 183 in file "./lcd.h"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;		None
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;		None
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      void 
  2873 ;; Registers used:
  2874 ;;		wreg, status,2, status,0, pclath, cstack
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2880 ;;      Params:         0       0       0       0       0
  2881 ;;      Locals:         0       0       0       0       0
  2882 ;;      Temps:          0       2       0       0       0
  2883 ;;      Totals:         0       2       0       0       0
  2884 ;;Total ram usage:        2 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:    4
  2887 ;; This function calls:
  2888 ;;		_Lcd4_Cmd
  2889 ;;		_Lcd4_Port
  2890 ;; This function is called by:
  2891 ;;		_main
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           
  2896                           ;psect for function _Lcd4_Init
  2897  01E6                     _Lcd4_Init:
  2898  01E6                     l1985:	
  2899                           ;incstack = 0
  2900                           ; Regs used in _Lcd4_Init: [wreg+status,2+status,0+pclath+cstack]
  2901                           
  2902                           
  2903                           ;./lcd.h: 185: Lcd4_Port(0x00);
  2904  01E6  3000               	movlw	0
  2905  01E7  120A  118A  2501  120A  118A  	fcall	_Lcd4_Port
  2906  01EC                     l1987:
  2907                           
  2908                           ;./lcd.h: 186:    _delay((unsigned long)((20)*(16000000/4000.0)));
  2909  01EC  3068               	movlw	104
  2910  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  2911  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  2912  01EF  00A5               	movwf	??_Lcd4_Init+1
  2913  01F0  30E3               	movlw	227
  2914  01F1  00A4               	movwf	??_Lcd4_Init
  2915  01F2                     u1667:
  2916  01F2  0BA4               	decfsz	??_Lcd4_Init,f
  2917  01F3  29F2               	goto	u1667
  2918  01F4  0BA5               	decfsz	??_Lcd4_Init+1,f
  2919  01F5  29F2               	goto	u1667
  2920  01F6  29F7               	nop2
  2921  01F7                     l1989:
  2922                           
  2923                           ;./lcd.h: 187:   Lcd4_Cmd(0x03);
  2924  01F7  3003               	movlw	3
  2925  01F8  120A  118A  2521  120A  118A  	fcall	_Lcd4_Cmd
  2926                           
  2927                           ;./lcd.h: 188:  _delay((unsigned long)((5)*(16000000/4000.0)));
  2928  01FD  301A               	movlw	26
  2929  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  2930  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  2931  0200  00A5               	movwf	??_Lcd4_Init+1
  2932  0201  30F7               	movlw	247
  2933  0202  00A4               	movwf	??_Lcd4_Init
  2934  0203                     u1677:
  2935  0203  0BA4               	decfsz	??_Lcd4_Init,f
  2936  0204  2A03               	goto	u1677
  2937  0205  0BA5               	decfsz	??_Lcd4_Init+1,f
  2938  0206  2A03               	goto	u1677
  2939  0207  2A08               	nop2
  2940  0208                     l1991:
  2941                           
  2942                           ;./lcd.h: 189:   Lcd4_Cmd(0x03);
  2943  0208  3003               	movlw	3
  2944  0209  120A  118A  2521  120A  118A  	fcall	_Lcd4_Cmd
  2945  020E                     l1993:
  2946                           
  2947                           ;./lcd.h: 190:  _delay((unsigned long)((11)*(16000000/4000.0)));
  2948  020E  303A               	movlw	58
  2949  020F  1283               	bcf	3,5	;RP0=0, select bank0
  2950  0210  1303               	bcf	3,6	;RP1=0, select bank0
  2951  0211  00A5               	movwf	??_Lcd4_Init+1
  2952  0212  3022               	movlw	34
  2953  0213  00A4               	movwf	??_Lcd4_Init
  2954  0214                     u1687:
  2955  0214  0BA4               	decfsz	??_Lcd4_Init,f
  2956  0215  2A14               	goto	u1687
  2957  0216  0BA5               	decfsz	??_Lcd4_Init+1,f
  2958  0217  2A14               	goto	u1687
  2959  0218  0000               	nop
  2960                           
  2961                           ;./lcd.h: 191:   Lcd4_Cmd(0x03);
  2962  0219  3003               	movlw	3
  2963  021A  120A  118A  2521  120A  118A  	fcall	_Lcd4_Cmd
  2964                           
  2965                           ;./lcd.h: 193:   Lcd4_Cmd(0x02);
  2966  021F  3002               	movlw	2
  2967  0220  120A  118A  2521  120A  118A  	fcall	_Lcd4_Cmd
  2968                           
  2969                           ;./lcd.h: 194:  Lcd4_Cmd(0x02);
  2970  0225  3002               	movlw	2
  2971  0226  120A  118A  2521  120A  118A  	fcall	_Lcd4_Cmd
  2972                           
  2973                           ;./lcd.h: 195:   Lcd4_Cmd(0x08);
  2974  022B  3008               	movlw	8
  2975  022C  120A  118A  2521  120A  118A  	fcall	_Lcd4_Cmd
  2976                           
  2977                           ;./lcd.h: 196:  Lcd4_Cmd(0x00);
  2978  0231  3000               	movlw	0
  2979  0232  120A  118A  2521  120A  118A  	fcall	_Lcd4_Cmd
  2980                           
  2981                           ;./lcd.h: 197:  Lcd4_Cmd(0x0C);
  2982  0237  300C               	movlw	12
  2983  0238  120A  118A  2521  120A  118A  	fcall	_Lcd4_Cmd
  2984                           
  2985                           ;./lcd.h: 198:   Lcd4_Cmd(0x00);
  2986  023D  3000               	movlw	0
  2987  023E  120A  118A  2521  120A  118A  	fcall	_Lcd4_Cmd
  2988                           
  2989                           ;./lcd.h: 199:   Lcd4_Cmd(0x06);
  2990  0243  3006               	movlw	6
  2991  0244  120A  118A  2521  120A  118A  	fcall	_Lcd4_Cmd
  2992  0249                     l182:
  2993  0249  0008               	return
  2994  024A                     __end_of_Lcd4_Init:
  2995                           
  2996                           	psect	text18
  2997  0521                     __ptext18:	
  2998 ;; *************** function _Lcd4_Cmd *****************
  2999 ;; Defined at:
  3000 ;;		line 147 in file "./lcd.h"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  a               1    wreg     unsigned char 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  a               1    3[BANK0 ] unsigned char 
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, status,2, status,0, pclath, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3014 ;;      Params:         0       0       0       0       0
  3015 ;;      Locals:         0       1       0       0       0
  3016 ;;      Temps:          0       2       0       0       0
  3017 ;;      Totals:         0       3       0       0       0
  3018 ;;Total ram usage:        3 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; Hardware stack levels required when called:    3
  3021 ;; This function calls:
  3022 ;;		_Lcd4_Port
  3023 ;; This function is called by:
  3024 ;;		_Lcd4_Set_Cursor
  3025 ;;		_Lcd4_Init
  3026 ;;		_Lcd4_Clear
  3027 ;;		_Lcd4_Shift_Right
  3028 ;;		_Lcd4_Shift_Left
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           
  3033                           ;psect for function _Lcd4_Cmd
  3034  0521                     _Lcd4_Cmd:
  3035                           
  3036                           ;incstack = 0
  3037                           ; Regs used in _Lcd4_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3038                           ;Lcd4_Cmd@a stored from wreg
  3039  0521  1283               	bcf	3,5	;RP0=0, select bank0
  3040  0522  1303               	bcf	3,6	;RP1=0, select bank0
  3041  0523  00A3               	movwf	Lcd4_Cmd@a
  3042  0524                     l1839:
  3043                           
  3044                           ;./lcd.h: 147: void Lcd4_Cmd(char a);./lcd.h: 148: {;./lcd.h: 149:  RC0 = 0;
  3045  0524  1007               	bcf	7,0	;volatile
  3046  0525                     l1841:
  3047                           
  3048                           ;./lcd.h: 150:  Lcd4_Port(a);
  3049  0525  0823               	movf	Lcd4_Cmd@a,w
  3050  0526  120A  118A  2501  120A  118A  	fcall	_Lcd4_Port
  3051  052B                     l1843:
  3052                           
  3053                           ;./lcd.h: 151:  RC2 = 1;
  3054  052B  1283               	bcf	3,5	;RP0=0, select bank0
  3055  052C  1303               	bcf	3,6	;RP1=0, select bank0
  3056  052D  1507               	bsf	7,2	;volatile
  3057  052E                     l1845:
  3058                           
  3059                           ;./lcd.h: 152:   _delay((unsigned long)((4)*(16000000/4000.0)));
  3060  052E  3015               	movlw	21
  3061  052F  1283               	bcf	3,5	;RP0=0, select bank0
  3062  0530  1303               	bcf	3,6	;RP1=0, select bank0
  3063  0531  00A2               	movwf	??_Lcd4_Cmd+1
  3064  0532  30C5               	movlw	197
  3065  0533  00A1               	movwf	??_Lcd4_Cmd
  3066  0534                     u1697:
  3067  0534  0BA1               	decfsz	??_Lcd4_Cmd,f
  3068  0535  2D34               	goto	u1697
  3069  0536  0BA2               	decfsz	??_Lcd4_Cmd+1,f
  3070  0537  2D34               	goto	u1697
  3071  0538  2D39               	nop2
  3072  0539                     l1847:
  3073                           
  3074                           ;./lcd.h: 153:   RC2 = 0;
  3075  0539  1283               	bcf	3,5	;RP0=0, select bank0
  3076  053A  1303               	bcf	3,6	;RP1=0, select bank0
  3077  053B  1107               	bcf	7,2	;volatile
  3078  053C                     l170:
  3079  053C  0008               	return
  3080  053D                     __end_of_Lcd4_Cmd:
  3081                           
  3082                           	psect	text19
  3083  0501                     __ptext19:	
  3084 ;; *************** function _Lcd4_Port *****************
  3085 ;; Defined at:
  3086 ;;		line 125 in file "./lcd.h"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  a               1    wreg     unsigned char 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  a               1    0[BANK0 ] unsigned char 
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3100 ;;      Params:         0       0       0       0       0
  3101 ;;      Locals:         0       1       0       0       0
  3102 ;;      Temps:          0       0       0       0       0
  3103 ;;      Totals:         0       1       0       0       0
  3104 ;;Total ram usage:        1 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:    2
  3107 ;; This function calls:
  3108 ;;		Nothing
  3109 ;; This function is called by:
  3110 ;;		_Lcd4_Cmd
  3111 ;;		_Lcd4_Init
  3112 ;;		_Lcd4_Write_Char
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           
  3117                           ;psect for function _Lcd4_Port
  3118  0501                     _Lcd4_Port:
  3119                           
  3120                           ;incstack = 0
  3121                           ; Regs used in _Lcd4_Port: [wreg]
  3122                           ;Lcd4_Port@a stored from wreg
  3123  0501  1283               	bcf	3,5	;RP0=0, select bank0
  3124  0502  1303               	bcf	3,6	;RP1=0, select bank0
  3125  0503  00A0               	movwf	Lcd4_Port@a
  3126  0504                     l1781:
  3127                           
  3128                           ;./lcd.h: 125: void Lcd4_Port(char a);./lcd.h: 126: {;./lcd.h: 127:  if(a & 1)
  3129  0504  1C20               	btfss	Lcd4_Port@a,0
  3130  0505  2D07               	goto	u1141
  3131  0506  2D08               	goto	u1140
  3132  0507                     u1141:
  3133  0507  2D0A               	goto	l159
  3134  0508                     u1140:
  3135  0508                     l1783:
  3136                           
  3137                           ;./lcd.h: 128:   RD4 = 1;
  3138  0508  1608               	bsf	8,4	;volatile
  3139  0509  2D0B               	goto	l160
  3140  050A                     l159:	
  3141                           ;./lcd.h: 129:  else
  3142                           
  3143                           
  3144                           ;./lcd.h: 130:   RD4 = 0;
  3145  050A  1208               	bcf	8,4	;volatile
  3146  050B                     l160:
  3147                           
  3148                           ;./lcd.h: 132:  if(a & 2)
  3149  050B  1CA0               	btfss	Lcd4_Port@a,1
  3150  050C  2D0E               	goto	u1151
  3151  050D  2D0F               	goto	u1150
  3152  050E                     u1151:
  3153  050E  2D11               	goto	l161
  3154  050F                     u1150:
  3155  050F                     l1785:
  3156                           
  3157                           ;./lcd.h: 133:   RD5 = 1;
  3158  050F  1688               	bsf	8,5	;volatile
  3159  0510  2D12               	goto	l162
  3160  0511                     l161:	
  3161                           ;./lcd.h: 134:  else
  3162                           
  3163                           
  3164                           ;./lcd.h: 135:   RD5 = 0;
  3165  0511  1288               	bcf	8,5	;volatile
  3166  0512                     l162:
  3167                           
  3168                           ;./lcd.h: 137:  if(a & 4)
  3169  0512  1D20               	btfss	Lcd4_Port@a,2
  3170  0513  2D15               	goto	u1161
  3171  0514  2D16               	goto	u1160
  3172  0515                     u1161:
  3173  0515  2D18               	goto	l163
  3174  0516                     u1160:
  3175  0516                     l1787:
  3176                           
  3177                           ;./lcd.h: 138:   RD6 = 1;
  3178  0516  1708               	bsf	8,6	;volatile
  3179  0517  2D19               	goto	l164
  3180  0518                     l163:	
  3181                           ;./lcd.h: 139:  else
  3182                           
  3183                           
  3184                           ;./lcd.h: 140:   RD6 = 0;
  3185  0518  1308               	bcf	8,6	;volatile
  3186  0519                     l164:
  3187                           
  3188                           ;./lcd.h: 142:  if(a & 8)
  3189  0519  1DA0               	btfss	Lcd4_Port@a,3
  3190  051A  2D1C               	goto	u1171
  3191  051B  2D1D               	goto	u1170
  3192  051C                     u1171:
  3193  051C  2D1F               	goto	l165
  3194  051D                     u1170:
  3195  051D                     l1789:
  3196                           
  3197                           ;./lcd.h: 143:   RD7 = 1;
  3198  051D  1788               	bsf	8,7	;volatile
  3199  051E  2D20               	goto	l167
  3200  051F                     l165:	
  3201                           ;./lcd.h: 144:  else
  3202                           
  3203                           
  3204                           ;./lcd.h: 145:   RD7 = 0;
  3205  051F  1388               	bcf	8,7	;volatile
  3206  0520                     l167:
  3207  0520  0008               	return
  3208  0521                     __end_of_Lcd4_Port:
  3209                           
  3210                           	psect	text20
  3211  0475                     __ptext20:	
  3212 ;; *************** function _ISR *****************
  3213 ;; Defined at:
  3214 ;;		line 215 in file "parkingCar.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;		None
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;		None
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0, pclath, cstack
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3228 ;;      Params:         0       0       0       0       0
  3229 ;;      Locals:         0       0       0       0       0
  3230 ;;      Temps:          2       0       0       0       0
  3231 ;;      Totals:         2       0       0       0       0
  3232 ;;Total ram usage:        2 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    1
  3235 ;; This function calls:
  3236 ;;		i1_Rotation90
  3237 ;; This function is called by:
  3238 ;;		Interrupt level 1
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           
  3243                           ;psect for function _ISR
  3244  0475                     _ISR:
  3245  0475                     i1l1761:
  3246  0475  1C8B               	btfss	11,1	;volatile
  3247  0476  2C78               	goto	u111_21
  3248  0477  2C79               	goto	u111_20
  3249  0478                     u111_21:
  3250  0478  2C83               	goto	i1l1769
  3251  0479                     u111_20:
  3252  0479                     i1l1763:
  3253  0479  120A  118A  24A6  120A  118A  	fcall	i1_Rotation90
  3254  047E                     i1l1765:
  3255  047E  1283               	bcf	3,5	;RP0=0, select bank0
  3256  047F  1303               	bcf	3,6	;RP1=0, select bank0
  3257  0480  01E1               	clrf	_lock
  3258  0481  01E2               	clrf	_lock+1
  3259  0482                     i1l1767:
  3260  0482  108B               	bcf	11,1	;volatile
  3261  0483                     i1l1769:
  3262  0483  1283               	bcf	3,5	;RP0=0, select bank0
  3263  0484  1303               	bcf	3,6	;RP1=0, select bank0
  3264  0485  1C0C               	btfss	12,0	;volatile
  3265  0486  2C88               	goto	u112_21
  3266  0487  2C89               	goto	u112_20
  3267  0488                     u112_21:
  3268  0488  2C9F               	goto	i1l270
  3269  0489                     u112_20:
  3270  0489                     i1l1771:
  3271  0489  3001               	movlw	1
  3272  048A  07F8               	addwf	_counter,f
  3273  048B  1803               	skipnc
  3274  048C  0AF9               	incf	_counter+1,f
  3275  048D  3000               	movlw	0
  3276  048E  07F9               	addwf	_counter+1,f
  3277  048F                     i1l1773:
  3278  048F  304B               	movlw	75
  3279  0490  0678               	xorwf	_counter,w
  3280  0491  0479               	iorwf	_counter+1,w
  3281  0492  1D03               	btfss	3,2
  3282  0493  2C95               	goto	u113_21
  3283  0494  2C96               	goto	u113_20
  3284  0495                     u113_21:
  3285  0495  2C9E               	goto	i1l1779
  3286  0496                     u113_20:
  3287  0496                     i1l1775:
  3288  0496  3001               	movlw	1
  3289  0497  07E3               	addwf	_parkingTime,f
  3290  0498  1803               	skipnc
  3291  0499  0AE4               	incf	_parkingTime+1,f
  3292  049A  3000               	movlw	0
  3293  049B  07E4               	addwf	_parkingTime+1,f
  3294  049C                     i1l1777:
  3295  049C  01F8               	clrf	_counter
  3296  049D  01F9               	clrf	_counter+1
  3297  049E                     i1l1779:
  3298  049E  100C               	bcf	12,0	;volatile
  3299  049F                     i1l270:
  3300  049F  0875               	movf	??_ISR+1,w
  3301  04A0  008A               	movwf	10
  3302  04A1  0E74               	swapf	??_ISR,w
  3303  04A2  0083               	movwf	3
  3304  04A3  0EFE               	swapf	btemp,f
  3305  04A4  0E7E               	swapf	btemp,w
  3306  04A5  0009               	retfie
  3307  04A6                     __end_of_ISR:
  3308                           
  3309                           	psect	intentry
  3310  0004                     __pintentry:	
  3311                           ;incstack = 0
  3312                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  3313                           
  3314  0004                     interrupt_function:
  3315  007E                     saved_w	set	btemp
  3316  0004  00FE               	movwf	btemp
  3317  0005  0E03               	swapf	3,w
  3318  0006  00F4               	movwf	??_ISR
  3319  0007  080A               	movf	10,w
  3320  0008  00F5               	movwf	??_ISR+1
  3321  0009  120A  118A  2C75   	ljmp	_ISR
  3322                           
  3323                           	psect	text21
  3324  04A6                     __ptext21:	
  3325 ;; *************** function i1_Rotation90 *****************
  3326 ;; Defined at:
  3327 ;;		line 202 in file "parkingCar.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;		None
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  i               2    2[COMMON] unsigned int 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      void 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3341 ;;      Params:         0       0       0       0       0
  3342 ;;      Locals:         2       0       0       0       0
  3343 ;;      Temps:          2       0       0       0       0
  3344 ;;      Totals:         4       0       0       0       0
  3345 ;;Total ram usage:        4 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_ISR
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           
  3355                           ;psect for function i1_Rotation90
  3356  04A6                     i1_Rotation90:
  3357  04A6                     i1l1665:	
  3358                           ;incstack = 0
  3359                           ; Regs used in i1_Rotation90: [wreg+status,2]
  3360                           
  3361  04A6  01F2               	clrf	i1Rotation90@i
  3362  04A7  01F3               	clrf	i1Rotation90@i+1
  3363  04A8                     i1l260:
  3364  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  3365  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  3366  04AA  1486               	bsf	6,1	;volatile
  3367  04AB                     i1l1671:
  3368  04AB  300B               	movlw	11
  3369  04AC  00F1               	movwf	??i1_Rotation90+1
  3370  04AD  301F               	movlw	31
  3371  04AE  00F0               	movwf	??i1_Rotation90
  3372  04AF                     u170_27:
  3373  04AF  0BF0               	decfsz	??i1_Rotation90,f
  3374  04B0  2CAF               	goto	u170_27
  3375  04B1  0BF1               	decfsz	??i1_Rotation90+1,f
  3376  04B2  2CAF               	goto	u170_27
  3377  04B3  2CB4               	nop2
  3378  04B4                     i1l1673:
  3379  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  3380  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  3381  04B6  1086               	bcf	6,1	;volatile
  3382  04B7  305E               	movlw	94
  3383  04B8  00F1               	movwf	??i1_Rotation90+1
  3384  04B9  30C3               	movlw	195
  3385  04BA  00F0               	movwf	??i1_Rotation90
  3386  04BB                     u171_27:
  3387  04BB  0BF0               	decfsz	??i1_Rotation90,f
  3388  04BC  2CBB               	goto	u171_27
  3389  04BD  0BF1               	decfsz	??i1_Rotation90+1,f
  3390  04BE  2CBB               	goto	u171_27
  3391  04BF  3001               	movlw	1
  3392  04C0  07F2               	addwf	i1Rotation90@i,f
  3393  04C1  1803               	skipnc
  3394  04C2  0AF3               	incf	i1Rotation90@i+1,f
  3395  04C3  3000               	movlw	0
  3396  04C4  07F3               	addwf	i1Rotation90@i+1,f
  3397  04C5  3000               	movlw	0
  3398  04C6  0273               	subwf	i1Rotation90@i+1,w
  3399  04C7  3032               	movlw	50
  3400  04C8  1903               	skipnz
  3401  04C9  0272               	subwf	i1Rotation90@i,w
  3402  04CA  1C03               	skipc
  3403  04CB  2CCD               	goto	u99_21
  3404  04CC  2CCE               	goto	u99_20
  3405  04CD                     u99_21:
  3406  04CD  2CA8               	goto	i1l260
  3407  04CE                     u99_20:
  3408  04CE                     i1l1675:
  3409  04CE  3001               	movlw	1
  3410  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  3411  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  3412  04D1  00DF               	movwf	_isOpened
  3413  04D2  3000               	movlw	0
  3414  04D3  00E0               	movwf	_isOpened+1
  3415  04D4                     i1l262:
  3416  04D4  0008               	return
  3417  04D5                     __end_ofi1_Rotation90:
  3418  007E                     btemp	set	126	;btemp
  3419  007E                     wtemp0	set	126
  3420                           
  3421                           	psect	config
  3422                           
  3423                           ;Config register CONFIG @ 0x2007
  3424                           ;	Oscillator Selection bits
  3425                           ;	FOSC = HS, HS oscillator
  3426                           ;	Watchdog Timer Enable bit
  3427                           ;	WDTE = OFF, WDT disabled
  3428                           ;	Power-up Timer Enable bit
  3429                           ;	PWRTE = ON, PWRT enabled
  3430                           ;	Brown-out Reset Enable bit
  3431                           ;	BOREN = ON, BOR enabled
  3432                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3433                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3434                           ;	Data EEPROM Memory Code Protection bit
  3435                           ;	CPD = OFF, Data EEPROM code protection off
  3436                           ;	Flash Program Memory Write Enable bits
  3437                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3438                           ;	In-Circuit Debugger Mode bit
  3439                           ;	DEBUG = 0x1, unprogrammed default
  3440                           ;	Flash Program Memory Code Protection bit
  3441                           ;	CP = OFF, Code protection off
  3442  2007                     	org	8199
  3443  2007  3F72               	dw	16242

Data Sizes:
    Strings     45
    Constant    0
    Data        2
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     63      71
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    addNewID@newID	PTR unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    Lcd4_Write_String@a	PTR unsigned char  size(2) Largest target is 512
		 -> STR_5(CODE[10]), RAM(DATA[512]), STR_4(CODE[8]), STR_3(CODE[7]), 
		 -> STR_2(CODE[7]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_Rotation90

Critical Paths under _main in BANK0

    _main->_checkGateStatus
    _checkGateStatus->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _Lcd4_Write_String->_Lcd4_Write_Char
    _Lcd4_Write_Char->_Lcd4_Port
    _Lcd4_Set_Cursor->_Lcd4_Cmd
    _RFID_init->_addNewID
    _addNewID->_eeprom_write
    _Lcd4_Init->_Lcd4_Cmd
    _Lcd4_Cmd->_Lcd4_Port

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    6573
                                             48 BANK0     15    15      0
                          _Lcd4_Init
                    _Lcd4_Set_Cursor
                  _Lcd4_Write_String
                          _RFID_init
                          _Rotation0
                         _Rotation90
                          _UART_Init
                       _UART_Receive
                    _checkGateStatus
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkGateStatus                                     21    21      0    3996
                                             27 BANK0     21    21      0
                    _Lcd4_Set_Cursor
                  _Lcd4_Write_String
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 9     3      6    2226
                                             18 BANK0      9     3      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                10     4      6    1723
                                              8 BANK0     10     4      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd4_Write_String                                    4     2      2     834
                                              6 BANK0      4     2      2
                    _Lcd4_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd4_Write_Char                                      5     5      0     254
                                              1 BANK0      5     5      0
                          _Lcd4_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd4_Set_Cursor                                      7     6      1     905
                                              4 BANK0      7     6      1
                           _Lcd4_Cmd
 ---------------------------------------------------------------------------------
 (1) _UART_Receive                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Rotation90                                           4     4      0      68
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Rotation0                                            4     4      0      68
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _RFID_init                                            0     0      0     219
                           _addNewID
 ---------------------------------------------------------------------------------
 (2) _addNewID                                             2     2      0     219
                                              3 BANK0      2     2      0
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         3     2      1     152
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _Lcd4_Init                                            2     2      0     279
                                              4 BANK0      2     2      0
                           _Lcd4_Cmd
                          _Lcd4_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd4_Cmd                                             3     3      0     155
                                              1 BANK0      3     3      0
                          _Lcd4_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd4_Port                                            1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0      46
                                              4 COMMON     2     2      0
                       i1_Rotation90
 ---------------------------------------------------------------------------------
 (6) i1_Rotation90                                         4     4      0      46
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd4_Init
     _Lcd4_Cmd
       _Lcd4_Port
     _Lcd4_Port
   _Lcd4_Set_Cursor
     _Lcd4_Cmd
       _Lcd4_Port
   _Lcd4_Write_String
     _Lcd4_Write_Char
       _Lcd4_Port
   _RFID_init
     _addNewID
       _eeprom_write
   _Rotation0
   _Rotation90
   _UART_Init
   _UART_Receive
   _checkGateStatus
     _Lcd4_Set_Cursor
       _Lcd4_Cmd
         _Lcd4_Port
     _Lcd4_Write_String
       _Lcd4_Write_Char
         _Lcd4_Port
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _timerInit

 _ISR (ROOT)
   i1_Rotation90

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3F      47       5       88.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      51      12        0.0%
ABS                  0      0      51       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Jun 07 10:27:53 2021

              i1_Rotation90 04A6                           pc 0002           ??_Lcd4_Write_Char 0021  
                        fsr 0004                         l101 0563                         l104 0573  
                       l106 0579                         l107 057B                         l212 0550  
                       l215 0582                         l160 050B                         l161 0511  
                       l162 0512                         l170 053C                         l163 0518  
                       l235 01E5                         l164 0519                         l260 03E3  
                       l165 051F                         l229 0572                         l182 0249  
                       l262 0411                         l167 0520                         l159 050A  
                       l255 0448                         l191 0443                         l247 00F8  
                       l257 0474                         l185 032E                         l179 02A3  
                       l382 03AB                         l383 03AB                         l386 03CD  
                       l389 03DE                         l665 02E9                         l675 03A7  
                       l853 015D                         l855 017C                         l847 0500  
                       _GIE 005F                         _RB0 0030                         _RB1 0031  
                       _RB2 0032                         _RC0 0038                         _RB3 0033  
                       _RC2 003A                         _RB5 0035                         _RB6 0036  
                       _RB7 0037                         _RC5 003D                         _RD4 0044  
                       _RD5 0045                         _RD6 0046                         _RD7 0047  
                       _ISR 0475                         fsr0 0004                         indf 0000  
         _Lcd4_Write_String 0412                        ?_ISR 0070          ?_Lcd4_Write_String 0026  
                      l2001 056E                        l2011 0186                        l2003 056F  
                      l2021 01B0                        l2013 018E                        l2005 0570  
                      l2023 01BB                        l2015 0198                        l2007 0571  
                      l2111 00AD                        l2103 0085                        l2041 0444  
                      l2025 01CE                        l2017 01A1                        l2009 017D  
                      l2121 00CD                        l2113 00B5                        l2105 008C  
                      l2051 0472                        l2035 03E4                        l2027 01DA  
                      l2019 01A9                        l2131 00E4                        l2123 00D1  
                      l2115 00BB                        l2107 009A                        l2037 03EE  
                      l2029 03DF                        l2133 00EA                        l2125 00D6  
                      l2117 00C0                        l2109 00A0                        l2061 002E  
                      l2047 0449                        l2039 040D                        l2135 00EF  
                      l2119 00C4                        l2127 00DC                        l2071 0044  
                      l2063 0033                        l2049 0453                        l2129 00E0  
                      l2081 005C                        l2073 0047                        l2065 003E  
                      l2091 006D                        l2083 005D                        l2075 004B  
                      l2067 0041                        l2059 0029                        l2093 0078  
                      l2085 005E                        l2077 004E                        l2069 0042  
                      l2095 007D                        l2087 0063                        l2079 005B  
                      l1801 02BC                        l2097 0083                        l2089 0066  
                      l1811 02DF                        l1803 02C0                        l1805 02D1  
                      l1813 02E5                        l1821 0377                        l1901 012D  
                      l1807 02D7                        l1831 0396                        l1823 037E  
                      l1911 016A                        l1903 0140                        l1841 0525  
                      l1921 0252                        l1809 02D8                        l1833 039D  
                      l1825 0382                        l1817 036C                        l1913 0170  
                      l1905 0153                        l1843 052B                        l1931 0295  
                      l1923 0269                        l1851 02F7                        l1827 0386  
                      l1819 0374                        l1835 03A3                        l1915 0176  
                      l1907 0159                        l1781 0504                        l1845 052E  
                      l1933 029B                        l1925 026F                        l1861 0317  
                      l1853 02F8                        l1941 0431                        l1829 0390  
                      l1909 0161                        l1783 0508                        l1847 0539  
                      l1839 0524                        l1871 03BD                        l1943 0540  
                      l1927 0278                        l1919 024D                        l1863 031D  
                      l1855 0306                        l1935 0412                        l1791 02A4  
                      l1951 04DB                        l1785 050F                        l1881 03D5  
                      l1873 03C5                        l1945 054A                        l1961 0551  
                      l1929 027E                        l1865 0320                        l1857 0309  
                      l1849 02ED                        l1937 0417                        l1793 02A8  
                      l1953 04E4                        l1787 0516                        l1883 03D6  
                      l1875 03C8                        l1971 055D                        l1963 0554  
                      l1867 032B                        l1859 0314                        l1939 0429  
                      l1795 02AE                        l1891 0102                        l1955 04EA  
                      l1947 04D5                        l1789 051D                        l1885 03D7  
                      l1877 03CC                        l1869 03B1                        l1973 055E  
                      l1965 0556                        l1981 057A                        l1797 02B1  
                      l1893 0115                        l1957 04EF                        l1949 04D5  
                      l1991 0208                        l1887 03DD                        l1879 03D1  
                      l1975 055F                        l1967 0557                        l1799 02B8  
                      l1895 011B                        l1993 020E                        l1985 01E6  
                      l1977 0560                        l1969 055A                        l1897 0121  
                      l1889 00FC                        l1987 01EC                        l1995 057C  
                      l1979 0573                        l1899 0127                        l1989 01F7  
                      l1997 0564                        l1999 056C                        STR_1 033F  
                      STR_2 035E                        STR_3 0365                        STR_4 0356  
                      STR_5 034C                        _BRGH 04C2                        _CREN 00C4  
                      u1200 02C0                        u1201 02BF                        u1140 0508  
                      u1220 02D1                        u1300 03A3                        u1141 0507  
                      u1221 02D0                        u1301 03A2                        u1150 050F  
                      u1151 050E                        u1215 02C1                        u1160 0516  
                      u1320 03B1                        u1400 027E                        u1240 02E5  
                      u1161 0515                        u1321 03B0                        u1401 027D  
                      u1241 02E4                        u1225 02CD               i1Rotation90@i 0072  
                      u1170 051D                        u1330 03CC                        u1250 0374  
                      u1171 051C                        u1331 03CB                        u1315 02FB  
                      u1235 02D9                        u1251 0373                        u1340 03DD  
                      u1420 0443                        u1180 02AE                        u1341 03DC  
                      u1421 0442                        u1181 02AD                        u1270 0386  
                      u1350 0121                        u1430 04DB                        u1510 0083  
                      u1415 0286                        u1271 0385                        u1351 0120  
                      u1431 04DA                        u1511 0082                        u1440 0579  
                      u1280 0390                        u1360 0159                        u1520 00AD  
                      u1504 005B                        u1441 0578                        u1281 038F  
                      u1265 0378                        u1361 0158                        u1521 00AC  
                      u1370 0176                        u1450 018E                        u1530 00B5  
                      u1195 02B2                        u1371 0175                        u1451 018D  
                      u1531 00B4                        u1380 0252                        u1460 01A9  
                      u1540 00BB                        u1381 0251                        u1285 038C  
                      u1461 01A8                        u1541 00BA                        u1525 00A9  
                      u1470 040D                        u1550 00CD                        u1471 040C  
                      u1607 030F                        u1295 0397                        u1551 00CC  
                      u1480 0472                        u1560 00D1                        u1481 0471  
                      u1617 0326                        u1561 00D0                        u1570 00E0  
                      u1490 0058                        u1627 03EA                        u1395 025A  
                      u1571 00DF                        u1491 0054                        u1580 00E4  
                      u1637 03F7                        u1581 00E3                        u1590 00EA  
                      u1647 044F                        u1591 00E9                        u1657 045C  
                      u1667 01F2                        u1677 0203                        u1687 0214  
                      u1697 0534                        _PEIE 005E                        _INTE 005C  
                      _INTF 0059                        _RCIE 0465                        _RCIF 0065  
                      _TMR1 000E                        _SPEN 00C7                        _SYNC 04C4  
            ??_eeprom_write 0021                        _main 0029                        _lock 0061  
                      _park 0065                        _itoa 04D5                        btemp 007E  
                      _utoa 00FC         ??_Lcd4_Write_String 0028                        start 000C  
                     ??_ISR 0074            ?_checkGateStatus 0070          __size_of_RFID_init 0007  
                     ?_main 0070                       ?_itoa 0032                       _EEADR 010D  
                     ?_utoa 0028             __end_of___lwdiv 02EA                       i1l260 04A8  
                     i1l262 04D4                       i1l270 049F             __end_of___lwmod 03A8  
 __end_of_Lcd4_Write_String 0444                       _RCREG 001A                       _SPBRG 0099  
                     _PORTB 0006                       _TRISB 0086                       _TRISC 0087  
                     _TRISD 0088                       u99_20 04CE                       u99_21 04CD  
        __size_of_UART_Init 0013                       main@i 005D                       pclath 000A  
          __end_of_Lcd4_Cmd 053D                       utoa@c 0031                       utoa@v 002F  
                     status 0003                       wtemp0 007E             __initialization 000F  
        __size_of_Lcd4_Init 0064          __size_of_Lcd4_Port 0020                __end_of_main 00FC  
              __end_of_itoa 0501                __end_of_utoa 017D                      ??_main 0050  
                    ??_itoa 0038                      ??_utoa 002E             _Lcd4_Set_Cursor 024A  
          __end_of_addNewID 0551                      _EEDATA 010C                      _EECON1 018C  
                    _EECON2 018D            Lcd4_Write_Char@a 0025            Lcd4_Write_Char@y 0024  
                    u111_20 0479                      u111_21 0478                      u112_20 0489  
                    u112_21 0488                      u113_20 0496                      u113_21 0495  
                    i1l1671 04AB                      i1l1673 04B4                      i1l1665 04A6  
                    i1l1761 0475                      i1l1675 04CE                      i1l1771 0489  
                    i1l1763 0479                      i1l1773 048F                      i1l1765 047E  
                    i1l1775 0496                      i1l1767 0482                      i1l1777 049C  
                    i1l1769 0483                      i1l1779 049E                      _INTEDG 040E  
                    u170_27 04AF                      u171_27 04BB                      _TMR1IE 0460  
                    _TMR1IF 0060                      _TMR1CS 0081                      _TMR1ON 0080  
         __end_of_RFID_init 0583                      _TRISA0 0428                      _TRISA1 0429  
                    _TRISC6 043E                      _TRISC7 043F           __end_of_UART_Init 0564  
                 ??___lwdiv 0024                   ??___lwmod 0024        __end_of_eeprom_write 03DF  
                    main@id 0051  __size_of_Lcd4_Write_String 0032                      saved_w 007E  
                _Rotation90 03DF          __size_of_Rotation0 0031           __end_of_Lcd4_Init 024A  
         __end_of_Lcd4_Port 0521     __end_of__initialization 0025                  Rotation0@i 0022  
           _Lcd4_Write_Char 02EA              __pcstackCOMMON 0070                __pidataBANK0 0583  
   __end_of_Lcd4_Set_Cursor 02A4               addNewID@newID 0024                   ?_Lcd4_Cmd 0070  
         eeprom_write@value 0020                  __pbssBANK0 005F                  __pmaintext 0029  
         __end_of_Rotation0 0475                  __pintentry 0004                   ?_addNewID 0070  
                   _T1CKPS0 0084                     _T1CKPS1 0085                  ??_Lcd4_Cmd 0021  
        __size_of_timerInit 000F                 ?_Rotation90 0070     __end_of_Lcd4_Write_Char 032F  
                __stringtab 032F               ?_UART_Receive 0070       __size_of_eeprom_write 0037  
                   ___lwdiv 02A4                     ___lwmod 036C                  ??_addNewID 0023  
          ?_Lcd4_Set_Cursor 0024                     __ptext1 0564                     __ptext2 017D  
                   __ptext3 04D5                     __ptext4 00FC                     __ptext5 036C  
                   __ptext6 02A4                     __ptext7 0412                     __ptext8 02EA  
                   __ptext9 024A                   Lcd4_Cmd@a 0023                __size_of_ISR 0031  
                   _counter 0078    __size_of_checkGateStatus 0069         Lcd4_Write_Char@temp 0023  
      end_of_initialization 0025              ??_UART_Receive 0020                     itoa@buf 0032  
                   itoa@val 0034                _eeprom_write 03A8           __end_of_timerInit 0573  
                 _RFID_init 057C         Lcd4_Set_Cursor@temp 0028         __size_of_Rotation90 0033  
                   utoa@buf 0028                     utoa@val 002A                   _UART_Init 0551  
          ?_Lcd4_Write_Char 0070                 Rotation90@i 0022                   _Lcd4_Init 01E6  
                 _Lcd4_Port 0501                  ?_RFID_init 0070               ?i1_Rotation90 0070  
                ?_UART_Init 0020         start_initialization 000F                 __end_of_ISR 04A6  
         __size_of_Lcd4_Cmd 001C           ??_checkGateStatus 003B                  ?_Lcd4_Init 0070  
                ?_Lcd4_Port 0070              ??i1_Rotation90 0070                 __pdataBANK0 0065  
                 _Rotation0 0444        __end_of_UART_Receive 057C           __size_of_addNewID 0014  
               __pbssCOMMON 0076                   ___latbits 0002               __pcstackBANK0 0020  
              ??_Rotation90 0020            eeprom_write@addr 0022            ___lwdiv@dividend 0022  
               ??_RFID_init 0025                    ?___lwdiv 0020          __end_of_Rotation90 0412  
                  ?___lwmod 0020                 ??_UART_Init 0022                   __pstrings 032F  
                ?_Rotation0 0070       checkGateStatus@string 003C            ___lwdiv@quotient 0026  
               ??_Lcd4_Init 0024           interrupt_function 0004                 ??_Lcd4_Port 0020  
                 _timerInit 0564                 __stringbase 033E                    _Lcd4_Cmd 0521  
  __size_of_Lcd4_Set_Cursor 005A        __end_ofi1_Rotation90 04D5          Lcd4_Write_String@a 0026  
        Lcd4_Write_String@i 0028                  _EECON1bits 018C       __size_of_UART_Receive 0009  
                ?_timerInit 0070            Lcd4_Set_Cursor@a 0027            Lcd4_Set_Cursor@b 0024  
          Lcd4_Set_Cursor@y 002A            Lcd4_Set_Cursor@z 0029                    _addNewID 053D  
          __size_of___lwdiv 0046            __size_of___lwmod 003C                 ??_Rotation0 0020  
        __end_of__stringtab 033F             _checkGateStatus 017D             ___lwdiv@divisor 0020  
           ___lwdiv@counter 0025                    __ptext10 0573                    __ptext11 0551  
                  __ptext20 0475                    __ptext12 03DF                    __ptext21 04A6  
                  __ptext13 0444                    __ptext14 057C                    __ptext15 053D  
                  __ptext16 03A8                    __ptext17 01E6                    __ptext18 0521  
                  __ptext19 0501                    _isOpened 005F               __size_of_main 00D3  
             __size_of_itoa 002C                _UART_Receive 0573               __size_of_utoa 0081  
                Lcd4_Port@a 0020    __size_of_Lcd4_Write_Char 0045                 _parkingTime 0063  
                  _numberID 0076                  _INTCONbits 000B                    itoa@base 0036  
                  intlevel1 0000           ??_Lcd4_Set_Cursor 0025            ___lwmod@dividend 0022  
                 stringcode 0339                 ??_timerInit 0020     __end_of_checkGateStatus 01E6  
                  utoa@base 002C       __size_ofi1_Rotation90 002F             ___lwmod@divisor 0020  
           ___lwmod@counter 0025                    stringdir 0339                    stringtab 032F  
             ?_eeprom_write 0020                  _STATUSbits 0003  
