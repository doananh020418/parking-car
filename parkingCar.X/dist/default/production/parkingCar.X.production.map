Microchip MPLAB XC8 Compiler V2.30

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.30\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\parkingCar.X.production.sym \
  --cmf=dist/default/production\parkingCar.X.production.cmf -z -Q16F877A \
  -oC:\Users\doank\AppData\Local\Temp\scecx2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/parkingCar.X.production.map -E1 \
  -ver=XC8 Compiler --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK \
  -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 \
  -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh \
  -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh \
  -ABANK3=0190h-01EFh -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02007h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 \
  -preset_vec=00h,intentry,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -k C:\Users\doank\AppData\Local\Temp\scecxh.o \
  dist/default/production\parkingCar.X.production.o 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\doank\AppData\Local\Temp\scecxh.o
                end_init                              0        0        3        0       0
                config                             2007     2007        1        0       4
dist/default/production\parkingCar.X.production.o
                cinit                               7F0      7F0       10      FE0       0
                config                             2007     2007        1        0       4
                text9                               6F7      6F7       3E      DEE       0
                text8                               682      682       1A      D04       0
                text7                               735      735       4E      E6A       0
                text6                               6B6      6B6       1C      D6C       0
                text5                               69C      69C       1A      D38       0
                text4                               6D2      6D2       25      DA4       0
                text3                               659      659        9      CB2       0
                text2                               671      671       11      CE2       0
                text1                               662      662        F      CC4       0
                maintext                            783      783       6D      F06       0
                cstackBANK0                          20       20        E       20       1
                cstackCOMMON                         70       70        8       70       1
                bssBANK0                             2E       2E        4       20       1
                bssCOMMON                            78       78        6       70       1
                strings                               3        3       40        6       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              0        0        3         0
                cinit                               7F0      7F0       10         0
                text9                               6F7      6F7       3E         0
                text8                               682      682       1A         0
                text7                               735      735       4E         0
                text6                               6B6      6B6       1C         0
                text5                               69C      69C       1A         0
                text4                               6D2      6D2       25         0
                text3                               659      659        9         0
                text2                               671      671       11         0
                text1                               662      662        F         0
                maintext                            783      783       6D         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                               3        3       40         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        8         1
                bssCOMMON                            78       78        6         1

        CLASS   BANK0          
                cstackBANK0                          20       20        E         1
                bssBANK0                             2E       2E        4         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                strings                        000003  000040  000043         6       0  STRING      2
                cstackBANK0                    000020  000012  000032        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                text3                          000659  000009  000662       CB2       0  CODE        2
                text1                          000662  00000F  000671       CC4       0  CODE        2
                text2                          000671  000011  000682       CE2       0  CODE        2
                text8                          000682  00001A  00069C       D04       0  CODE        2
                text5                          00069C  00001A  0006B6       D38       0  CODE        2
                text6                          0006B6  00001C  0006D2       D6C       0  CODE        2
                text4                          0006D2  000025  0006F7       DA4       0  CODE        2
                text9                          0006F7  00003E  000735       DEE       0  CODE        2
                text7                          000735  00004E  000783       E6A       0  CODE        2
                maintext                       000783  00006D  0007F0       F06       0  CODE        2
                cinit                          0007F0  000010  000800       FE0       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0032-006F             3E           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0043-0658            616           2
                         0800-1FFF            800
        CONST            0043-0658            100           2
                         0800-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0043-0658            100           2
                         0800-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0032-006F             3E           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0043-0658            616           2
                         0800-1FFF           1800
        STRING           0043-0658            100           2
                         0800-1FFF            100

                                  Symbol Table

Lcd8_Cmd@a                  cstackCOMMON 0073
Lcd8_Port@a                 cstackCOMMON 0070
Lcd8_Set_Cursor@a           cstackCOMMON 0075
Lcd8_Set_Cursor@b           cstackCOMMON 0074
Lcd8_Write_Char@a           cstackCOMMON 0073
Lcd8_Write_String@a         cstackCOMMON 0076
Lcd8_Write_String@i         cstackCOMMON 0074
_GIE                        (abs)        005F
_INTE                       (abs)        005C
_INTEDG                     (abs)        040E
_Lcd8_Cmd                   text8        0682
_Lcd8_Init                  text7        0735
_Lcd8_Port                  text9        06F7
_Lcd8_Set_Cursor            text6        06B6
_Lcd8_Write_Char            text5        069C
_Lcd8_Write_String          text4        06D2
_PEIE                       (abs)        005E
_PORTB                      (abs)        0006
_RB1                        (abs)        0031
_RB7                        (abs)        0037
_RBIE                       (abs)        005B
_RC0                        (abs)        0038
_RC2                        (abs)        003A
_RC5                        (abs)        003D
_RCIF                       (abs)        0065
_RCREG                      (abs)        001A
_RCSTA                      (abs)        0018
_RD0                        (abs)        0040
_RD1                        (abs)        0041
_RD2                        (abs)        0042
_RD3                        (abs)        0043
_RD4                        (abs)        0044
_RD5                        (abs)        0045
_RD6                        (abs)        0046
_RD7                        (abs)        0047
_SPBRG                      (abs)        0099
_T1CKPS0                    (abs)        0084
_T1CKPS1                    (abs)        0085
_TMR1                       (abs)        000E
_TMR1CS                     (abs)        0081
_TMR1IE                     (abs)        0460
_TMR1IF                     (abs)        0060
_TMR1ON                     (abs)        0080
_TRISA0                     (abs)        0428
_TRISA1                     (abs)        0429
_TRISB                      (abs)        0086
_TRISC                      (abs)        0087
_TRISD                      (abs)        0088
_TXIF                       (abs)        0064
_TXREG                      (abs)        0019
_TXSTA                      (abs)        0098
__Habs1                     abs1         0000
__Hbank0                    bank0        0000
__Hbank1                    bank1        0000
__Hbank2                    bank2        0000
__Hbank3                    bank3        0000
__HbssBANK0                 bssBANK0     0000
__HbssCOMMON                bssCOMMON    0000
__Hcinit                    cinit        0800
__Hclrtext                  clrtext      0000
__Hcode                     code         0000
__Hcommon                   common       0000
__Hconfig                   config       2008
__HcstackBANK0              cstackBANK0  0000
__HcstackCOMMON             cstackCOMMON 0000
__Heeprom_data              eeprom_data  0000
__Hend_init                 end_init     0003
__Hfunctab                  functab      0000
__Hinit                     init         0000
__Hintentry                 intentry     0000
__Hmaintext                 maintext     0000
__Hpowerup                  powerup      0000
__Hram                      ram          0000
__Hreset_vec                reset_vec    0000
__Hsfr0                     sfr0         0000
__Hsfr1                     sfr1         0000
__Hsfr2                     sfr2         0000
__Hsfr3                     sfr3         0000
__Hspace_0                  (abs)        0800
__Hspace_1                  (abs)        007E
__Hspace_2                  (abs)        0000
__Hspace_3                  (abs)        0000
__Hspace_4                  (abs)        400F
__Hstack                    stack        0000
__Hstrings                  strings      0000
__Htext                     text         0000
__Labs1                     abs1         0000
__Lbank0                    bank0        0000
__Lbank1                    bank1        0000
__Lbank2                    bank2        0000
__Lbank3                    bank3        0000
__LbssBANK0                 bssBANK0     0000
__LbssCOMMON                bssCOMMON    0000
__Lcinit                    cinit        07F0
__Lclrtext                  clrtext      0000
__Lcode                     code         0000
__Lcommon                   common       0000
__Lconfig                   config       0000
__LcstackBANK0              cstackBANK0  0000
__LcstackCOMMON             cstackCOMMON 0000
__Leeprom_data              eeprom_data  0000
__Lend_init                 end_init     0000
__Lfunctab                  functab      0000
__Linit                     init         0000
__Lintentry                 intentry     0000
__Lmaintext                 maintext     0000
__Lpowerup                  powerup      0000
__Lram                      ram          0000
__Lreset_vec                reset_vec    0000
__Lsfr0                     sfr0         0000
__Lsfr1                     sfr1         0000
__Lsfr2                     sfr2         0000
__Lsfr3                     sfr3         0000
__Lspace_0                  (abs)        0000
__Lspace_1                  (abs)        0000
__Lspace_2                  (abs)        0000
__Lspace_3                  (abs)        0000
__Lspace_4                  (abs)        0000
__Lstack                    stack        0000
__Lstrings                  strings      0000
__Ltext                     text         0000
__S0                        (abs)        0800
__S1                        (abs)        007E
__S2                        (abs)        0000
__S3                        (abs)        0000
___int_sp                   stack        0000
___latbits                  (abs)        0002
___sp                       stack        0000
___stackhi                  (abs)        0000
___stacklo                  (abs)        0000
__end_of_Lcd8_Cmd           text8        069C
__end_of_Lcd8_Init          text7        0783
__end_of_Lcd8_Port          text9        0735
__end_of_Lcd8_Set_Cursor    text6        06D2
__end_of_Lcd8_Write_Char    text5        06B6
__end_of_Lcd8_Write_String  text4        06F7
__end_of__initialization    cinit        07FC
__end_of__stringtab         strings      0009
__end_of_main               maintext     07F0
__end_of_rx                 text3        0662
__end_of_ser_int            text2        0682
__end_of_timerInit          text1        0671
__initialization            cinit        07F0
__pbssBANK0                 bssBANK0     002E
__pbssCOMMON                bssCOMMON    0078
__pcstackBANK0              cstackBANK0  0020
__pcstackCOMMON             cstackCOMMON 0070
__pmaintext                 maintext     0783
__pstrings                  strings      0003
__ptext1                    text1        0662
__ptext2                    text2        0671
__ptext3                    text3        0659
__ptext4                    text4        06D2
__ptext5                    text5        069C
__ptext6                    text6        06B6
__ptext7                    text7        0735
__ptext8                    text8        0682
__ptext9                    text9        06F7
__size_of_Lcd8_Cmd          (abs)        0000
__size_of_Lcd8_Init         (abs)        0000
__size_of_Lcd8_Port         (abs)        0000
__size_of_Lcd8_Set_Cursor   (abs)        0000
__size_of_Lcd8_Write_Char   (abs)        0000
__size_of_Lcd8_Write_String (abs)        0000
__size_of_main              (abs)        0000
__size_of_rx                (abs)        0000
__size_of_ser_int           (abs)        0000
__size_of_timerInit         (abs)        0000
__stringbase                strings      0008
__stringtab                 strings      0003
_main                       maintext     0783
_numberID                   bssCOMMON    0078
_rx                         text3        0659
_ser_int                    text2        0671
_timerInit                  text1        0662
btemp                       (abs)        007E
end_of_initialization       cinit        07FC
intlevel0                   functab      0000
intlevel1                   functab      0000
intlevel2                   functab      0000
intlevel3                   functab      0000
intlevel4                   functab      0000
intlevel5                   functab      0000
main@i_168                  cstackBANK0  002C
main@id                     cstackBANK0  0020
reset_vec                   reset_vec    0000
start                       init         0000
start_initialization        cinit        07F0
wtemp0                      (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 123 in file "parkingCar.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   12[BANK0 ] int 
  id             12    0[BANK0 ] unsigned char [12]
  i               2    0        int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      14       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1      14       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd8_Init
		_Lcd8_Set_Cursor
		_Lcd8_Write_String
		_rx
		_ser_int
		_timerInit
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _timerInit *****************
 Defined at:
		line 93 in file "parkingCar.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ser_int *****************
 Defined at:
		line 251 in file "parkingCar.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _rx *****************
 Defined at:
		line 264 in file "parkingCar.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd8_Write_String *****************
 Defined at:
		line 105 in file "./lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     PTR unsigned char 
		 -> STR_6(5), STR_5(17), STR_4(7), STR_3(7), 
		 -> STR_2(9), 
 Auto vars:     Size  Location     Type
  a               1    6[COMMON] PTR unsigned char 
		 -> STR_6(5), STR_5(17), STR_4(7), STR_3(7), 
		 -> STR_2(9), 
  i               2    4[COMMON] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd8_Write_Char
 This function is called by:
		_main
		_checkGateStatus
 This function uses a non-reentrant model


 *************** function _Lcd8_Write_Char *****************
 Defined at:
		line 96 in file "./lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd8_Port
 This function is called by:
		_Lcd8_Write_String
 This function uses a non-reentrant model


 *************** function _Lcd8_Set_Cursor *****************
 Defined at:
		line 70 in file "./lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  b               1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  a               1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd8_Cmd
 This function is called by:
		_main
		_checkGateStatus
 This function uses a non-reentrant model


 *************** function _Lcd8_Init *****************
 Defined at:
		line 78 in file "./lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd8_Cmd
		_Lcd8_Port
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd8_Cmd *****************
 Defined at:
		line 56 in file "./lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd8_Port
 This function is called by:
		_Lcd8_Set_Cursor
		_Lcd8_Init
		_Lcd8_Clear
		_Lcd8_Shift_Right
		_Lcd8_Shift_Left
 This function uses a non-reentrant model


 *************** function _Lcd8_Port *****************
 Defined at:
		line 14 in file "./lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Lcd8_Cmd
		_Lcd8_Init
		_Lcd8_Write_Char
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
parkingCar.c
		_ser_int       		CODE           	0671	0000	17
		_main          		CODE           	0783	0000	109
		_timerInit     		CODE           	0662	0000	15
		_rx            		CODE           	0659	0000	9

parkingCar.c estimated size: 150

./lcd.h
		_Lcd8_Write_String		CODE           	06D2	0000	37
		_Lcd8_Set_Cursor		CODE           	06B6	0000	28
		_Lcd8_Init     		CODE           	0735	0000	78
		_Lcd8_Port     		CODE           	06F7	0000	62
		_Lcd8_Write_Char		CODE           	069C	0000	26
		_Lcd8_Cmd      		CODE           	0682	0000	26

./lcd.h estimated size: 257

shared
		__stringtab    		STRING         	0003	0000	6
		__initialization		CODE           	07F0	0000	12

shared estimated size: 18

